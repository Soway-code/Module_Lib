###############################################################################
#
# IAR ANSI C/C++ Compiler V8.50.4.261/W32 for ARM         10/Jan/2021  16:10:20
# Copyright 1999-2020 IAR Systems AB.
#
#    Cpu mode             
#    Endian            =  little
#    Source file       =
#        C:\Users\macanlin\Desktop\GD_modbus\Weight_F3_CarV1.1.5_ADXL345
#        -1-9\Source\System\uCOS-III\Source\os_prio.c
#    Command line      =
#        -f C:\Users\macanlin\AppData\Local\Temp\EWE97C.tmp
#        ("C:\Users\macanlin\Desktop\GD_modbus\Weight_F3_CarV1.1.5_ADXL345
#        -1-9\Source\System\uCOS-III\Source\os_prio.c" -D USE_STDPERIPH_DRIVER
#        -D STM32F072 -lC
#        "C:\Users\macanlin\Desktop\GD_modbus\Weight_F3_CarV1.1.5_ADXL345
#        -1-9\Project\Debug\List" -o
#        "C:\Users\macanlin\Desktop\GD_modbus\Weight_F3_CarV1.1.5_ADXL345
#        -1-9\Project\Debug\Obj" --no_cse --no_unroll --no_inline
#        --no_code_motion --no_tbaa --no_clustering --no_scheduling --debug
#        --endian=little --cpu=Cortex-M0 -e --fpu=None --dlib_config
#        C:\rj\IAR\arm\inc\c\DLib_Config_Normal.h -I
#        "C:\Users\macanlin\Desktop\GD_modbus\Weight_F3_CarV1.1.5_ADXL345
#        -1-9\Project\..\Source\BSP\inc\\" -I
#        "C:\Users\macanlin\Desktop\GD_modbus\Weight_F3_CarV1.1.5_ADXL345
#        -1-9\Project\..\Source\FWLib\inc\\" -I
#        "C:\Users\macanlin\Desktop\GD_modbus\Weight_F3_CarV1.1.5_ADXL345
#        -1-9\Project\..\Source\CMSIS\\" -I
#        "C:\Users\macanlin\Desktop\GD_modbus\Weight_F3_CarV1.1.5_ADXL345
#        -1-9\Project\..\Source\System\OS_Cfg\\" -I
#        "C:\Users\macanlin\Desktop\GD_modbus\Weight_F3_CarV1.1.5_ADXL345
#        -1-9\Project\..\Source\System\uC-CPU\\" -I
#        "C:\Users\macanlin\Desktop\GD_modbus\Weight_F3_CarV1.1.5_ADXL345
#        -1-9\Project\..\Source\System\uC-LIB\\" -I
#        "C:\Users\macanlin\Desktop\GD_modbus\Weight_F3_CarV1.1.5_ADXL345
#        -1-9\Project\..\Source\System\uCOS-III\Ports\\" -I
#        "C:\Users\macanlin\Desktop\GD_modbus\Weight_F3_CarV1.1.5_ADXL345
#        -1-9\Project\..\Source\System\uCOS-III\Source\\" -I
#        "C:\Users\macanlin\Desktop\GD_modbus\Weight_F3_CarV1.1.5_ADXL345
#        -1-9\Project\..\Source\APP\inc\\" -I
#        "C:\Users\macanlin\Desktop\GD_modbus\Weight_F3_CarV1.1.5_ADXL345
#        -1-9\Project\..\Source\FWLib\\" -I
#        "C:\Users\macanlin\Desktop\GD_modbus\Weight_F3_CarV1.1.5_ADXL345
#        -1-9\Project\..\Source\System\uC-LIB\\" -Ol -I
#        C:\rj\IAR\arm\CMSIS\Core\Include\\ -I
#        C:\rj\IAR\arm\CMSIS\DSP\Include\\)
#    Locale            =  C
#    List file         =
#        C:\Users\macanlin\Desktop\GD_modbus\Weight_F3_CarV1.1.5_ADXL345
#        -1-9\Project\Debug\List\os_prio.lst
#    Object file       =
#        C:\Users\macanlin\Desktop\GD_modbus\Weight_F3_CarV1.1.5_ADXL345
#        -1-9\Project\Debug\Obj\os_prio.o
#    Runtime model:       
#      __SystemLibrary =  DLib
#
###############################################################################

C:\Users\macanlin\Desktop\GD_modbus\Weight_F3_CarV1.1.5_ADXL345 -1-9\Source\System\uCOS-III\Source\os_prio.c
      1          /*
      2          ************************************************************************************************************************
      3          *                                                      uC/OS-III
      4          *                                                 The Real-Time Kernel
      5          *
      6          *                                  (c) Copyright 2009-2012; Micrium, Inc.; Weston, FL
      7          *                           All rights reserved.  Protected by international copyright laws.
      8          *
      9          *                                                 PRIORITY MANAGEMENT
     10          *
     11          * File    : OS_PRIO.C
     12          * By      : JJL
     13          * Version : V3.03.01
     14          *
     15          * LICENSING TERMS:
     16          * ---------------
     17          *           uC/OS-III is provided in source form for FREE short-term evaluation, for educational use or 
     18          *           for peaceful research.  If you plan or intend to use uC/OS-III in a commercial application/
     19          *           product then, you need to contact Micrium to properly license uC/OS-III for its use in your 
     20          *           application/product.   We provide ALL the source code for your convenience and to help you 
     21          *           experience uC/OS-III.  The fact that the source is provided does NOT mean that you can use 
     22          *           it commercially without paying a licensing fee.
     23          *
     24          *           Knowledge of the source code may NOT be used to develop a similar product.
     25          *
     26          *           Please help us continue to provide the embedded community with the finest software available.
     27          *           Your honesty is greatly appreciated.
     28          *
     29          *           You can contact us at www.micrium.com, or by phone at +1 (954) 217-2036.
     30          ************************************************************************************************************************
     31          */
     32          
     33          #define  MICRIUM_SOURCE
     34          #include <os.h>
     35          
     36          #ifdef VSC_INCLUDE_SOURCE_FILE_NAMES
     37          const  CPU_CHAR  *os_prio__c = "$Id: $";
     38          #endif
     39          
     40          

   \                                 In section .bss, align 4
     41          CPU_DATA   OSPrioTbl[OS_PRIO_TBL_SIZE];                     /* Declare the array local to this file to allow for  ... */
   \                     OSPrioTbl:
   \        0x0                      DS8 4
     42                                                                      /* ... optimization.  In other words, this allows the ... */
     43                                                                      /* ... table to be located in fast memory                 */
     44          
     45          /*
     46          ************************************************************************************************************************
     47          *                                               INITIALIZE THE PRIORITY LIST
     48          *
     49          * Description: This function is called by uC/OS-III to initialize the list of ready priorities.
     50          *
     51          * Arguments  : none
     52          *
     53          * Returns    : none
     54          *
     55          * Note       : This function is INTERNAL to uC/OS-III and your application should not call it.
     56          ************************************************************************************************************************
     57          */
     58          

   \                                 In section .text, align 2, keep-with-next
     59          void  OS_PrioInit (void)
     60          {
   \                     OS_PrioInit: (+1)
   \        0x0   0xB500             PUSH     {LR}
     61              CPU_DATA  i;
     62          
     63          
     64                                                                      /* Clear the bitmap table ... no task is ready            */
     65              for (i = 0u; i < OS_PRIO_TBL_SIZE; i++) {
   \        0x2   0x2100             MOVS     R1,#+0
   \        0x4   0x0008             MOVS     R0,R1
   \        0x6   0xE004             B        ??OS_PrioInit_0
     66                   OSPrioTbl[i] = (CPU_DATA)0;
   \                     ??OS_PrioInit_1: (+1)
   \        0x8   0x....             LDR      R2,??DataTable3
   \        0xA   0x2304             MOVS     R3,#+4
   \        0xC   0x4343             MULS     R3,R0,R3
   \        0xE   0x50D1             STR      R1,[R2, R3]
     67              }
   \       0x10   0x1C40             ADDS     R0,R0,#+1
   \                     ??OS_PrioInit_0: (+1)
   \       0x12   0x2800             CMP      R0,#+0
   \       0x14   0xD0F8             BEQ      ??OS_PrioInit_1
     68          }
   \       0x16   0xBD00             POP      {PC}             ;; return
     69          
     70          /*
     71          ************************************************************************************************************************
     72          *                                           GET HIGHEST PRIORITY TASK WAITING
     73          *
     74          * Description: This function is called by other uC/OS-III services to determine the highest priority task
     75          *              waiting on the event.
     76          *
     77          * Arguments  : none
     78          *
     79          * Returns    : The priority of the Highest Priority Task (HPT) waiting for the event
     80          *
     81          * Note(s)    : 1) This function is INTERNAL to uC/OS-III and your application MUST NOT call it.
     82          ************************************************************************************************************************
     83          */
     84          

   \                                 In section .text, align 2, keep-with-next
     85          OS_PRIO  OS_PrioGetHighest (void)
     86          {
   \                     OS_PrioGetHighest: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
     87              CPU_DATA  *p_tbl;
     88              OS_PRIO    prio;
     89          
     90          
     91              prio  = (OS_PRIO)0;
   \        0x2   0x2400             MOVS     R4,#+0
     92              p_tbl = &OSPrioTbl[0];
   \        0x4   0x....             LDR      R0,??DataTable3
   \        0x6   0xE001             B        ??OS_PrioGetHighest_0
     93              while (*p_tbl == (CPU_DATA)0) {                         /* Search the bitmap table for the highest priority       */
     94                  prio += DEF_INT_CPU_NBR_BITS;                       /* Compute the step of each CPU_DATA entry                */
   \                     ??OS_PrioGetHighest_1: (+1)
   \        0x8   0x3420             ADDS     R4,R4,#+32
     95                  p_tbl++;
   \        0xA   0x1D00             ADDS     R0,R0,#+4
     96              }
   \                     ??OS_PrioGetHighest_0: (+1)
   \        0xC   0x6801             LDR      R1,[R0, #+0]
   \        0xE   0x2900             CMP      R1,#+0
   \       0x10   0xD0FA             BEQ      ??OS_PrioGetHighest_1
     97              prio += (OS_PRIO)CPU_CntLeadZeros(*p_tbl);              /* Find the position of the first bit set at the entry    */
   \       0x12   0x6800             LDR      R0,[R0, #+0]
   \       0x14   0x....'....        BL       CPU_CntLeadZeros
   \       0x18   0x1820             ADDS     R0,R4,R0
     98              return (prio);
   \       0x1A   0xB2C0             UXTB     R0,R0
   \       0x1C   0xBD10             POP      {R4,PC}          ;; return
     99          }
    100          
    101          /*
    102          ************************************************************************************************************************
    103          *                                                  INSERT PRIORITY
    104          *
    105          * Description: This function is called to insert a priority in the priority table.
    106          *
    107          * Arguments  : prio     is the priority to insert
    108          *
    109          * Returns    : none
    110          *
    111          * Note(s)    : 1) This function is INTERNAL to uC/OS-III and your application MUST NOT call it.
    112          ************************************************************************************************************************
    113          */
    114          

   \                                 In section .text, align 2, keep-with-next
    115          void  OS_PrioInsert (OS_PRIO  prio)
    116          {
   \                     OS_PrioInsert: (+1)
   \        0x0   0xB410             PUSH     {R4}
    117              CPU_DATA  bit;
    118              CPU_DATA  bit_nbr;
    119              OS_PRIO   ix;
    120          
    121          
    122              ix             = prio / DEF_INT_CPU_NBR_BITS;
   \        0x2   0x0001             MOVS     R1,R0
   \        0x4   0xB2C9             UXTB     R1,R1
   \        0x6   0x0949             LSRS     R1,R1,#+5
    123              bit_nbr        = (CPU_DATA)prio & (DEF_INT_CPU_NBR_BITS - 1u);
   \        0x8   0xB2C0             UXTB     R0,R0
   \        0xA   0x06C2             LSLS     R2,R0,#+27       ;; ZeroExtS R2,R0,#+27,#+27
   \        0xC   0x0ED2             LSRS     R2,R2,#+27
    124              bit            = 1u;
   \        0xE   0x2001             MOVS     R0,#+1
    125              bit          <<= (DEF_INT_CPU_NBR_BITS - 1u) - bit_nbr;
   \       0x10   0x231F             MOVS     R3,#+31
   \       0x12   0x1A9A             SUBS     R2,R3,R2
   \       0x14   0x4090             LSLS     R0,R0,R2
    126              OSPrioTbl[ix] |= bit;
   \       0x16   0x....             LDR      R2,??DataTable3
   \       0x18   0x000B             MOVS     R3,R1
   \       0x1A   0xB2DB             UXTB     R3,R3
   \       0x1C   0x2404             MOVS     R4,#+4
   \       0x1E   0x4363             MULS     R3,R4,R3
   \       0x20   0x58D3             LDR      R3,[R2, R3]
   \       0x22   0x4318             ORRS     R0,R0,R3
   \       0x24   0xB2C9             UXTB     R1,R1
   \       0x26   0x2304             MOVS     R3,#+4
   \       0x28   0x4359             MULS     R1,R3,R1
   \       0x2A   0x5050             STR      R0,[R2, R1]
    127          }
   \       0x2C   0xBC10             POP      {R4}
   \       0x2E   0x4770             BX       LR               ;; return
    128          
    129          /*
    130          ************************************************************************************************************************
    131          *                                                   REMOVE PRIORITY
    132          *
    133          * Description: This function is called to remove a priority in the priority table.
    134          *
    135          * Arguments  : prio     is the priority to remove
    136          *
    137          * Returns    : none
    138          *
    139          * Note(s)    : 1) This function is INTERNAL to uC/OS-III and your application MUST NOT call it.
    140          ************************************************************************************************************************
    141          */
    142          

   \                                 In section .text, align 2, keep-with-next
    143          void  OS_PrioRemove (OS_PRIO  prio)
    144          {
   \                     OS_PrioRemove: (+1)
   \        0x0   0xB410             PUSH     {R4}
    145              CPU_DATA  bit;
    146              CPU_DATA  bit_nbr;
    147              OS_PRIO   ix;
    148          
    149          
    150              ix             = prio / DEF_INT_CPU_NBR_BITS;
   \        0x2   0x0001             MOVS     R1,R0
   \        0x4   0xB2C9             UXTB     R1,R1
   \        0x6   0x0949             LSRS     R1,R1,#+5
    151              bit_nbr        = (CPU_DATA)prio & (DEF_INT_CPU_NBR_BITS - 1u);
   \        0x8   0xB2C0             UXTB     R0,R0
   \        0xA   0x06C2             LSLS     R2,R0,#+27       ;; ZeroExtS R2,R0,#+27,#+27
   \        0xC   0x0ED2             LSRS     R2,R2,#+27
    152              bit            = 1u;
   \        0xE   0x2001             MOVS     R0,#+1
    153              bit          <<= (DEF_INT_CPU_NBR_BITS - 1u) - bit_nbr;
   \       0x10   0x231F             MOVS     R3,#+31
   \       0x12   0x1A9A             SUBS     R2,R3,R2
   \       0x14   0x4090             LSLS     R0,R0,R2
    154              OSPrioTbl[ix] &= ~bit;
   \       0x16   0x....             LDR      R2,??DataTable3
   \       0x18   0x000B             MOVS     R3,R1
   \       0x1A   0xB2DB             UXTB     R3,R3
   \       0x1C   0x2404             MOVS     R4,#+4
   \       0x1E   0x4363             MULS     R3,R4,R3
   \       0x20   0x58D3             LDR      R3,[R2, R3]
   \       0x22   0x4383             BICS     R3,R3,R0
   \       0x24   0xB2C9             UXTB     R1,R1
   \       0x26   0x2004             MOVS     R0,#+4
   \       0x28   0x4341             MULS     R1,R0,R1
   \       0x2A   0x5053             STR      R3,[R2, R1]
    155          }
   \       0x2C   0xBC10             POP      {R4}
   \       0x2E   0x4770             BX       LR               ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3:
   \        0x0   0x....'....        DC32     OSPrioTbl

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   OS_PrioGetHighest
         8   -> CPU_CntLeadZeros
       4   OS_PrioInit
       4   OS_PrioInsert
       4   OS_PrioRemove


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable3
       4  OSPrioTbl
      30  OS_PrioGetHighest
      24  OS_PrioInit
      48  OS_PrioInsert
      48  OS_PrioRemove

 
   4 bytes in section .bss
 154 bytes in section .text
 
 154 bytes of CODE memory
   4 bytes of DATA memory

Errors: none
Warnings: none
