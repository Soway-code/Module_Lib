###############################################################################
#
# IAR ANSI C/C++ Compiler V8.50.4.261/W32 for ARM         10/Jan/2021  16:10:18
# Copyright 1999-2020 IAR Systems AB.
#
#    Cpu mode                        
#    Endian                       =  little
#    Source file                  =
#        C:\Users\macanlin\Desktop\GD_modbus\Weight_F3_CarV1.1.5_ADXL345
#        -1-9\Source\APP\modbus_asc.c
#    Command line                 =
#        -f C:\Users\macanlin\AppData\Local\Temp\EWDABB.tmp
#        ("C:\Users\macanlin\Desktop\GD_modbus\Weight_F3_CarV1.1.5_ADXL345
#        -1-9\Source\APP\modbus_asc.c" -D USE_STDPERIPH_DRIVER -D STM32F072 -lC
#        "C:\Users\macanlin\Desktop\GD_modbus\Weight_F3_CarV1.1.5_ADXL345
#        -1-9\Project\Debug\List" -o
#        "C:\Users\macanlin\Desktop\GD_modbus\Weight_F3_CarV1.1.5_ADXL345
#        -1-9\Project\Debug\Obj" --no_cse --no_unroll --no_inline
#        --no_code_motion --no_tbaa --no_clustering --no_scheduling --debug
#        --endian=little --cpu=Cortex-M0 -e --fpu=None --dlib_config
#        C:\rj\IAR\arm\inc\c\DLib_Config_Normal.h -I
#        "C:\Users\macanlin\Desktop\GD_modbus\Weight_F3_CarV1.1.5_ADXL345
#        -1-9\Project\..\Source\BSP\inc\\" -I
#        "C:\Users\macanlin\Desktop\GD_modbus\Weight_F3_CarV1.1.5_ADXL345
#        -1-9\Project\..\Source\FWLib\inc\\" -I
#        "C:\Users\macanlin\Desktop\GD_modbus\Weight_F3_CarV1.1.5_ADXL345
#        -1-9\Project\..\Source\CMSIS\\" -I
#        "C:\Users\macanlin\Desktop\GD_modbus\Weight_F3_CarV1.1.5_ADXL345
#        -1-9\Project\..\Source\System\OS_Cfg\\" -I
#        "C:\Users\macanlin\Desktop\GD_modbus\Weight_F3_CarV1.1.5_ADXL345
#        -1-9\Project\..\Source\System\uC-CPU\\" -I
#        "C:\Users\macanlin\Desktop\GD_modbus\Weight_F3_CarV1.1.5_ADXL345
#        -1-9\Project\..\Source\System\uC-LIB\\" -I
#        "C:\Users\macanlin\Desktop\GD_modbus\Weight_F3_CarV1.1.5_ADXL345
#        -1-9\Project\..\Source\System\uCOS-III\Ports\\" -I
#        "C:\Users\macanlin\Desktop\GD_modbus\Weight_F3_CarV1.1.5_ADXL345
#        -1-9\Project\..\Source\System\uCOS-III\Source\\" -I
#        "C:\Users\macanlin\Desktop\GD_modbus\Weight_F3_CarV1.1.5_ADXL345
#        -1-9\Project\..\Source\APP\inc\\" -I
#        "C:\Users\macanlin\Desktop\GD_modbus\Weight_F3_CarV1.1.5_ADXL345
#        -1-9\Project\..\Source\FWLib\\" -I
#        "C:\Users\macanlin\Desktop\GD_modbus\Weight_F3_CarV1.1.5_ADXL345
#        -1-9\Project\..\Source\System\uC-LIB\\" -Ol -I
#        C:\rj\IAR\arm\CMSIS\Core\Include\\ -I
#        C:\rj\IAR\arm\CMSIS\DSP\Include\\)
#    Locale                       =  C
#    List file                    =
#        C:\Users\macanlin\Desktop\GD_modbus\Weight_F3_CarV1.1.5_ADXL345
#        -1-9\Project\Debug\List\modbus_asc.lst
#    Object file                  =
#        C:\Users\macanlin\Desktop\GD_modbus\Weight_F3_CarV1.1.5_ADXL345
#        -1-9\Project\Debug\Obj\modbus_asc.o
#    Runtime model:                  
#      __SystemLibrary            =  DLib
#      __dlib_file_descriptor     =  0
#      __dlib_full_locale_support =  0
#      __dlib_version             =  6
#
###############################################################################

C:\Users\macanlin\Desktop\GD_modbus\Weight_F3_CarV1.1.5_ADXL345 -1-9\Source\APP\modbus_asc.c
      1          #include "bsp.h"

   \                                 In section .text, align 2, keep-with-next
   \   static __interwork __softfp void __NVIC_SystemReset(void)
   \                     __NVIC_SystemReset: (+1)
   \        0x0   0xB500             PUSH     {LR}
   \        0x2   0xF3BF 0x8F4F      DSB      SY
   \        0x6   0x....             LDR      R0,??DataTable3  ;; 0x5fa0004
   \        0x8   0x....             LDR      R1,??DataTable3_1  ;; 0xe000ed0c
   \        0xA   0x6008             STR      R0,[R1, #+0]
   \        0xC   0xF3BF 0x8F4F      DSB      SY
   \                     ??__NVIC_SystemReset_0: (+1)
   \       0x10   0xBF00             Nop
   \       0x12   0xE7FD             B        ??__NVIC_SystemReset_0
      2          
      3          /************************************************************************************************************************************************************************
      4          ** 版权：   2016-2026, 深圳市信为科技发展有限公司
      5          ** 文件名:  modbus_asc.c
      6          ** 作者:    庄明群
      7          ** 版本:    V1.0.0
      8          ** 日期:    2016-09-05
      9          ** 描述:    modbus ascii 功能码
     10          ** 功能:         
     11          *************************************************************************************************************************************************************************
     12          ** 修改者:          No
     13          ** 版本:  		
     14          ** 修改内容:    No 
     15          ** 日期:            No
     16          *************************************************************************************************************************************************************************/
     17          
     18          extern u8 SendLen;

   \                                 In section .bss, align 4
     19          u8 SendBuf[DATAPACKET_LEN];
   \                     SendBuf:
   \        0x0                      DS8 256
     20          extern u8 UART1_RXBuff[MAX_USART1_DATA_LEN];
     21          extern u8 Dev_Id[DEFAULT_DEV_ID_LEN];
     22          extern u8 u8SendNum;
     23          
     24          extern u16 g_wFADValue;
     25          extern u16 g_wRADValue;
     26          
     27          extern u16 Speed;

   \                                 In section .bss, align 1
     28          u8 Acc_Flag;
   \                     Acc_Flag:
   \        0x0                      DS8 1

   \                                 In section .bss, align 1
     29          u8 Acc_Flag_Cnt = 0;
   \                     Acc_Flag_Cnt:
   \        0x0                      DS8 1
     30          
     31          extern unsigned char	ADXL345_BUF[12];

   \                                 In section .bss, align 4
     32          u32 AD_Buff[5][10];                                                             //AD值缓存
   \                     AD_Buff:
   \        0x0                      DS8 200

   \                                 In section .bss, align 4
     33          u32 Weight_Buff[5][10];                                                         //载重值缓存
   \                     Weight_Buff:
   \        0x0                      DS8 200
     34          //**************************************************************************************************
     35          // 名称         : MBASC_GetSlaveAddr()
     36          // 创建日期     : 2016-09-05
     37          // 作者         : 庄明群
     38          // 功能         : 获取从机地址
     39          // 输入参数     : 帧缓存区(u8 *u8Msg)
     40          // 输出参数     : 无
     41          // 返回结果     : 从机地址
     42          // 注意和说明   : 
     43          // 修改内容     :
     44          //**************************************************************************************************

   \                                 In section .text, align 2, keep-with-next
     45          u8 MBASC_GetSlaveAddr(u8 *u8Msg)
     46          {
     47              return u8Msg[0];
   \                     MBASC_GetSlaveAddr: (+1)
   \        0x0   0x7800             LDRB     R0,[R0, #+0]
   \        0x2   0x4770             BX       LR               ;; return
     48          }
     49          
     50          //**************************************************************************************************
     51          // 名称         : MBASC_GetFunCode()
     52          // 创建日期     : 2016-09-05
     53          // 作者         : 庄明群
     54          // 功能         : 获取功能码
     55          // 输入参数     : 帧缓存区(u8 *u8Msg)
     56          // 输出参数     : 无
     57          // 返回结果     : 功能码
     58          // 注意和说明   : 
     59          // 修改内容     :
     60          //**************************************************************************************************

   \                                 In section .text, align 2, keep-with-next
     61          u8 MBASC_GetFunCode(u8 *u8Msg)
     62          {
     63              return u8Msg[1];
   \                     MBASC_GetFunCode: (+1)
   \        0x0   0x7840             LDRB     R0,[R0, #+1]
   \        0x2   0x4770             BX       LR               ;; return
     64          }
     65          
     66          //**************************************************************************************************
     67          // 名称         : MBASC_SendMsg()
     68          // 创建日期     : 2016-09-05
     69          // 作者         : 庄明群
     70          // 功能         : 以ASCII格式发送消息
     71          // 输入参数     : 帧缓存区(u8 *u8Msg),帧长(u8 u8MsgLen)
     72          // 输出参数     : 无
     73          // 返回结果     : 无
     74          // 注意和说明   : 
     75          // 修改内容     :
     76          //**************************************************************************************************

   \                                 In section .text, align 2, keep-with-next
     77          void MBASC_SendMsg(u8 *u8Msg, u8 u8MsgLen)
     78          {
   \                     MBASC_SendMsg: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
   \        0x2   0x0005             MOVS     R5,R0
   \        0x4   0x000C             MOVS     R4,R1
     79            
     80                Delay_Ms(45);  //返回数据时增加50ms延时  20190905
   \        0x6   0x202D             MOVS     R0,#+45
   \        0x8   0x....'....        BL       Delay_Ms
     81            
     82              if((MB_ADDRESS_BROADCAST != MBASC_GetSlaveAddr(u8Msg)) && (UartComm.Echo == ECHO_ENABLE))
   \        0xC   0x0028             MOVS     R0,R5
   \        0xE   0x....'....        BL       MBASC_GetSlaveAddr
   \       0x12   0x2800             CMP      R0,#+0
   \       0x14   0xD008             BEQ      ??MBASC_SendMsg_0
   \       0x16   0x....             LDR      R0,??DataTable3_2
   \       0x18   0x7980             LDRB     R0,[R0, #+6]
   \       0x1A   0x2800             CMP      R0,#+0
   \       0x1C   0xD104             BNE      ??MBASC_SendMsg_0
     83              {
     84                  MODBUS_ASCII_SendData(u8Msg, u8MsgLen);
   \       0x1E   0x0021             MOVS     R1,R4
   \       0x20   0xB2C9             UXTB     R1,R1
   \       0x22   0x0028             MOVS     R0,R5
   \       0x24   0x....'....        BL       MODBUS_ASCII_SendData
     85              }
     86          }
   \                     ??MBASC_SendMsg_0: (+1)
   \       0x28   0xBD31             POP      {R0,R4,R5,PC}    ;; return
     87          
     88          //**************************************************************************************************
     89          // 名称         : MBASC_SendMsg_NoLimit()
     90          // 创建日期     : 2016-09-05
     91          // 作者         : 庄明群
     92          // 功能         : 无限制性的以ASCII格式发送消息
     93          // 输入参数     : 帧缓存区(u8 *u8Msg),帧长(u8 u8MsgLen)
     94          // 输出参数     : 无
     95          // 返回结果     : 无
     96          // 注意和说明   : 
     97          // 修改内容     :
     98          //**************************************************************************************************

   \                                 In section .text, align 2, keep-with-next
     99          void MBASC_SendMsg_NoLimit(u8 *u8Msg, u8 u8MsgLen)
    100          {
   \                     MBASC_SendMsg_NoLimit: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
   \        0x2   0x0005             MOVS     R5,R0
   \        0x4   0x000C             MOVS     R4,R1
    101                Delay_Ms(45); //返回数据时增加50ms延时  20190905
   \        0x6   0x202D             MOVS     R0,#+45
   \        0x8   0x....'....        BL       Delay_Ms
    102             
    103             
    104              if(UartComm.Echo == ECHO_ENABLE)
   \        0xC   0x....             LDR      R0,??DataTable3_2
   \        0xE   0x7980             LDRB     R0,[R0, #+6]
   \       0x10   0x2800             CMP      R0,#+0
   \       0x12   0xD104             BNE      ??MBASC_SendMsg_NoLimit_0
    105              {
    106                  MODBUS_ASCII_SendData(u8Msg, u8MsgLen);
   \       0x14   0x0021             MOVS     R1,R4
   \       0x16   0xB2C9             UXTB     R1,R1
   \       0x18   0x0028             MOVS     R0,R5
   \       0x1A   0x....'....        BL       MODBUS_ASCII_SendData
    107              }
    108          }
   \                     ??MBASC_SendMsg_NoLimit_0: (+1)
   \       0x1E   0xBD31             POP      {R0,R4,R5,PC}    ;; return
    109          
    110          //**************************************************************************************************
    111          // 名称         : MBASC_SendErr()
    112          // 创建日期     : 2016-09-05
    113          // 作者         : 庄明群
    114          // 功能         : 发送错误码的响应帧
    115          // 输入参数     : 错误码(u8 ErrCode)
    116          // 输出参数     : 无
    117          // 返回结果     : 无
    118          // 注意和说明   : 
    119          // 修改内容     :
    120          //**************************************************************************************************

   \                                 In section .text, align 2, keep-with-next
    121          void MBASC_SendErr(u8 ErrCode)
    122          {
   \                     MBASC_SendErr: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   \        0x2   0x0001             MOVS     R1,R0
    123              SendLen = 1;
   \        0x4   0x....             LDR      R2,??DataTable3_3
   \        0x6   0x2001             MOVS     R0,#+1
   \        0x8   0x7010             STRB     R0,[R2, #+0]
    124              SendBuf[SendLen++] |= 0x80;
   \        0xA   0x....             LDR      R0,??DataTable3_4
   \        0xC   0x7813             LDRB     R3,[R2, #+0]
   \        0xE   0x5CC3             LDRB     R3,[R0, R3]
   \       0x10   0x2480             MOVS     R4,#+128
   \       0x12   0x431C             ORRS     R4,R4,R3
   \       0x14   0x7813             LDRB     R3,[R2, #+0]
   \       0x16   0x54C4             STRB     R4,[R0, R3]
   \       0x18   0x7813             LDRB     R3,[R2, #+0]
   \       0x1A   0x1C5B             ADDS     R3,R3,#+1
   \       0x1C   0x7013             STRB     R3,[R2, #+0]
    125              SendBuf[SendLen++] = ErrCode;
   \       0x1E   0x7813             LDRB     R3,[R2, #+0]
   \       0x20   0x54C1             STRB     R1,[R0, R3]
   \       0x22   0x7811             LDRB     R1,[R2, #+0]
   \       0x24   0x1C49             ADDS     R1,R1,#+1
   \       0x26   0x7011             STRB     R1,[R2, #+0]
    126              MBASC_SendMsg(SendBuf, SendLen);
   \       0x28   0x7811             LDRB     R1,[R2, #+0]
   \       0x2A   0x....'....        BL       MBASC_SendMsg
    127          }
   \       0x2E   0xBD10             POP      {R4,PC}          ;; return
    128          
    129          
    130          //**************************************************************************************************
    131          // 名称         : MBASC_Fun03()
    132          // 创建日期     : 2016-09-05
    133          // 作者         : 庄明群
    134          // 功能         : 03功能码，读单个寄存器操作
    135          // 输入参数     : 无
    136          // 输出参数     : 无
    137          // 返回结果     : 无
    138          // 注意和说明   : 
    139          // 修改内容     :  将从机地址修改为0x45，对应的寄存器地址修改为0x45xx   2016.09.08
    140          //**************************************************************************************************

   \                                 In section .text, align 4, keep-with-next
    141          void MBASC_Fun03(void)
    142          {
   \                     MBASC_Fun03: (+1)
   \        0x0   0xB5FE             PUSH     {R1-R7,LR}
    143              u8 i;
    144              u16 Data_Buf;
    145              u16 ReadAdr = 0;
   \        0x2   0x2400             MOVS     R4,#+0
   \        0x4   0x0020             MOVS     R0,R4
    146              u16 Register_Num = (u16)UART1_RXBuff[4] * 256 + UART1_RXBuff[5];
   \        0x6   0x48AA             LDR      R0,??MBASC_Fun03_0
   \        0x8   0x7900             LDRB     R0,[R0, #+4]
   \        0xA   0x2180             MOVS     R1,#+128
   \        0xC   0x0049             LSLS     R1,R1,#+1        ;; #+256
   \        0xE   0x4348             MULS     R0,R1,R0
   \       0x10   0x49A7             LDR      R1,??MBASC_Fun03_0
   \       0x12   0x7949             LDRB     R1,[R1, #+5]
   \       0x14   0x1840             ADDS     R0,R0,R1
   \       0x16   0x4669             MOV      R1,SP
   \       0x18   0x8048             STRH     R0,[R1, #+2]
    147              
    148              u8 uBuf[2];
    149              u16 s_TotalPacks, s_CurrentPack;
    150              
    151              if(UART1_RXBuff[2] - UartComm.SlaveAddr !=0)                                //修改除0x71以外的从机地址也适合
   \       0x1A   0x48A5             LDR      R0,??MBASC_Fun03_0
   \       0x1C   0x7880             LDRB     R0,[R0, #+2]
   \       0x1E   0x49A5             LDR      R1,??MBASC_Fun03_0+0x4
   \       0x20   0x7809             LDRB     R1,[R1, #+0]
   \       0x22   0x1A40             SUBS     R0,R0,R1
   \       0x24   0x2800             CMP      R0,#+0
   \       0x26   0xD007             BEQ      ??MBASC_Fun03_3
    152                  ReadAdr = (u16)UART1_RXBuff[2] * 256 + UART1_RXBuff[3];
   \       0x28   0x48A1             LDR      R0,??MBASC_Fun03_0
   \       0x2A   0x7881             LDRB     R1,[R0, #+2]
   \       0x2C   0x2280             MOVS     R2,#+128
   \       0x2E   0x0052             LSLS     R2,R2,#+1        ;; #+256
   \       0x30   0x4351             MULS     R1,R2,R1
   \       0x32   0x78C0             LDRB     R0,[R0, #+3]
   \       0x34   0x180F             ADDS     R7,R1,R0
   \       0x36   0xE004             B        ??MBASC_Fun03_4
    153              else
    154                  ReadAdr = 0x71 * 256 + UART1_RXBuff[3];
   \                     ??MBASC_Fun03_3: (+1)
   \       0x38   0x489D             LDR      R0,??MBASC_Fun03_0
   \       0x3A   0x78C0             LDRB     R0,[R0, #+3]
   \       0x3C   0x21E2             MOVS     R1,#+226
   \       0x3E   0x01C9             LSLS     R1,R1,#+7        ;; #+28928
   \       0x40   0x1847             ADDS     R7,R0,R1
    155              
    156              SendLen = 0;
   \                     ??MBASC_Fun03_4: (+1)
   \       0x42   0x4DA6             LDR      R5,??MBASC_Fun03_1
   \       0x44   0x0020             MOVS     R0,R4
   \       0x46   0x7028             STRB     R0,[R5, #+0]
    157              SendBuf[SendLen++] = (MBASC_GetSlaveAddr(UART1_RXBuff)) ? UartComm.SlaveAddr : 0x00;
   \       0x48   0x7828             LDRB     R0,[R5, #+0]
   \       0x4A   0x4669             MOV      R1,SP
   \       0x4C   0x7008             STRB     R0,[R1, #+0]
   \       0x4E   0x4668             MOV      R0,SP
   \       0x50   0x7800             LDRB     R0,[R0, #+0]
   \       0x52   0x1C40             ADDS     R0,R0,#+1
   \       0x54   0x7028             STRB     R0,[R5, #+0]
   \       0x56   0x4896             LDR      R0,??MBASC_Fun03_0
   \       0x58   0x....'....        BL       MBASC_GetSlaveAddr
   \       0x5C   0x2800             CMP      R0,#+0
   \       0x5E   0xD002             BEQ      ??MBASC_Fun03_5
   \       0x60   0x4894             LDR      R0,??MBASC_Fun03_0+0x4
   \       0x62   0x7800             LDRB     R0,[R0, #+0]
   \       0x64   0xE000             B        ??MBASC_Fun03_6
   \                     ??MBASC_Fun03_5: (+1)
   \       0x66   0x0020             MOVS     R0,R4
   \                     ??MBASC_Fun03_6: (+1)
   \       0x68   0x499D             LDR      R1,??MBASC_Fun03_1+0x4
   \       0x6A   0x466A             MOV      R2,SP
   \       0x6C   0x7812             LDRB     R2,[R2, #+0]
   \       0x6E   0x5488             STRB     R0,[R1, R2]
    158              SendBuf[SendLen++] = MB_FUNC_READ_HOLDING_REGISTER;	                        
   \       0x70   0x2003             MOVS     R0,#+3
   \       0x72   0x499B             LDR      R1,??MBASC_Fun03_1+0x4
   \       0x74   0x782A             LDRB     R2,[R5, #+0]
   \       0x76   0x5488             STRB     R0,[R1, R2]
   \       0x78   0x7828             LDRB     R0,[R5, #+0]
   \       0x7A   0x1C40             ADDS     R0,R0,#+1
   \       0x7C   0x7028             STRB     R0,[R5, #+0]
    159              SendBuf[SendLen++] = Register_Num * 2;		                        
   \       0x7E   0x4668             MOV      R0,SP
   \       0x80   0x8840             LDRH     R0,[R0, #+2]
   \       0x82   0x2102             MOVS     R1,#+2
   \       0x84   0x4348             MULS     R0,R1,R0
   \       0x86   0x4996             LDR      R1,??MBASC_Fun03_1+0x4
   \       0x88   0x782A             LDRB     R2,[R5, #+0]
   \       0x8A   0x5488             STRB     R0,[R1, R2]
   \       0x8C   0x7828             LDRB     R0,[R5, #+0]
   \       0x8E   0x1C40             ADDS     R0,R0,#+1
   \       0x90   0x7028             STRB     R0,[R5, #+0]
    160                                                                                          
    161              if (!(((ReadAdr >= MBASC_HOLDING_REG_REGION1_BGEIN) && (ReadAdr <= MBASC_HOLDING_REG_REGION1_END)
    162                && (ReadAdr + Register_Num <= (MBASC_HOLDING_REG_REGION1_END + 1)))
    163                || ((ReadAdr == MBASC_HOLDING_REG_REGION2_BGEIN) 
    164                || ((ReadAdr >= MBASC_HOLDING_REG_REGION3_BGEIN) && (ReadAdr <= MBASC_HOLDING_REG_REGION3_END)
    165                && (ReadAdr + Register_Num <= (MBASC_HOLDING_REG_REGION3_END + 1)))
    166               || (ReadAdr == 0x7178) || (ReadAdr == MBASC_HOLDING_REG_REGION4_BGEIN))    
    167                && (0 != Register_Num)))
   \       0x92   0x0038             MOVS     R0,R7
   \       0x94   0xB280             UXTH     R0,R0
   \       0x96   0x4993             LDR      R1,??MBASC_Fun03_1+0x8  ;; 0x7130
   \       0x98   0x1A40             SUBS     R0,R0,R1
   \       0x9A   0x2820             CMP      R0,#+32
   \       0x9C   0xD207             BCS      ??MBASC_Fun03_7
   \       0x9E   0x0038             MOVS     R0,R7
   \       0xA0   0xB280             UXTH     R0,R0
   \       0xA2   0x4669             MOV      R1,SP
   \       0xA4   0x8849             LDRH     R1,[R1, #+2]
   \       0xA6   0x1840             ADDS     R0,R0,R1
   \       0xA8   0x498F             LDR      R1,??MBASC_Fun03_1+0xC  ;; 0x7151
   \       0xAA   0x4288             CMP      R0,R1
   \       0xAC   0xDB25             BLT      ??MBASC_Fun03_8
   \                     ??MBASC_Fun03_7: (+1)
   \       0xAE   0x0038             MOVS     R0,R7
   \       0xB0   0xB280             UXTH     R0,R0
   \       0xB2   0x498E             LDR      R1,??MBASC_Fun03_1+0x10  ;; 0x7160
   \       0xB4   0x4288             CMP      R0,R1
   \       0xB6   0xD018             BEQ      ??MBASC_Fun03_9
   \       0xB8   0x0038             MOVS     R0,R7
   \       0xBA   0xB280             UXTH     R0,R0
   \       0xBC   0x498C             LDR      R1,??MBASC_Fun03_1+0x14  ;; 0x7170
   \       0xBE   0x1A40             SUBS     R0,R0,R1
   \       0xC0   0x2804             CMP      R0,#+4
   \       0xC2   0xD207             BCS      ??MBASC_Fun03_10
   \       0xC4   0x0038             MOVS     R0,R7
   \       0xC6   0xB280             UXTH     R0,R0
   \       0xC8   0x4669             MOV      R1,SP
   \       0xCA   0x8849             LDRH     R1,[R1, #+2]
   \       0xCC   0x1840             ADDS     R0,R0,R1
   \       0xCE   0x4989             LDR      R1,??MBASC_Fun03_1+0x18  ;; 0x7175
   \       0xD0   0x4288             CMP      R0,R1
   \       0xD2   0xDB0A             BLT      ??MBASC_Fun03_9
   \                     ??MBASC_Fun03_10: (+1)
   \       0xD4   0x0038             MOVS     R0,R7
   \       0xD6   0xB280             UXTH     R0,R0
   \       0xD8   0x49AA             LDR      R1,??MBASC_Fun03_2  ;; 0x7178
   \       0xDA   0x4288             CMP      R0,R1
   \       0xDC   0xD005             BEQ      ??MBASC_Fun03_9
   \       0xDE   0x0038             MOVS     R0,R7
   \       0xE0   0x21E3             MOVS     R1,#+227
   \       0xE2   0x01C9             LSLS     R1,R1,#+7        ;; #+29056
   \       0xE4   0xB280             UXTH     R0,R0
   \       0xE6   0x4288             CMP      R0,R1
   \       0xE8   0xD103             BNE      ??MBASC_Fun03_11
   \                     ??MBASC_Fun03_9: (+1)
   \       0xEA   0x4668             MOV      R0,SP
   \       0xEC   0x8840             LDRH     R0,[R0, #+2]
   \       0xEE   0x2800             CMP      R0,#+0
   \       0xF0   0xD103             BNE      ??MBASC_Fun03_8
    168              {
    169                  MBASC_SendErr(MB_EX_ILLEGAL_DATA_ADDRESS);
   \                     ??MBASC_Fun03_11: (+1)
   \       0xF2   0x2002             MOVS     R0,#+2
   \       0xF4   0x....'....        BL       MBASC_SendErr
    170                  return;
   \       0xF8   0xE142             B        ??MBASC_Fun03_12
    171              }
    172          
    173              for (u8 k = 0; k < Register_Num; ReadAdr++, k++)
   \                     ??MBASC_Fun03_8: (+1)
   \       0xFA   0x0020             MOVS     R0,R4
   \       0xFC   0x4669             MOV      R1,SP
   \       0xFE   0x7008             STRB     R0,[R1, #+0]
   \      0x100   0xE016             B        ??MBASC_Fun03_13
    174              {
    175                  switch (ReadAdr)
    176                  {
    177                  case 0x7130:                                                            //设备地址
    178                      Data_Buf = UartComm.SlaveAddr;				                
    179                      break;
    180          
    181                  case 0x7131:                                                            //波特率
    182                      Data_Buf = UartComm.BaudRate;				                
    183                      break;
    184          
    185                  case 0x7132:                                                            //奇偶校验
    186                      Data_Buf = UartComm.Parity;			                        
    187                      break;
    188          
    189                  case 0x7133:                                                            //保留
    190                      Data_Buf = 0;						                
    191                      break;
    192          
    193                  case 0x7134:                                                            //补偿使能（无）
    194                      Data_Buf = ProductPara.OffsetEn;						        
    195                      break;
    196          
    197                  case 0x7135:                                                            //滤波等级（系数）
    198                      Data_Buf = ProductPara.cyFilterLevel;			                
    199                      break;
    200          
    201                  case 0x7136:                                                            //自动上传时间                                              
    202                      Data_Buf = ProductPara.cyAutoUpLoadTime;                            //读出来的需是代码，不是实际秒数
    203                      break;
    204          
    205                  case 0x7137:                                                            //修正系数K（无）
    206                      Data_Buf = (u32)(UserParam.UserFlowK * 100);                            
    207                      break;
    208          
    209                  case 0x7138:                                                            //修正系数B（无）
    210                      Data_Buf = (u32)(UserParam.UserFlowB + 100);                            
    211                      break;
    212          
    213                  case 0x7139:                                                            
    214                      Data_Buf = 0;                            
    215                      break;
    216                      
    217                  case 0x713A:                                                            
    218                      Data_Buf = 0;                            
    219                      break;
    220                      
    221                  case 0x713B:                                                            
    222                      Data_Buf = 0;                            
    223                      break;
    224          
    225                  case 0x713C:                                                            
    226                      Data_Buf = 0;                            
    227                      break;
    228          
    229                  case 0x713D:                                                            
    230                      Data_Buf = RunVar.Weight_Unit;                            
    231                      break;
    232          
    233                  case 0x713E:                                                            
    234                      Data_Buf = 0;                            
    235                      break;
    236                      
    237                  case 0x713F:                                                            //整车重量/载荷重量
    238                      Data_Buf = RunVar.VehicleWeight;                                       
    239                      break;
    240          
    241                  case 0x7140:                                                            //超载阀值                
    242                      Data_Buf = RunVar.OverloadLimit;			                
    243                      break;
    244          
    245                  case 0x7141:                                                            //超载阀值偏差
    246                      Data_Buf = RunVar.OverloadLimitDevation;
    247                      break;
    248          
    249                  case 0x7142:                                                            //载重测量方案
    250                      Data_Buf = RunVar.LoadMeasureScheme;
    251                      break;
    252          
    253                  case 0x7143:                                                            //重载阀值
    254                      Data_Buf = RunVar.LoadLimit;
    255                      break;
    256          
    257                  case 0x7144:                                                            //重载阀值偏差
    258                      Data_Buf = RunVar.LoadLimitDevation;
    259                      break;
    260          
    261                  case 0x7145:                                                            //空载阀值
    262                      Data_Buf = RunVar.EmptyLimit;
    263                      break;
    264          
    265                  case 0x7146:                                                            //空载阀值偏差
    266                      Data_Buf = RunVar.EmptyLimitDevation;
    267                      break;
    268          
    269                  case 0x7147:                                                              
    270                      Data_Buf = RunVar.LightLimit;                                       //轻载阈值
    271                      break;
    272          
    273                  case 0x7148:                                                              
    274                      Data_Buf = RunVar.LightLimitDevation;                               //轻载阈值偏差
    275                      break;
    276          
    277                  case 0x7149:                                                              
    278                      Data_Buf = 0;
    279                      break;
    280          
    281                  case 0x714A:                                                             
    282                      Data_Buf = 0;
    283                      break;
    284          
    285                  case 0x714B:                                                             
    286                      Data_Buf = 0;
    287                      break;
    288          
    289                  case 0x714C:                                                             
    290                      Data_Buf = 0;
    291                      break;
    292          
    293                  case 0x714D:                                                             
    294                      Data_Buf = 0;
    295                      break;
    296          
    297                  case 0x714E:                                                             
    298                      Data_Buf = 0;
    299                      break;
    300          
    301                  case 0x714F:                                                             
    302                      Data_Buf = 0;
    303                      break;            
    304          
    305                  case 0x7160:                                                            //输出模式 0-RTU，1-ASCII
    306                      Data_Buf = ProductPara.cyMbtWorkType;				        
    307                      break;
    308                      
    309                  case 0x7170:                                                            
    310                      Data_Buf = (u32)Speed;				        
    311                      break; 
    312                      
    313                  case 0x7171:                                                            
    314                      Data_Buf = (u32)Acc_Flag;				        
    315                      break;
    316          
    317                  case 0x7172:                                                            
    318                      Data_Buf = 0;				        
    319                      break;
    320          
    321                  case 0x7173:                                                            
    322                      Data_Buf = 0;				        
    323                      break;      
    324                      
    325                  case 0x7178:     //读取标定总包数
    326                               
    327                      I2C1_ReadNBytes(EEPROM_ADDRESS, AD_WEIGHT_PACKS, 2, uBuf); //写入对照表
    328                      //Data_Buf = (u16)uBuf[0] * 256 + uBuf[1];
    329                      Data_Buf = ArrayToUshort(uBuf);
    330                      break;
    331                      
    332                  case 0x7180:                                                            //读取 标定的 最大50组原始AD值和车辆载荷重量 
    333                      s_TotalPacks = (u16)(UART1_RXBuff[7] * 256 + UART1_RXBuff[8]);
    334                      s_CurrentPack = (u16)(UART1_RXBuff[9] * 256 + UART1_RXBuff[10]);
    335                      if((s_TotalPacks > 5) || (s_CurrentPack > 4) || (s_CurrentPack >= s_TotalPacks)
    336                         || (UART1_RXBuff[6] != Register_Num * 2)/* || (s_CurrentPack >= RunVar.TotalPacks)*/)
    337                      {
    338                          MBASC_SendErr(MB_EX_ILLEGAL_DATA_VALUE);
    339                          return;
    340                      }
    341                      I2C1_ReadNBytes(EEPROM_ADDRESS, AD_WEIGHT_ADDR(s_CurrentPack), 80, SendBuf + 11);
    342                      memcpy(SendBuf, UART1_RXBuff, 11);
    343                      MBASC_SendMsg(SendBuf, 91);
    344                     
    345                      return;
    346                      
    347                  default:
    348                      break;
    349                  }
    350          
    351                  for (i = 2; i > 0; i--)
    352                  {
    353                      SendBuf[SendLen++] = (u8)(Data_Buf >> ((i - 1) * 8));
   \                     ??MBASC_Fun03_14: (+1)
   \      0x102   0x0031             MOVS     R1,R6
   \      0x104   0xB289             UXTH     R1,R1
   \      0x106   0x1E42             SUBS     R2,R0,#+1
   \      0x108   0x2308             MOVS     R3,#+8
   \      0x10A   0x435A             MULS     R2,R3,R2
   \      0x10C   0x4111             ASRS     R1,R1,R2
   \      0x10E   0x4A74             LDR      R2,??MBASC_Fun03_1+0x4
   \      0x110   0x782B             LDRB     R3,[R5, #+0]
   \      0x112   0x54D1             STRB     R1,[R2, R3]
   \      0x114   0x7829             LDRB     R1,[R5, #+0]
   \      0x116   0x1C49             ADDS     R1,R1,#+1
   \      0x118   0x7029             STRB     R1,[R5, #+0]
    354                  }
   \      0x11A   0x1E40             SUBS     R0,R0,#+1
   \                     ??MBASC_Fun03_15: (+1)
   \      0x11C   0x0001             MOVS     R1,R0
   \      0x11E   0xB2C9             UXTB     R1,R1
   \      0x120   0x2900             CMP      R1,#+0
   \      0x122   0xD1EE             BNE      ??MBASC_Fun03_14
   \      0x124   0x1C7F             ADDS     R7,R7,#+1
   \      0x126   0x4668             MOV      R0,SP
   \      0x128   0x7800             LDRB     R0,[R0, #+0]
   \      0x12A   0x1C40             ADDS     R0,R0,#+1
   \      0x12C   0x4669             MOV      R1,SP
   \      0x12E   0x7008             STRB     R0,[R1, #+0]
   \                     ??MBASC_Fun03_13: (+1)
   \      0x130   0x4668             MOV      R0,SP
   \      0x132   0x7800             LDRB     R0,[R0, #+0]
   \      0x134   0x4669             MOV      R1,SP
   \      0x136   0x8849             LDRH     R1,[R1, #+2]
   \      0x138   0xB280             UXTH     R0,R0
   \      0x13A   0x4288             CMP      R0,R1
   \      0x13C   0xD300             BCC      .+4
   \      0x13E   0xE11B             B        ??MBASC_Fun03_16
   \      0x140   0x0038             MOVS     R0,R7
   \      0x142   0xB280             UXTH     R0,R0
   \      0x144   0x4967             LDR      R1,??MBASC_Fun03_1+0x8  ;; 0x7130
   \      0x146   0x1A40             SUBS     R0,R0,R1
   \      0x148   0xD04D             BEQ      ??MBASC_Fun03_17
   \      0x14A   0x1E40             SUBS     R0,R0,#+1
   \      0x14C   0xD04E             BEQ      ??MBASC_Fun03_18
   \      0x14E   0x1E40             SUBS     R0,R0,#+1
   \      0x150   0xD04F             BEQ      ??MBASC_Fun03_19
   \      0x152   0x1E40             SUBS     R0,R0,#+1
   \      0x154   0xD050             BEQ      ??MBASC_Fun03_20
   \      0x156   0x1E40             SUBS     R0,R0,#+1
   \      0x158   0xD050             BEQ      ??MBASC_Fun03_21
   \      0x15A   0x1E40             SUBS     R0,R0,#+1
   \      0x15C   0xD051             BEQ      ??MBASC_Fun03_22
   \      0x15E   0x1E40             SUBS     R0,R0,#+1
   \      0x160   0xD052             BEQ      ??MBASC_Fun03_23
   \      0x162   0x1E40             SUBS     R0,R0,#+1
   \      0x164   0xD053             BEQ      ??MBASC_Fun03_24
   \      0x166   0x1E40             SUBS     R0,R0,#+1
   \      0x168   0xD05A             BEQ      ??MBASC_Fun03_25
   \      0x16A   0x1E40             SUBS     R0,R0,#+1
   \      0x16C   0xD061             BEQ      ??MBASC_Fun03_26
   \      0x16E   0x1E40             SUBS     R0,R0,#+1
   \      0x170   0xD061             BEQ      ??MBASC_Fun03_27
   \      0x172   0x1E40             SUBS     R0,R0,#+1
   \      0x174   0xD061             BEQ      ??MBASC_Fun03_28
   \      0x176   0x1E40             SUBS     R0,R0,#+1
   \      0x178   0xD061             BEQ      ??MBASC_Fun03_29
   \      0x17A   0x1E40             SUBS     R0,R0,#+1
   \      0x17C   0xD061             BEQ      ??MBASC_Fun03_30
   \      0x17E   0x1E40             SUBS     R0,R0,#+1
   \      0x180   0xD062             BEQ      ??MBASC_Fun03_31
   \      0x182   0x1E40             SUBS     R0,R0,#+1
   \      0x184   0xD062             BEQ      ??MBASC_Fun03_32
   \      0x186   0x1E40             SUBS     R0,R0,#+1
   \      0x188   0xD063             BEQ      ??MBASC_Fun03_33
   \      0x18A   0x1E40             SUBS     R0,R0,#+1
   \      0x18C   0xD064             BEQ      ??MBASC_Fun03_34
   \      0x18E   0x1E40             SUBS     R0,R0,#+1
   \      0x190   0xD065             BEQ      ??MBASC_Fun03_35
   \      0x192   0x1E40             SUBS     R0,R0,#+1
   \      0x194   0xD066             BEQ      ??MBASC_Fun03_36
   \      0x196   0x1E40             SUBS     R0,R0,#+1
   \      0x198   0xD067             BEQ      ??MBASC_Fun03_37
   \      0x19A   0x1E40             SUBS     R0,R0,#+1
   \      0x19C   0xD068             BEQ      ??MBASC_Fun03_38
   \      0x19E   0x1E40             SUBS     R0,R0,#+1
   \      0x1A0   0xD069             BEQ      ??MBASC_Fun03_39
   \      0x1A2   0x1E40             SUBS     R0,R0,#+1
   \      0x1A4   0xD06A             BEQ      ??MBASC_Fun03_40
   \      0x1A6   0x1E40             SUBS     R0,R0,#+1
   \      0x1A8   0xD06B             BEQ      ??MBASC_Fun03_41
   \      0x1AA   0x1E40             SUBS     R0,R0,#+1
   \      0x1AC   0xD06C             BEQ      ??MBASC_Fun03_42
   \      0x1AE   0x1E40             SUBS     R0,R0,#+1
   \      0x1B0   0xD06C             BEQ      ??MBASC_Fun03_43
   \      0x1B2   0x1E40             SUBS     R0,R0,#+1
   \      0x1B4   0xD06C             BEQ      ??MBASC_Fun03_44
   \      0x1B6   0x1E40             SUBS     R0,R0,#+1
   \      0x1B8   0xD06C             BEQ      ??MBASC_Fun03_45
   \      0x1BA   0x1E40             SUBS     R0,R0,#+1
   \      0x1BC   0xD06C             BEQ      ??MBASC_Fun03_46
   \      0x1BE   0x1E40             SUBS     R0,R0,#+1
   \      0x1C0   0xD06C             BEQ      ??MBASC_Fun03_47
   \      0x1C2   0x1E40             SUBS     R0,R0,#+1
   \      0x1C4   0xD06C             BEQ      ??MBASC_Fun03_48
   \      0x1C6   0x3811             SUBS     R0,R0,#+17
   \      0x1C8   0xD06C             BEQ      ??MBASC_Fun03_49
   \      0x1CA   0x3810             SUBS     R0,R0,#+16
   \      0x1CC   0xD06D             BEQ      ??MBASC_Fun03_50
   \      0x1CE   0x1E40             SUBS     R0,R0,#+1
   \      0x1D0   0xD072             BEQ      ??MBASC_Fun03_51
   \      0x1D2   0x1E40             SUBS     R0,R0,#+1
   \      0x1D4   0xD073             BEQ      ??MBASC_Fun03_52
   \      0x1D6   0x1E40             SUBS     R0,R0,#+1
   \      0x1D8   0xD073             BEQ      ??MBASC_Fun03_53
   \      0x1DA   0x1F40             SUBS     R0,R0,#+5
   \      0x1DC   0xD073             BEQ      ??MBASC_Fun03_54
   \      0x1DE   0x3808             SUBS     R0,R0,#+8
   \      0x1E0   0xD100             BNE      .+4
   \      0x1E2   0xE089             B        ??MBASC_Fun03_55
   \      0x1E4   0xE0C6             B        ??MBASC_Fun03_56
   \                     ??MBASC_Fun03_17: (+1)
   \      0x1E6   0x4833             LDR      R0,??MBASC_Fun03_0+0x4
   \      0x1E8   0x7806             LDRB     R6,[R0, #+0]
   \      0x1EA   0xE0C3             B        ??MBASC_Fun03_57
   \                     ??MBASC_Fun03_18: (+1)
   \      0x1EC   0x4831             LDR      R0,??MBASC_Fun03_0+0x4
   \      0x1EE   0x7846             LDRB     R6,[R0, #+1]
   \      0x1F0   0xE0C0             B        ??MBASC_Fun03_57
   \                     ??MBASC_Fun03_19: (+1)
   \      0x1F2   0x4830             LDR      R0,??MBASC_Fun03_0+0x4
   \      0x1F4   0x7906             LDRB     R6,[R0, #+4]
   \      0x1F6   0xE0BD             B        ??MBASC_Fun03_57
   \                     ??MBASC_Fun03_20: (+1)
   \      0x1F8   0x0026             MOVS     R6,R4
   \      0x1FA   0xE0BB             B        ??MBASC_Fun03_57
   \                     ??MBASC_Fun03_21: (+1)
   \      0x1FC   0x....             LDR      R0,??DataTable4
   \      0x1FE   0x7906             LDRB     R6,[R0, #+4]
   \      0x200   0xE0B8             B        ??MBASC_Fun03_57
   \                     ??MBASC_Fun03_22: (+1)
   \      0x202   0x....             LDR      R0,??DataTable4
   \      0x204   0x7846             LDRB     R6,[R0, #+1]
   \      0x206   0xE0B5             B        ??MBASC_Fun03_57
   \                     ??MBASC_Fun03_23: (+1)
   \      0x208   0x....             LDR      R0,??DataTable4
   \      0x20A   0x7806             LDRB     R6,[R0, #+0]
   \      0x20C   0xE0B2             B        ??MBASC_Fun03_57
   \                     ??MBASC_Fun03_24: (+1)
   \      0x20E   0x....             LDR      R0,??DataTable4_1
   \      0x210   0x6800             LDR      R0,[R0, #+0]
   \      0x212   0x....             LDR      R1,??DataTable4_2  ;; 0x42c80000
   \      0x214   0x....'....        BL       __aeabi_fmul
   \      0x218   0x....'....        BL       __aeabi_f2uiz
   \      0x21C   0x0006             MOVS     R6,R0
   \      0x21E   0xE0A9             B        ??MBASC_Fun03_57
   \                     ??MBASC_Fun03_25: (+1)
   \      0x220   0x....             LDR      R0,??DataTable4_1
   \      0x222   0x6840             LDR      R0,[R0, #+4]
   \      0x224   0x....             LDR      R1,??DataTable4_2  ;; 0x42c80000
   \      0x226   0x....'....        BL       __aeabi_fadd
   \      0x22A   0x....'....        BL       __aeabi_f2uiz
   \      0x22E   0x0006             MOVS     R6,R0
   \      0x230   0xE0A0             B        ??MBASC_Fun03_57
   \                     ??MBASC_Fun03_26: (+1)
   \      0x232   0x0026             MOVS     R6,R4
   \      0x234   0xE09E             B        ??MBASC_Fun03_57
   \                     ??MBASC_Fun03_27: (+1)
   \      0x236   0x0026             MOVS     R6,R4
   \      0x238   0xE09C             B        ??MBASC_Fun03_57
   \                     ??MBASC_Fun03_28: (+1)
   \      0x23A   0x0026             MOVS     R6,R4
   \      0x23C   0xE09A             B        ??MBASC_Fun03_57
   \                     ??MBASC_Fun03_29: (+1)
   \      0x23E   0x0026             MOVS     R6,R4
   \      0x240   0xE098             B        ??MBASC_Fun03_57
   \                     ??MBASC_Fun03_30: (+1)
   \      0x242   0x....             LDR      R0,??DataTable4_3
   \      0x244   0x7806             LDRB     R6,[R0, #+0]
   \      0x246   0xE095             B        ??MBASC_Fun03_57
   \                     ??MBASC_Fun03_31: (+1)
   \      0x248   0x0026             MOVS     R6,R4
   \      0x24A   0xE093             B        ??MBASC_Fun03_57
   \                     ??MBASC_Fun03_32: (+1)
   \      0x24C   0x....             LDR      R0,??DataTable4_4
   \      0x24E   0x8A86             LDRH     R6,[R0, #+20]
   \      0x250   0xE090             B        ??MBASC_Fun03_57
   \                     ??MBASC_Fun03_33: (+1)
   \      0x252   0x....             LDR      R0,??DataTable4_4
   \      0x254   0x8B06             LDRH     R6,[R0, #+24]
   \      0x256   0xE08D             B        ??MBASC_Fun03_57
   \                     ??MBASC_Fun03_34: (+1)
   \      0x258   0x....             LDR      R0,??DataTable4_4
   \      0x25A   0x8B46             LDRH     R6,[R0, #+26]
   \      0x25C   0xE08A             B        ??MBASC_Fun03_57
   \                     ??MBASC_Fun03_35: (+1)
   \      0x25E   0x....             LDR      R0,??DataTable4_4
   \      0x260   0x8AC6             LDRH     R6,[R0, #+22]
   \      0x262   0xE087             B        ??MBASC_Fun03_57
   \                     ??MBASC_Fun03_36: (+1)
   \      0x264   0x....             LDR      R0,??DataTable4_4
   \      0x266   0x8B86             LDRH     R6,[R0, #+28]
   \      0x268   0xE084             B        ??MBASC_Fun03_57
   \                     ??MBASC_Fun03_37: (+1)
   \      0x26A   0x....             LDR      R0,??DataTable4_4
   \      0x26C   0x8BC6             LDRH     R6,[R0, #+30]
   \      0x26E   0xE081             B        ??MBASC_Fun03_57
   \                     ??MBASC_Fun03_38: (+1)
   \      0x270   0x....             LDR      R0,??DataTable4_4
   \      0x272   0x8C06             LDRH     R6,[R0, #+32]
   \      0x274   0xE07E             B        ??MBASC_Fun03_57
   \                     ??MBASC_Fun03_39: (+1)
   \      0x276   0x....             LDR      R0,??DataTable4_4
   \      0x278   0x8C46             LDRH     R6,[R0, #+34]
   \      0x27A   0xE07B             B        ??MBASC_Fun03_57
   \                     ??MBASC_Fun03_40: (+1)
   \      0x27C   0x....             LDR      R0,??DataTable4_4
   \      0x27E   0x8C86             LDRH     R6,[R0, #+36]
   \      0x280   0xE078             B        ??MBASC_Fun03_57
   \                     ??MBASC_Fun03_41: (+1)
   \      0x282   0x....             LDR      R0,??DataTable4_4
   \      0x284   0x8CC6             LDRH     R6,[R0, #+38]
   \      0x286   0xE075             B        ??MBASC_Fun03_57
   \                     ??MBASC_Fun03_42: (+1)
   \      0x288   0x0026             MOVS     R6,R4
   \      0x28A   0xE073             B        ??MBASC_Fun03_57
   \                     ??MBASC_Fun03_43: (+1)
   \      0x28C   0x0026             MOVS     R6,R4
   \      0x28E   0xE071             B        ??MBASC_Fun03_57
   \                     ??MBASC_Fun03_44: (+1)
   \      0x290   0x0026             MOVS     R6,R4
   \      0x292   0xE06F             B        ??MBASC_Fun03_57
   \                     ??MBASC_Fun03_45: (+1)
   \      0x294   0x0026             MOVS     R6,R4
   \      0x296   0xE06D             B        ??MBASC_Fun03_57
   \                     ??MBASC_Fun03_46: (+1)
   \      0x298   0x0026             MOVS     R6,R4
   \      0x29A   0xE06B             B        ??MBASC_Fun03_57
   \                     ??MBASC_Fun03_47: (+1)
   \      0x29C   0x0026             MOVS     R6,R4
   \      0x29E   0xE069             B        ??MBASC_Fun03_57
   \                     ??MBASC_Fun03_48: (+1)
   \      0x2A0   0x0026             MOVS     R6,R4
   \      0x2A2   0xE067             B        ??MBASC_Fun03_57
   \                     ??MBASC_Fun03_49: (+1)
   \      0x2A4   0x....             LDR      R0,??DataTable4
   \      0x2A6   0x7886             LDRB     R6,[R0, #+2]
   \      0x2A8   0xE064             B        ??MBASC_Fun03_57
   \                     ??MBASC_Fun03_50: (+1)
   \      0x2AA   0x....             LDR      R0,??DataTable4_5
   \      0x2AC   0x8806             LDRH     R6,[R0, #+0]
   \      0x2AE   0xE061             B        ??MBASC_Fun03_57
   \                     ??MBASC_Fun03_0:
   \      0x2B0   0x....'....        DC32     UART1_RXBuff
   \      0x2B4   0x....'....        DC32     UartComm
   \                     ??MBASC_Fun03_51: (+1)
   \      0x2B8   0x....             LDR      R0,??DataTable4_6
   \      0x2BA   0x7806             LDRB     R6,[R0, #+0]
   \      0x2BC   0xE05A             B        ??MBASC_Fun03_57
   \                     ??MBASC_Fun03_52: (+1)
   \      0x2BE   0x0026             MOVS     R6,R4
   \      0x2C0   0xE058             B        ??MBASC_Fun03_57
   \                     ??MBASC_Fun03_53: (+1)
   \      0x2C2   0x0026             MOVS     R6,R4
   \      0x2C4   0xE056             B        ??MBASC_Fun03_57
   \                     ??MBASC_Fun03_54: (+1)
   \      0x2C6   0xAB01             ADD      R3,SP,#+4
   \      0x2C8   0x2202             MOVS     R2,#+2
   \      0x2CA   0x....             LDR      R1,??DataTable4_7  ;; 0x43e
   \      0x2CC   0x20A0             MOVS     R0,#+160
   \      0x2CE   0x....'....        BL       I2C1_ReadNBytes
   \      0x2D2   0xA801             ADD      R0,SP,#+4
   \      0x2D4   0x....'....        BL       ArrayToUshort
   \      0x2D8   0x0006             MOVS     R6,R0
   \      0x2DA   0xE04B             B        ??MBASC_Fun03_57
   \                     ??MBASC_Fun03_1:
   \      0x2DC   0x....'....        DC32     SendLen
   \      0x2E0   0x....'....        DC32     SendBuf
   \      0x2E4   0x0000'7130        DC32     0x7130
   \      0x2E8   0x0000'7151        DC32     0x7151
   \      0x2EC   0x0000'7160        DC32     0x7160
   \      0x2F0   0x0000'7170        DC32     0x7170
   \      0x2F4   0x0000'7175        DC32     0x7175
   \                     ??MBASC_Fun03_55: (+1)
   \      0x2F8   0x2080             MOVS     R0,#+128
   \      0x2FA   0x0040             LSLS     R0,R0,#+1        ;; #+256
   \      0x2FC   0x....             LDR      R4,??DataTable4_8
   \      0x2FE   0x79E1             LDRB     R1,[R4, #+7]
   \      0x300   0x4341             MULS     R1,R0,R1
   \      0x302   0x7A22             LDRB     R2,[R4, #+8]
   \      0x304   0x1889             ADDS     R1,R1,R2
   \      0x306   0x7A62             LDRB     R2,[R4, #+9]
   \      0x308   0x4342             MULS     R2,R0,R2
   \      0x30A   0x7AA0             LDRB     R0,[R4, #+10]
   \      0x30C   0x1810             ADDS     R0,R2,R0
   \      0x30E   0x000A             MOVS     R2,R1
   \      0x310   0xB292             UXTH     R2,R2
   \      0x312   0x2A06             CMP      R2,#+6
   \      0x314   0xDA0F             BGE      ??MBASC_Fun03_58
   \      0x316   0x0002             MOVS     R2,R0
   \      0x318   0xB292             UXTH     R2,R2
   \      0x31A   0x2A05             CMP      R2,#+5
   \      0x31C   0xDA0B             BGE      ??MBASC_Fun03_58
   \      0x31E   0x0002             MOVS     R2,R0
   \      0x320   0xB292             UXTH     R2,R2
   \      0x322   0xB289             UXTH     R1,R1
   \      0x324   0x428A             CMP      R2,R1
   \      0x326   0xD206             BCS      ??MBASC_Fun03_58
   \      0x328   0x79A1             LDRB     R1,[R4, #+6]
   \      0x32A   0x466A             MOV      R2,SP
   \      0x32C   0x8852             LDRH     R2,[R2, #+2]
   \      0x32E   0x2302             MOVS     R3,#+2
   \      0x330   0x4353             MULS     R3,R2,R3
   \      0x332   0x4299             CMP      R1,R3
   \      0x334   0xD003             BEQ      ??MBASC_Fun03_59
   \                     ??MBASC_Fun03_58: (+1)
   \      0x336   0x2003             MOVS     R0,#+3
   \      0x338   0x....'....        BL       MBASC_SendErr
   \      0x33C   0xE020             B        ??MBASC_Fun03_12
   \                     ??MBASC_Fun03_59: (+1)
   \      0x33E   0x....             LDR      R5,??DataTable4_9
   \      0x340   0x002B             MOVS     R3,R5
   \      0x342   0x330B             ADDS     R3,R3,#+11
   \      0x344   0x2250             MOVS     R2,#+80
   \      0x346   0xB280             UXTH     R0,R0
   \      0x348   0x2150             MOVS     R1,#+80
   \      0x34A   0x4341             MULS     R1,R0,R1
   \      0x34C   0x2088             MOVS     R0,#+136
   \      0x34E   0x00C0             LSLS     R0,R0,#+3        ;; #+1088
   \      0x350   0x1808             ADDS     R0,R1,R0
   \      0x352   0x0001             MOVS     R1,R0
   \      0x354   0xB289             UXTH     R1,R1
   \      0x356   0x20A0             MOVS     R0,#+160
   \      0x358   0x....'....        BL       I2C1_ReadNBytes
   \      0x35C   0x220B             MOVS     R2,#+11
   \      0x35E   0x9400             STR      R4,[SP, #+0]
   \      0x360   0x002C             MOVS     R4,R5
   \      0x362   0x9900             LDR      R1,[SP, #+0]
   \      0x364   0x0020             MOVS     R0,R4
   \      0x366   0x....'....        BL       __aeabi_memcpy
   \      0x36A   0x215B             MOVS     R1,#+91
   \      0x36C   0x0028             MOVS     R0,R5
   \      0x36E   0x....'....        BL       MBASC_SendMsg
   \      0x372   0xE005             B        ??MBASC_Fun03_12
   \                     ??MBASC_Fun03_56: (+1)
   \                     ??MBASC_Fun03_57: (+1)
   \      0x374   0x2002             MOVS     R0,#+2
   \      0x376   0xE6D1             B        ??MBASC_Fun03_15
    355              }
    356              
    357              MBASC_SendMsg(SendBuf, SendLen);
   \                     ??MBASC_Fun03_16: (+1)
   \      0x378   0x7829             LDRB     R1,[R5, #+0]
   \      0x37A   0x....             LDR      R0,??DataTable4_9
   \      0x37C   0x....'....        BL       MBASC_SendMsg
    358          }
   \                     ??MBASC_Fun03_12: (+1)
   \      0x380   0xBDF7             POP      {R0-R2,R4-R7,PC}  ;; return
   \      0x382   0xBF00             Nop
   \                     ??MBASC_Fun03_2:
   \      0x384   0x0000'7178        DC32     0x7178
    359          
    360          
    361          extern struct OutData myOutData;
    362          extern u16 g_wRADValue;
    363          //**************************************************************************************************
    364          // 名称         : MBASC_Fun04()
    365          // 创建日期     : 2016-09-05
    366          // 作者         : 庄明群
    367          // 功能         : 04功能码，读双个寄存器操作
    368          // 输入参数     : 无
    369          // 输出参数     : 无
    370          // 返回结果     : 无
    371          // 注意和说明   : 
    372          // 修改内容     :  寄存器地址改为0x71xx     2016.09.14
    373          //**************************************************************************************************

   \                                 In section .text, align 2, keep-with-next
    374          void MBASC_Fun04(void)	//读双个寄存器
    375          {
   \                     MBASC_Fun04: (+1)
   \        0x0   0xB5F8             PUSH     {R3-R7,LR}
    376              u8 i;
    377              u32 Data_Buf;
    378              u16 ReadAdr = 0;
   \        0x2   0x2000             MOVS     R0,#+0
    379              u16 Register_Num = (u16)UART1_RXBuff[4] * 256 + UART1_RXBuff[5];
   \        0x4   0x2180             MOVS     R1,#+128
   \        0x6   0x0049             LSLS     R1,R1,#+1        ;; #+256
   \        0x8   0x....             LDR      R0,??DataTable5
   \        0xA   0x7902             LDRB     R2,[R0, #+4]
   \        0xC   0x434A             MULS     R2,R1,R2
   \        0xE   0x7943             LDRB     R3,[R0, #+5]
   \       0x10   0x18D2             ADDS     R2,R2,R3
   \       0x12   0x466B             MOV      R3,SP
   \       0x14   0x801A             STRH     R2,[R3, #+0]
    380          
    381              if(UART1_RXBuff[2] - UartComm.SlaveAddr !=0) 
   \       0x16   0x7882             LDRB     R2,[R0, #+2]
   \       0x18   0x....             LDR      R3,??DataTable5_1
   \       0x1A   0x781B             LDRB     R3,[R3, #+0]
   \       0x1C   0x1AD2             SUBS     R2,R2,R3
   \       0x1E   0x2A00             CMP      R2,#+0
   \       0x20   0xD004             BEQ      ??MBASC_Fun04_0
    382                  ReadAdr = (u16)UART1_RXBuff[2] * 256 + UART1_RXBuff[3];
   \       0x22   0x7882             LDRB     R2,[R0, #+2]
   \       0x24   0x434A             MULS     R2,R1,R2
   \       0x26   0x78C1             LDRB     R1,[R0, #+3]
   \       0x28   0x1855             ADDS     R5,R2,R1
   \       0x2A   0xE003             B        ??MBASC_Fun04_1
    383              else
    384                  ReadAdr = 0x71 * 256 + UART1_RXBuff[3];
   \                     ??MBASC_Fun04_0: (+1)
   \       0x2C   0x78C1             LDRB     R1,[R0, #+3]
   \       0x2E   0x22E2             MOVS     R2,#+226
   \       0x30   0x01D2             LSLS     R2,R2,#+7        ;; #+28928
   \       0x32   0x188D             ADDS     R5,R1,R2
    385              
    386              SendLen = 0;
   \                     ??MBASC_Fun04_1: (+1)
   \       0x34   0x....             LDR      R6,??DataTable5_2
   \       0x36   0x2100             MOVS     R1,#+0
   \       0x38   0x7031             STRB     R1,[R6, #+0]
    387              SendBuf[SendLen++] = (MBASC_GetSlaveAddr(UART1_RXBuff)) ? UartComm.SlaveAddr : 0x00;
   \       0x3A   0x7837             LDRB     R7,[R6, #+0]
   \       0x3C   0x0039             MOVS     R1,R7
   \       0x3E   0x1C49             ADDS     R1,R1,#+1
   \       0x40   0x7031             STRB     R1,[R6, #+0]
   \       0x42   0x....'....        BL       MBASC_GetSlaveAddr
   \       0x46   0x2800             CMP      R0,#+0
   \       0x48   0xD002             BEQ      ??MBASC_Fun04_2
   \       0x4A   0x....             LDR      R0,??DataTable5_1
   \       0x4C   0x7801             LDRB     R1,[R0, #+0]
   \       0x4E   0xE000             B        ??MBASC_Fun04_3
   \                     ??MBASC_Fun04_2: (+1)
   \       0x50   0x2100             MOVS     R1,#+0
   \                     ??MBASC_Fun04_3: (+1)
   \       0x52   0x....             LDR      R0,??DataTable5_3
   \       0x54   0xB2FF             UXTB     R7,R7
   \       0x56   0x55C1             STRB     R1,[R0, R7]
    388              SendBuf[SendLen++] = MB_FUNC_READ_INPUT_REGISTER;
   \       0x58   0x2104             MOVS     R1,#+4
   \       0x5A   0x7832             LDRB     R2,[R6, #+0]
   \       0x5C   0x5481             STRB     R1,[R0, R2]
   \       0x5E   0x7831             LDRB     R1,[R6, #+0]
   \       0x60   0x1C49             ADDS     R1,R1,#+1
   \       0x62   0x7031             STRB     R1,[R6, #+0]
    389              SendBuf[SendLen++] = Register_Num * 2;		                        //数据长度
   \       0x64   0x4669             MOV      R1,SP
   \       0x66   0x8809             LDRH     R1,[R1, #+0]
   \       0x68   0x2202             MOVS     R2,#+2
   \       0x6A   0x4351             MULS     R1,R2,R1
   \       0x6C   0x7832             LDRB     R2,[R6, #+0]
   \       0x6E   0x5481             STRB     R1,[R0, R2]
   \       0x70   0x7831             LDRB     R1,[R6, #+0]
   \       0x72   0x1C49             ADDS     R1,R1,#+1
   \       0x74   0x7031             STRB     R1,[R6, #+0]
    390                                                                                          //如果读取范围溢出
    391              if(!(((ReadAdr >= MBASC_INPUT_REG_REGION1_BGEIN) && (ReadAdr <= MBASC_INPUT_REG_REGION1_END)
    392                  && ((ReadAdr + Register_Num) <= (MBASC_INPUT_REG_REGION1_END + 2)))
    393                  || ((ReadAdr >= MBASC_INPUT_REG_REGION2_BGEIN) && (ReadAdr <= MBASC_INPUT_REG_REGION2_END)
    394                  && (ReadAdr + Register_Num <= (MBASC_INPUT_REG_REGION2_END + 2)))
    395                  || ((ReadAdr >= MBASC_INPUT_REG_REGION3_BGEIN) && (ReadAdr <= MBASC_INPUT_REG_REGION3_END) 
    396                  && (ReadAdr + Register_Num <= (MBASC_INPUT_REG_REGION3_END + 2)))    
    397                  && (0 != Register_Num) && (0 == (Register_Num & 0x01)) && (0 == (ReadAdr & 0x01))))   
   \       0x76   0x0029             MOVS     R1,R5
   \       0x78   0xB289             UXTH     R1,R1
   \       0x7A   0x22E2             MOVS     R2,#+226
   \       0x7C   0x01D2             LSLS     R2,R2,#+7        ;; #+28928
   \       0x7E   0x1A89             SUBS     R1,R1,R2
   \       0x80   0x2931             CMP      R1,#+49
   \       0x82   0xD207             BCS      ??MBASC_Fun04_4
   \       0x84   0x0029             MOVS     R1,R5
   \       0x86   0xB289             UXTH     R1,R1
   \       0x88   0x466A             MOV      R2,SP
   \       0x8A   0x8812             LDRH     R2,[R2, #+0]
   \       0x8C   0x1889             ADDS     R1,R1,R2
   \       0x8E   0x....             LDR      R2,??DataTable5_4  ;; 0x7133
   \       0x90   0x4291             CMP      R1,R2
   \       0x92   0xDB30             BLT      ??MBASC_Fun04_5
   \                     ??MBASC_Fun04_4: (+1)
   \       0x94   0x0029             MOVS     R1,R5
   \       0x96   0xB289             UXTH     R1,R1
   \       0x98   0x....             LDR      R2,??DataTable5_5  ;; 0x710c
   \       0x9A   0x1A89             SUBS     R1,R1,R2
   \       0x9C   0x2901             CMP      R1,#+1
   \       0x9E   0xD207             BCS      ??MBASC_Fun04_6
   \       0xA0   0x0029             MOVS     R1,R5
   \       0xA2   0xB289             UXTH     R1,R1
   \       0xA4   0x466A             MOV      R2,SP
   \       0xA6   0x8812             LDRH     R2,[R2, #+0]
   \       0xA8   0x1889             ADDS     R1,R1,R2
   \       0xAA   0x....             LDR      R2,??DataTable5_6  ;; 0x710f
   \       0xAC   0x4291             CMP      R1,R2
   \       0xAE   0xDB22             BLT      ??MBASC_Fun04_5
   \                     ??MBASC_Fun04_6: (+1)
   \       0xB0   0x0029             MOVS     R1,R5
   \       0xB2   0xB289             UXTH     R1,R1
   \       0xB4   0x....             LDR      R2,??DataTable5_7  ;; 0x710e
   \       0xB6   0x1A89             SUBS     R1,R1,R2
   \       0xB8   0x2901             CMP      R1,#+1
   \       0xBA   0xD218             BCS      ??MBASC_Fun04_7
   \       0xBC   0x0029             MOVS     R1,R5
   \       0xBE   0xB289             UXTH     R1,R1
   \       0xC0   0x466A             MOV      R2,SP
   \       0xC2   0x8812             LDRH     R2,[R2, #+0]
   \       0xC4   0x1889             ADDS     R1,R1,R2
   \       0xC6   0x....             LDR      R2,??DataTable5_8  ;; 0x7111
   \       0xC8   0x4291             CMP      R1,R2
   \       0xCA   0xDA10             BGE      ??MBASC_Fun04_7
   \       0xCC   0x4669             MOV      R1,SP
   \       0xCE   0x8809             LDRH     R1,[R1, #+0]
   \       0xD0   0x2900             CMP      R1,#+0
   \       0xD2   0xD00C             BEQ      ??MBASC_Fun04_7
   \       0xD4   0x4669             MOV      R1,SP
   \       0xD6   0x8809             LDRH     R1,[R1, #+0]
   \       0xD8   0x000A             MOVS     R2,R1
   \       0xDA   0x07D2             LSLS     R2,R2,#+31       ;; ZeroExtS R2,R2,#+31,#+31
   \       0xDC   0x0FD2             LSRS     R2,R2,#+31
   \       0xDE   0x0029             MOVS     R1,R5
   \       0xE0   0x000B             MOVS     R3,R1
   \       0xE2   0x07DB             LSLS     R3,R3,#+31       ;; ZeroExtS R3,R3,#+31,#+31
   \       0xE4   0x0FDB             LSRS     R3,R3,#+31
   \       0xE6   0x4313             ORRS     R3,R3,R2
   \       0xE8   0xB2DB             UXTB     R3,R3
   \       0xEA   0x2B00             CMP      R3,#+0
   \       0xEC   0xD003             BEQ      ??MBASC_Fun04_5
    398              {
    399                  MBASC_SendErr(MB_EX_ILLEGAL_DATA_ADDRESS);
   \                     ??MBASC_Fun04_7: (+1)
   \       0xEE   0x2002             MOVS     R0,#+2
   \       0xF0   0x....'....        BL       MBASC_SendErr
    400                  return;
   \       0xF4   0xE0F2             B        ??MBASC_Fun04_8
    401              }
    402          
    403            if((ReadAdr != 0x7114) && (ReadAdr != 0x7120))
   \                     ??MBASC_Fun04_5: (+1)
   \       0xF6   0x0029             MOVS     R1,R5
   \       0xF8   0xB289             UXTH     R1,R1
   \       0xFA   0x....             LDR      R2,??DataTable5_9  ;; 0x7114
   \       0xFC   0x4291             CMP      R1,R2
   \       0xFE   0xD050             BEQ      ??MBASC_Fun04_9
   \      0x100   0x0029             MOVS     R1,R5
   \      0x102   0xB289             UXTH     R1,R1
   \      0x104   0x....             LDR      R2,??DataTable5_10  ;; 0x7120
   \      0x106   0x4291             CMP      R1,R2
   \      0x108   0xD04B             BEQ      ??MBASC_Fun04_9
    404              for (u8 k = 0; k < Register_Num; ReadAdr += 2, k += 2)
   \      0x10A   0x2100             MOVS     R1,#+0
   \      0x10C   0xE010             B        ??MBASC_Fun04_10
    405              {
    406                  switch (ReadAdr)
    407                  {
    408                  case 0x7100:                                                            //载重状态（01-空载；02-满载；03-超载；04-装载；05-卸载(空闲)）
    409                      Data_Buf = (u32)(((RunVar.Weight_Unit << 8) & 0xFF00) + (g_cyWorkState & 0xFF));            	                                
    410                      break;
    411          
    412                  case 0x7102:                                                            //铲数
    413                      Data_Buf = (u32)g_cyRecordShovelNum;                                                   	                                        
    414                      break;
    415          
    416                  case 0x7104:                                                            //车辆载荷重量                                                                                   
    417                      Data_Buf = UserParam.CarLoadWeight;		                                
    418                      break;
    419          
    420                  case 0x7106:                                                            //载重相对值
    421                      Data_Buf = UserParam.LoadRelativeValue;
    422                      break;
    423          
    424                  case 0x7108:                                                            //原始AD值
    425                      Data_Buf = (u32)g_wRADValue;	                                				                        //NC
    426                      break;
    427          
    428                  case 0x710A:                                                            //浮动零点		                                
    429          //            myOutData = Runing(g_wFADValue); 
    430                      Data_Buf = myOutData.Weight; 					                       
    431                      break;
    432          
    433                  case 0x710C:
    434                      Data_Buf = 0;                        
    435                      break;
    436          
    437                  case 0x710E:
    438                      Data_Buf = 0;                             
    439                      break;
    440                      
    441                 /*  case 0x7114:  
    442                     Data_Buf = 0x11;                             
    443                      break;
    444                      case 0x7115:  
    445                     Data_Buf = 0x22;                             
    446                      break;
    447                      case 0x7116:  
    448                     Data_Buf = 0x33;                             
    449                      break;
    450                      case 0x7117:  
    451                     Data_Buf = 0x44;                             
    452                      break;
    453                      case 0x7118:  
    454                     Data_Buf = 0x55;                             
    455                      break;
    456                      case 0x7119:  
    457                     Data_Buf = 0x66;                             
    458                      break;
    459                      case 0x711A:  
    460                     Data_Buf = 0x77;                             
    461                      break;
    462                      case 0x711B:  
    463                     Data_Buf = 0x88;                             
    464                      break;
    465                    */
    466                  default:
    467                      break;
    468                  }
    469                  for (i = 4; i > 0; i--)
    470                  {
    471                      SendBuf[SendLen++] = (u8)(Data_Buf >> ((i - 1) * 8));
   \                     ??MBASC_Fun04_11: (+1)
   \      0x10E   0x1E53             SUBS     R3,R2,#+1
   \      0x110   0x2708             MOVS     R7,#+8
   \      0x112   0x437B             MULS     R3,R7,R3
   \      0x114   0x0027             MOVS     R7,R4
   \      0x116   0x40DF             LSRS     R7,R7,R3
   \      0x118   0x7833             LDRB     R3,[R6, #+0]
   \      0x11A   0x54C7             STRB     R7,[R0, R3]
   \      0x11C   0x7833             LDRB     R3,[R6, #+0]
   \      0x11E   0x1C5B             ADDS     R3,R3,#+1
   \      0x120   0x7033             STRB     R3,[R6, #+0]
    472                  }
   \      0x122   0x1E52             SUBS     R2,R2,#+1
   \                     ??MBASC_Fun04_12: (+1)
   \      0x124   0x0013             MOVS     R3,R2
   \      0x126   0xB2DB             UXTB     R3,R3
   \      0x128   0x2B00             CMP      R3,#+0
   \      0x12A   0xD1F0             BNE      ??MBASC_Fun04_11
   \      0x12C   0x1CAD             ADDS     R5,R5,#+2
   \      0x12E   0x1C89             ADDS     R1,R1,#+2
   \                     ??MBASC_Fun04_10: (+1)
   \      0x130   0x000A             MOVS     R2,R1
   \      0x132   0xB2D2             UXTB     R2,R2
   \      0x134   0x466B             MOV      R3,SP
   \      0x136   0x881B             LDRH     R3,[R3, #+0]
   \      0x138   0xB292             UXTH     R2,R2
   \      0x13A   0x429A             CMP      R2,R3
   \      0x13C   0xD300             BCC      .+4
   \      0x13E   0xE0CA             B        ??MBASC_Fun04_13
   \      0x140   0x002A             MOVS     R2,R5
   \      0x142   0xB292             UXTH     R2,R2
   \      0x144   0x23E2             MOVS     R3,#+226
   \      0x146   0x01DB             LSLS     R3,R3,#+7        ;; #+28928
   \      0x148   0x1AD2             SUBS     R2,R2,R3
   \      0x14A   0xD00E             BEQ      ??MBASC_Fun04_14
   \      0x14C   0x1E92             SUBS     R2,R2,#+2
   \      0x14E   0xD013             BEQ      ??MBASC_Fun04_15
   \      0x150   0x1E92             SUBS     R2,R2,#+2
   \      0x152   0xD014             BEQ      ??MBASC_Fun04_16
   \      0x154   0x1E92             SUBS     R2,R2,#+2
   \      0x156   0xD015             BEQ      ??MBASC_Fun04_17
   \      0x158   0x1E92             SUBS     R2,R2,#+2
   \      0x15A   0xD016             BEQ      ??MBASC_Fun04_18
   \      0x15C   0x1E92             SUBS     R2,R2,#+2
   \      0x15E   0xD017             BEQ      ??MBASC_Fun04_19
   \      0x160   0x1E92             SUBS     R2,R2,#+2
   \      0x162   0xD018             BEQ      ??MBASC_Fun04_20
   \      0x164   0x1E92             SUBS     R2,R2,#+2
   \      0x166   0xD018             BEQ      ??MBASC_Fun04_21
   \      0x168   0xE019             B        ??MBASC_Fun04_22
   \                     ??MBASC_Fun04_14: (+1)
   \      0x16A   0x....             LDR      R2,??DataTable5_11
   \      0x16C   0x7812             LDRB     R2,[R2, #+0]
   \      0x16E   0x0212             LSLS     R2,R2,#+8
   \      0x170   0x....             LDR      R3,??DataTable5_12
   \      0x172   0x781B             LDRB     R3,[R3, #+0]
   \      0x174   0x18D4             ADDS     R4,R2,R3
   \      0x176   0xE012             B        ??MBASC_Fun04_23
   \                     ??MBASC_Fun04_15: (+1)
   \      0x178   0x....             LDR      R2,??DataTable5_13
   \      0x17A   0x7814             LDRB     R4,[R2, #+0]
   \      0x17C   0xE00F             B        ??MBASC_Fun04_23
   \                     ??MBASC_Fun04_16: (+1)
   \      0x17E   0x....             LDR      R2,??DataTable5_14
   \      0x180   0x6894             LDR      R4,[R2, #+8]
   \      0x182   0xE00C             B        ??MBASC_Fun04_23
   \                     ??MBASC_Fun04_17: (+1)
   \      0x184   0x....             LDR      R2,??DataTable5_14
   \      0x186   0x68D4             LDR      R4,[R2, #+12]
   \      0x188   0xE009             B        ??MBASC_Fun04_23
   \                     ??MBASC_Fun04_18: (+1)
   \      0x18A   0x....             LDR      R2,??DataTable6
   \      0x18C   0x8814             LDRH     R4,[R2, #+0]
   \      0x18E   0xE006             B        ??MBASC_Fun04_23
   \                     ??MBASC_Fun04_19: (+1)
   \      0x190   0x....             LDR      R2,??DataTable6_1
   \      0x192   0x8854             LDRH     R4,[R2, #+2]
   \      0x194   0xE003             B        ??MBASC_Fun04_23
   \                     ??MBASC_Fun04_20: (+1)
   \      0x196   0x2400             MOVS     R4,#+0
   \      0x198   0xE001             B        ??MBASC_Fun04_23
   \                     ??MBASC_Fun04_21: (+1)
   \      0x19A   0x2400             MOVS     R4,#+0
   \      0x19C   0xE7FF             B        ??MBASC_Fun04_23
   \                     ??MBASC_Fun04_22: (+1)
   \                     ??MBASC_Fun04_23: (+1)
   \      0x19E   0x2204             MOVS     R2,#+4
   \      0x1A0   0xE7C0             B        ??MBASC_Fun04_12
    473              }
    474              else
    475              {
    476              
    477                  for (u8 k = 0; k < Register_Num; ReadAdr++, k++)
   \                     ??MBASC_Fun04_9: (+1)
   \      0x1A2   0x2100             MOVS     R1,#+0
   \      0x1A4   0xE00F             B        ??MBASC_Fun04_24
    478                  {
    479                    switch (ReadAdr)
    480                    {
    481                     
    482                      case 0x7114:  
    483                      SendBuf[2]= Register_Num;
    484                      SendBuf[SendLen++]= (uint16_t)g_wRADValue>>8;  
    485                      SendBuf[SendLen++] = (uint16_t)g_wRADValue & 0x00FF;  
    486                      break;
    487                      
    488                      case 0x7115:  
    489                      SendBuf[SendLen++] = ADXL345_BUF[0];  
    490                       SendBuf[SendLen++] = ADXL345_BUF[1];
    491                      break;
    492                      
    493                      case 0x7116:  
    494                      SendBuf[SendLen++] =ADXL345_BUF[2];
    495                      SendBuf[SendLen++] = ADXL345_BUF[3];
    496                      break;
    497                      
    498                      case 0x7117:         
    499                      SendBuf[SendLen++] = ADXL345_BUF[4];
    500                      SendBuf[SendLen++] = ADXL345_BUF[5]; 
    501                      break;
    502                    
    503                      case 0x7120:  
    504                      SendBuf[2]= Register_Num;
    505                      SendBuf[SendLen++]= (uint16_t)g_wRADValue>>8;  
    506                      SendBuf[SendLen++] = (uint16_t)g_wRADValue & 0x00FF;  
    507                      break;
    508                      
    509                      case 0x7121:  
    510                      SendBuf[SendLen++] = ADXL345_BUF[6];  
    511                      SendBuf[SendLen++] = ADXL345_BUF[7];
    512                      break;
    513                      
    514                      case 0x7122:  
    515                      SendBuf[SendLen++] =ADXL345_BUF[8];
    516                      SendBuf[SendLen++] = ADXL345_BUF[9];
    517                      break;
    518                      
    519                      case 0x7123:         
    520                      SendBuf[SendLen++] = ADXL345_BUF[10];
    521                      SendBuf[SendLen++] = ADXL345_BUF[11]; 
    522                      break;
    523                      
    524                    default:
    525                      break;
   \                     ??MBASC_Fun04_25: (+1)
   \      0x1A6   0xE00C             B        ??MBASC_Fun04_26
   \                     ??MBASC_Fun04_27: (+1)
   \      0x1A8   0x....             LDR      R2,??DataTable6_2
   \      0x1AA   0x7A93             LDRB     R3,[R2, #+10]
   \      0x1AC   0x7834             LDRB     R4,[R6, #+0]
   \      0x1AE   0x5503             STRB     R3,[R0, R4]
   \      0x1B0   0x7833             LDRB     R3,[R6, #+0]
   \      0x1B2   0x1C5B             ADDS     R3,R3,#+1
   \      0x1B4   0x7033             STRB     R3,[R6, #+0]
   \      0x1B6   0x7AD2             LDRB     R2,[R2, #+11]
   \      0x1B8   0x7833             LDRB     R3,[R6, #+0]
   \      0x1BA   0x54C2             STRB     R2,[R0, R3]
   \      0x1BC   0x7832             LDRB     R2,[R6, #+0]
   \      0x1BE   0x1C52             ADDS     R2,R2,#+1
   \      0x1C0   0x7032             STRB     R2,[R6, #+0]
   \                     ??MBASC_Fun04_26: (+1)
   \      0x1C2   0x1C6D             ADDS     R5,R5,#+1
   \      0x1C4   0x1C49             ADDS     R1,R1,#+1
   \                     ??MBASC_Fun04_24: (+1)
   \      0x1C6   0x000A             MOVS     R2,R1
   \      0x1C8   0xB2D2             UXTB     R2,R2
   \      0x1CA   0x466B             MOV      R3,SP
   \      0x1CC   0x881B             LDRH     R3,[R3, #+0]
   \      0x1CE   0xB292             UXTH     R2,R2
   \      0x1D0   0x429A             CMP      R2,R3
   \      0x1D2   0xD300             BCC      .+4
   \      0x1D4   0xE07F             B        ??MBASC_Fun04_13
   \      0x1D6   0x002A             MOVS     R2,R5
   \      0x1D8   0xB292             UXTH     R2,R2
   \      0x1DA   0x....             LDR      R3,??DataTable5_9  ;; 0x7114
   \      0x1DC   0x1AD2             SUBS     R2,R2,R3
   \      0x1DE   0xD00E             BEQ      ??MBASC_Fun04_28
   \      0x1E0   0x1E52             SUBS     R2,R2,#+1
   \      0x1E2   0xD01F             BEQ      ??MBASC_Fun04_29
   \      0x1E4   0x1E52             SUBS     R2,R2,#+1
   \      0x1E6   0xD02B             BEQ      ??MBASC_Fun04_30
   \      0x1E8   0x1E52             SUBS     R2,R2,#+1
   \      0x1EA   0xD037             BEQ      ??MBASC_Fun04_31
   \      0x1EC   0x3A09             SUBS     R2,R2,#+9
   \      0x1EE   0xD043             BEQ      ??MBASC_Fun04_32
   \      0x1F0   0x1E52             SUBS     R2,R2,#+1
   \      0x1F2   0xD054             BEQ      ??MBASC_Fun04_33
   \      0x1F4   0x1E52             SUBS     R2,R2,#+1
   \      0x1F6   0xD060             BEQ      ??MBASC_Fun04_34
   \      0x1F8   0x1E52             SUBS     R2,R2,#+1
   \      0x1FA   0xD0D5             BEQ      ??MBASC_Fun04_27
   \      0x1FC   0xE7D3             B        ??MBASC_Fun04_25
   \                     ??MBASC_Fun04_28: (+1)
   \      0x1FE   0x466A             MOV      R2,SP
   \      0x200   0x8812             LDRH     R2,[R2, #+0]
   \      0x202   0x7082             STRB     R2,[R0, #+2]
   \      0x204   0x....             LDR      R2,??DataTable6
   \      0x206   0x8813             LDRH     R3,[R2, #+0]
   \      0x208   0xB29B             UXTH     R3,R3
   \      0x20A   0x0A1B             LSRS     R3,R3,#+8
   \      0x20C   0x7834             LDRB     R4,[R6, #+0]
   \      0x20E   0x5503             STRB     R3,[R0, R4]
   \      0x210   0x7833             LDRB     R3,[R6, #+0]
   \      0x212   0x1C5B             ADDS     R3,R3,#+1
   \      0x214   0x7033             STRB     R3,[R6, #+0]
   \      0x216   0x8812             LDRH     R2,[R2, #+0]
   \      0x218   0x7833             LDRB     R3,[R6, #+0]
   \      0x21A   0x54C2             STRB     R2,[R0, R3]
   \      0x21C   0x7832             LDRB     R2,[R6, #+0]
   \      0x21E   0x1C52             ADDS     R2,R2,#+1
   \      0x220   0x7032             STRB     R2,[R6, #+0]
   \      0x222   0xE7CE             B        ??MBASC_Fun04_26
   \                     ??MBASC_Fun04_29: (+1)
   \      0x224   0x....             LDR      R2,??DataTable6_2
   \      0x226   0x7813             LDRB     R3,[R2, #+0]
   \      0x228   0x7834             LDRB     R4,[R6, #+0]
   \      0x22A   0x5503             STRB     R3,[R0, R4]
   \      0x22C   0x7833             LDRB     R3,[R6, #+0]
   \      0x22E   0x1C5B             ADDS     R3,R3,#+1
   \      0x230   0x7033             STRB     R3,[R6, #+0]
   \      0x232   0x7852             LDRB     R2,[R2, #+1]
   \      0x234   0x7833             LDRB     R3,[R6, #+0]
   \      0x236   0x54C2             STRB     R2,[R0, R3]
   \      0x238   0x7832             LDRB     R2,[R6, #+0]
   \      0x23A   0x1C52             ADDS     R2,R2,#+1
   \      0x23C   0x7032             STRB     R2,[R6, #+0]
   \      0x23E   0xE7C0             B        ??MBASC_Fun04_26
   \                     ??MBASC_Fun04_30: (+1)
   \      0x240   0x....             LDR      R2,??DataTable6_2
   \      0x242   0x7893             LDRB     R3,[R2, #+2]
   \      0x244   0x7834             LDRB     R4,[R6, #+0]
   \      0x246   0x5503             STRB     R3,[R0, R4]
   \      0x248   0x7833             LDRB     R3,[R6, #+0]
   \      0x24A   0x1C5B             ADDS     R3,R3,#+1
   \      0x24C   0x7033             STRB     R3,[R6, #+0]
   \      0x24E   0x78D2             LDRB     R2,[R2, #+3]
   \      0x250   0x7833             LDRB     R3,[R6, #+0]
   \      0x252   0x54C2             STRB     R2,[R0, R3]
   \      0x254   0x7832             LDRB     R2,[R6, #+0]
   \      0x256   0x1C52             ADDS     R2,R2,#+1
   \      0x258   0x7032             STRB     R2,[R6, #+0]
   \      0x25A   0xE7B2             B        ??MBASC_Fun04_26
   \                     ??MBASC_Fun04_31: (+1)
   \      0x25C   0x....             LDR      R2,??DataTable6_2
   \      0x25E   0x7913             LDRB     R3,[R2, #+4]
   \      0x260   0x7834             LDRB     R4,[R6, #+0]
   \      0x262   0x5503             STRB     R3,[R0, R4]
   \      0x264   0x7833             LDRB     R3,[R6, #+0]
   \      0x266   0x1C5B             ADDS     R3,R3,#+1
   \      0x268   0x7033             STRB     R3,[R6, #+0]
   \      0x26A   0x7952             LDRB     R2,[R2, #+5]
   \      0x26C   0x7833             LDRB     R3,[R6, #+0]
   \      0x26E   0x54C2             STRB     R2,[R0, R3]
   \      0x270   0x7832             LDRB     R2,[R6, #+0]
   \      0x272   0x1C52             ADDS     R2,R2,#+1
   \      0x274   0x7032             STRB     R2,[R6, #+0]
   \      0x276   0xE7A4             B        ??MBASC_Fun04_26
   \                     ??MBASC_Fun04_32: (+1)
   \      0x278   0x466A             MOV      R2,SP
   \      0x27A   0x8812             LDRH     R2,[R2, #+0]
   \      0x27C   0x7082             STRB     R2,[R0, #+2]
   \      0x27E   0x....             LDR      R2,??DataTable6
   \      0x280   0x8813             LDRH     R3,[R2, #+0]
   \      0x282   0xB29B             UXTH     R3,R3
   \      0x284   0x0A1B             LSRS     R3,R3,#+8
   \      0x286   0x7834             LDRB     R4,[R6, #+0]
   \      0x288   0x5503             STRB     R3,[R0, R4]
   \      0x28A   0x7833             LDRB     R3,[R6, #+0]
   \      0x28C   0x1C5B             ADDS     R3,R3,#+1
   \      0x28E   0x7033             STRB     R3,[R6, #+0]
   \      0x290   0x8812             LDRH     R2,[R2, #+0]
   \      0x292   0x7833             LDRB     R3,[R6, #+0]
   \      0x294   0x54C2             STRB     R2,[R0, R3]
   \      0x296   0x7832             LDRB     R2,[R6, #+0]
   \      0x298   0x1C52             ADDS     R2,R2,#+1
   \      0x29A   0x7032             STRB     R2,[R6, #+0]
   \      0x29C   0xE791             B        ??MBASC_Fun04_26
   \                     ??MBASC_Fun04_33: (+1)
   \      0x29E   0x....             LDR      R2,??DataTable6_2
   \      0x2A0   0x7993             LDRB     R3,[R2, #+6]
   \      0x2A2   0x7834             LDRB     R4,[R6, #+0]
   \      0x2A4   0x5503             STRB     R3,[R0, R4]
   \      0x2A6   0x7833             LDRB     R3,[R6, #+0]
   \      0x2A8   0x1C5B             ADDS     R3,R3,#+1
   \      0x2AA   0x7033             STRB     R3,[R6, #+0]
   \      0x2AC   0x79D2             LDRB     R2,[R2, #+7]
   \      0x2AE   0x7833             LDRB     R3,[R6, #+0]
   \      0x2B0   0x54C2             STRB     R2,[R0, R3]
   \      0x2B2   0x7832             LDRB     R2,[R6, #+0]
   \      0x2B4   0x1C52             ADDS     R2,R2,#+1
   \      0x2B6   0x7032             STRB     R2,[R6, #+0]
   \      0x2B8   0xE783             B        ??MBASC_Fun04_26
   \                     ??MBASC_Fun04_34: (+1)
   \      0x2BA   0x....             LDR      R2,??DataTable6_2
   \      0x2BC   0x7A13             LDRB     R3,[R2, #+8]
   \      0x2BE   0x7834             LDRB     R4,[R6, #+0]
   \      0x2C0   0x5503             STRB     R3,[R0, R4]
   \      0x2C2   0x7833             LDRB     R3,[R6, #+0]
   \      0x2C4   0x1C5B             ADDS     R3,R3,#+1
   \      0x2C6   0x7033             STRB     R3,[R6, #+0]
   \      0x2C8   0x7A52             LDRB     R2,[R2, #+9]
   \      0x2CA   0x7833             LDRB     R3,[R6, #+0]
   \      0x2CC   0x54C2             STRB     R2,[R0, R3]
   \      0x2CE   0x7832             LDRB     R2,[R6, #+0]
   \      0x2D0   0x1C52             ADDS     R2,R2,#+1
   \      0x2D2   0x7032             STRB     R2,[R6, #+0]
   \      0x2D4   0xE775             B        ??MBASC_Fun04_26
    526                    }
    527                  }
    528              
    529              
    530              }
    531              MBASC_SendMsg(SendBuf, SendLen);
   \                     ??MBASC_Fun04_13: (+1)
   \      0x2D6   0x7831             LDRB     R1,[R6, #+0]
   \      0x2D8   0x....'....        BL       MBASC_SendMsg
    532          }
   \                     ??MBASC_Fun04_8: (+1)
   \      0x2DC   0xBDF1             POP      {R0,R4-R7,PC}    ;; return
    533          
    534          //**************************************************************************************************
    535          // 名称         : MBASC_Fun05()
    536          // 创建日期     : 2016-09-05
    537          // 作者         : 庄明群
    538          // 功能         : 05功能码，读单个线圈，起开关使能作用
    539          // 输入参数     : 无
    540          // 输出参数     : 无
    541          // 返回结果     : 无
    542          // 注意和说明   : 指令规则：3A 34 35 30 35 35 30 35 33 46 46 30 30 31 34 0D 0A  修改flash写操作使能位为ENABLE
    543          // 修改内容     :
    544          //**************************************************************************************************

   \                                 In section .text, align 2, keep-with-next
    545          void MBASC_Fun05(void)
    546          {
   \                     MBASC_Fun05: (+1)
   \        0x0   0xB5F8             PUSH     {R3-R7,LR}
    547              u16 ReadAdr = 0;
   \        0x2   0x2500             MOVS     R5,#+0
   \        0x4   0x0028             MOVS     R0,R5
    548              if(UART1_RXBuff[2] - UartComm.SlaveAddr !=0) 
   \        0x6   0x....             LDR      R4,??DataTable6_3
   \        0x8   0x78A0             LDRB     R0,[R4, #+2]
   \        0xA   0x....             LDR      R1,??DataTable6_4
   \        0xC   0x7809             LDRB     R1,[R1, #+0]
   \        0xE   0x1A40             SUBS     R0,R0,R1
   \       0x10   0x2800             CMP      R0,#+0
   \       0x12   0xD006             BEQ      ??MBASC_Fun05_0
    549                  ReadAdr = (u16)UART1_RXBuff[2] * 256 + UART1_RXBuff[3];
   \       0x14   0x78A0             LDRB     R0,[R4, #+2]
   \       0x16   0x2180             MOVS     R1,#+128
   \       0x18   0x0049             LSLS     R1,R1,#+1        ;; #+256
   \       0x1A   0x4348             MULS     R0,R1,R0
   \       0x1C   0x78E1             LDRB     R1,[R4, #+3]
   \       0x1E   0x1846             ADDS     R6,R0,R1
   \       0x20   0xE003             B        ??MBASC_Fun05_1
    550              else
    551                  ReadAdr = 0x71 * 256 + UART1_RXBuff[3];
   \                     ??MBASC_Fun05_0: (+1)
   \       0x22   0x78E0             LDRB     R0,[R4, #+3]
   \       0x24   0x21E2             MOVS     R1,#+226
   \       0x26   0x01C9             LSLS     R1,R1,#+7        ;; #+28928
   \       0x28   0x1846             ADDS     R6,R0,R1
    552              
    553              SendLen = 0;
   \                     ??MBASC_Fun05_1: (+1)
   \       0x2A   0x0028             MOVS     R0,R5
   \       0x2C   0x....             LDR      R1,??DataTable6_5
   \       0x2E   0x7008             STRB     R0,[R1, #+0]
    554              SendBuf[SendLen++] = (MBASC_GetSlaveAddr(UART1_RXBuff)) ? UartComm.SlaveAddr : 0x00; 
   \       0x30   0x....             LDR      R0,??DataTable6_5
   \       0x32   0x7807             LDRB     R7,[R0, #+0]
   \       0x34   0x0038             MOVS     R0,R7
   \       0x36   0x1C40             ADDS     R0,R0,#+1
   \       0x38   0x....             LDR      R1,??DataTable6_5
   \       0x3A   0x7008             STRB     R0,[R1, #+0]
   \       0x3C   0x0020             MOVS     R0,R4
   \       0x3E   0x....'....        BL       MBASC_GetSlaveAddr
   \       0x42   0x2800             CMP      R0,#+0
   \       0x44   0xD002             BEQ      ??MBASC_Fun05_2
   \       0x46   0x....             LDR      R0,??DataTable6_4
   \       0x48   0x7801             LDRB     R1,[R0, #+0]
   \       0x4A   0xE000             B        ??MBASC_Fun05_3
   \                     ??MBASC_Fun05_2: (+1)
   \       0x4C   0x0029             MOVS     R1,R5
   \                     ??MBASC_Fun05_3: (+1)
   \       0x4E   0x....             LDR      R0,??DataTable6_6
   \       0x50   0xB2FF             UXTB     R7,R7
   \       0x52   0x55C1             STRB     R1,[R0, R7]
    555              SendBuf[SendLen++] = MB_FUNC_WRITE_SINGLE_COIL;
   \       0x54   0x....             LDR      R1,??DataTable6_5
   \       0x56   0x2205             MOVS     R2,#+5
   \       0x58   0x780B             LDRB     R3,[R1, #+0]
   \       0x5A   0x54C2             STRB     R2,[R0, R3]
   \       0x5C   0x7808             LDRB     R0,[R1, #+0]
   \       0x5E   0x1C40             ADDS     R0,R0,#+1
   \       0x60   0x7008             STRB     R0,[R1, #+0]
    556                                                                                      
    557              if ((ReadAdr < MBASC_SINGLE_COIL_ADDR_BGEIN) || (ReadAdr > MBASC_SINGLE_COIL_ADDR_END))
   \       0x62   0x0030             MOVS     R0,R6
   \       0x64   0xB280             UXTH     R0,R0
   \       0x66   0x....             LDR      R1,??DataTable6_7  ;; 0x7150
   \       0x68   0x1A40             SUBS     R0,R0,R1
   \       0x6A   0x2805             CMP      R0,#+5
   \       0x6C   0xD303             BCC      ??MBASC_Fun05_4
    558              {
    559                  MBASC_SendErr(MB_EX_ILLEGAL_DATA_ADDRESS);
   \       0x6E   0x2002             MOVS     R0,#+2
   \       0x70   0x....'....        BL       MBASC_SendErr
    560                  return;
   \       0x74   0xE05C             B        ??MBASC_Fun05_5
    561              }
    562          
    563              if ((ReadAdr != 0x7153) && (ProductPara.bFlashWEn == FLASH_WR_DISABLE))     //在写flash失能情况下，只能对0x5053进行操作，对其他寄存器不能操作     
   \                     ??MBASC_Fun05_4: (+1)
   \       0x76   0x0030             MOVS     R0,R6
   \       0x78   0xB280             UXTH     R0,R0
   \       0x7A   0x....             LDR      R1,??DataTable6_8  ;; 0x7153
   \       0x7C   0x4288             CMP      R0,R1
   \       0x7E   0xD007             BEQ      ??MBASC_Fun05_6
   \       0x80   0x....             LDR      R0,??DataTable6_9
   \       0x82   0x78C0             LDRB     R0,[R0, #+3]
   \       0x84   0x2800             CMP      R0,#+0
   \       0x86   0xD103             BNE      ??MBASC_Fun05_6
    564              {
    565                  MBASC_SendErr(MB_EX_SLAVE_DEVICE_FAILURE);
   \       0x88   0x2004             MOVS     R0,#+4
   \       0x8A   0x....'....        BL       MBASC_SendErr
    566                  return;
   \       0x8E   0xE04F             B        ??MBASC_Fun05_5
    567              }
    568          
    569              if (!(((UART1_RXBuff[4] == 0xFF) && (UART1_RXBuff[5] == 0x00))
    570                    || ((UART1_RXBuff[4] == 0x00) && (UART1_RXBuff[5] == 0x00))))
   \                     ??MBASC_Fun05_6: (+1)
   \       0x90   0x7920             LDRB     R0,[R4, #+4]
   \       0x92   0x28FF             CMP      R0,#+255
   \       0x94   0xD102             BNE      ??MBASC_Fun05_7
   \       0x96   0x7960             LDRB     R0,[R4, #+5]
   \       0x98   0x2800             CMP      R0,#+0
   \       0x9A   0xD009             BEQ      ??MBASC_Fun05_8
   \                     ??MBASC_Fun05_7: (+1)
   \       0x9C   0x7920             LDRB     R0,[R4, #+4]
   \       0x9E   0x2800             CMP      R0,#+0
   \       0xA0   0xD102             BNE      ??MBASC_Fun05_9
   \       0xA2   0x7960             LDRB     R0,[R4, #+5]
   \       0xA4   0x2800             CMP      R0,#+0
   \       0xA6   0xD003             BEQ      ??MBASC_Fun05_8
    571              {
    572                  MBASC_SendErr(MB_EX_ILLEGAL_DATA_VALUE);
   \                     ??MBASC_Fun05_9: (+1)
   \       0xA8   0x2003             MOVS     R0,#+3
   \       0xAA   0x....'....        BL       MBASC_SendErr
    573                  return;
   \       0xAE   0xE03F             B        ??MBASC_Fun05_5
    574              }
    575          
    576              switch (ReadAdr)
   \                     ??MBASC_Fun05_8: (+1)
   \       0xB0   0xB2B6             UXTH     R6,R6
   \       0xB2   0x....             LDR      R0,??DataTable6_7  ;; 0x7150
   \       0xB4   0x1A36             SUBS     R6,R6,R0
   \       0xB6   0xD008             BEQ      ??MBASC_Fun05_10
   \       0xB8   0x1E76             SUBS     R6,R6,#+1
   \       0xBA   0xD007             BEQ      ??MBASC_Fun05_11
   \       0xBC   0x1E76             SUBS     R6,R6,#+1
   \       0xBE   0xD018             BEQ      ??MBASC_Fun05_12
   \       0xC0   0x1E76             SUBS     R6,R6,#+1
   \       0xC2   0xD017             BEQ      ??MBASC_Fun05_13
   \       0xC4   0x1E76             SUBS     R6,R6,#+1
   \       0xC6   0xD022             BEQ      ??MBASC_Fun05_14
   \       0xC8   0xE02E             B        ??MBASC_Fun05_15
    577              {
    578              case 0x7150:                                                                //启动、停止采样实际运行的脉冲数，用于判断运行状态
    579                break;
   \                     ??MBASC_Fun05_10: (+1)
   \       0xCA   0xE02D             B        ??MBASC_Fun05_15
    580          
    581              case 0x7151:							        //恢复出厂值
    582                if ((UART1_RXBuff[4] == 0xFF) && (UART1_RXBuff[5] == 0x00))
   \                     ??MBASC_Fun05_11: (+1)
   \       0xCC   0x7920             LDRB     R0,[R4, #+4]
   \       0xCE   0x28FF             CMP      R0,#+255
   \       0xD0   0xD10E             BNE      ??MBASC_Fun05_16
   \       0xD2   0x7960             LDRB     R0,[R4, #+5]
   \       0xD4   0x2800             CMP      R0,#+0
   \       0xD6   0xD10B             BNE      ??MBASC_Fun05_16
    583                {
    584                  Cur_Param[0] = User_Default_Param[0] + 1;
   \       0xD8   0x....             LDR      R3,??DataTable6_10
   \       0xDA   0x....             LDR      R0,??DataTable6_11
   \       0xDC   0x7800             LDRB     R0,[R0, #+0]
   \       0xDE   0x1C40             ADDS     R0,R0,#+1
   \       0xE0   0x7018             STRB     R0,[R3, #+0]
    585                  I2C1_WNBytesMul3T(EEPROM_ADDRESS, RUN_ADDR_BASE, 1, Cur_Param);
   \       0xE2   0x2201             MOVS     R2,#+1
   \       0xE4   0x2100             MOVS     R1,#+0
   \       0xE6   0x20A0             MOVS     R0,#+160
   \       0xE8   0x....'....        BL       I2C1_WNBytesMul3T
    586                  Rd_Dev_Param();
   \       0xEC   0x....'....        BL       Rd_Dev_Param
    587                }
    588                break;
   \                     ??MBASC_Fun05_16: (+1)
   \       0xF0   0xE01A             B        ??MBASC_Fun05_15
    589          
    590              case 0x7152:                                                                //解冻、冻结。冻结则是接收命令，但是不返回命令
    591                break;
   \                     ??MBASC_Fun05_12: (+1)
   \       0xF2   0xE019             B        ??MBASC_Fun05_15
    592                  
    593              case 0x7153:                                                                //使能/关闭flash写操作
    594          
    595                if ((UART1_RXBuff[4] == 0xFF) && (UART1_RXBuff[5] == 0x00))
   \                     ??MBASC_Fun05_13: (+1)
   \       0xF4   0x7920             LDRB     R0,[R4, #+4]
   \       0xF6   0x28FF             CMP      R0,#+255
   \       0xF8   0xD106             BNE      ??MBASC_Fun05_17
   \       0xFA   0x7960             LDRB     R0,[R4, #+5]
   \       0xFC   0x2800             CMP      R0,#+0
   \       0xFE   0xD103             BNE      ??MBASC_Fun05_17
    596                {
    597                  ProductPara.bFlashWEn = FLASH_WR_ENABLE;
   \      0x100   0x2001             MOVS     R0,#+1
   \      0x102   0x....             LDR      R1,??DataTable6_9
   \      0x104   0x70C8             STRB     R0,[R1, #+3]
   \      0x106   0xE001             B        ??MBASC_Fun05_18
    598                }
    599                else
    600                {
    601                  ProductPara.bFlashWEn = FLASH_WR_DISABLE;
   \                     ??MBASC_Fun05_17: (+1)
   \      0x108   0x....             LDR      R0,??DataTable6_9
   \      0x10A   0x70C5             STRB     R5,[R0, #+3]
    602                }
    603                break;
   \                     ??MBASC_Fun05_18: (+1)
   \      0x10C   0xE00C             B        ??MBASC_Fun05_15
    604                
    605              case 0x7154:                                                                //清除数据
    606                if ((UART1_RXBuff[4] == 0xFF) && (UART1_RXBuff[5] == 0x00))
   \                     ??MBASC_Fun05_14: (+1)
   \      0x10E   0x7920             LDRB     R0,[R4, #+4]
   \      0x110   0x28FF             CMP      R0,#+255
   \      0x112   0xD109             BNE      ??MBASC_Fun05_19
   \      0x114   0x7960             LDRB     R0,[R4, #+5]
   \      0x116   0x2800             CMP      R0,#+0
   \      0x118   0xD106             BNE      ??MBASC_Fun05_19
    607                {
    608                  g_cyWorkState = 0x01;
   \      0x11A   0x2001             MOVS     R0,#+1
   \      0x11C   0x....             LDR      R1,??DataTable6_12
   \      0x11E   0x7008             STRB     R0,[R1, #+0]
    609                  RunVar.LoadADValue = 0;
   \      0x120   0x....             LDR      R0,??DataTable6_13
   \      0x122   0x2100             MOVS     R1,#+0
   \      0x124   0x6001             STR      R1,[R0, #+0]
    610                  RunVar.uiAI[0] = 0;
   \      0x126   0x8085             STRH     R5,[R0, #+4]
    611          //        Save_Param(0);
    612                }
    613                break; 
    614              }
    615              MBASC_SendMsg(UART1_RXBuff, 6);
   \                     ??MBASC_Fun05_19: (+1)
   \                     ??MBASC_Fun05_15: (+1)
   \      0x128   0x2106             MOVS     R1,#+6
   \      0x12A   0x0020             MOVS     R0,R4
   \      0x12C   0x....'....        BL       MBASC_SendMsg
    616          }
   \                     ??MBASC_Fun05_5: (+1)
   \      0x130   0xBDF1             POP      {R0,R4-R7,PC}    ;; return
    617          
    618          
    619          //**************************************************************************************************
    620          // 名称         : MBASC_Fun10()
    621          // 创建日期     : 2016-09-05
    622          // 作者         : 庄明群
    623          // 功能         : 10功能码，写多个寄存器操作，用于修改参数
    624          // 输入参数     : 无
    625          // 输出参数     : 无
    626          // 返回结果     : 无
    627          // 注意和说明   : 
    628          // 修改内容     : 1.先接收自动上传时间编码，再把编码转换成时间，解决发指令修改编码不重启后自动上传时
    629          //                间不是想要的时间问题      2016.09.10
    630          //                2.增加串口初始化（修改波特率后可以不重启单片机）
    631          //**************************************************************************************************

   \                                 In section .text, align 4, keep-with-next
    632          void MBASC_Fun10()
    633          {
   \                     MBASC_Fun10: (+1)
   \        0x0   0xB5F0             PUSH     {R4-R7,LR}
   \        0x2   0xB099             SUB      SP,SP,#+100
    634            
    635            // 71 10 71 id  Register_Num  BYTE_Num  data...
    636              u16 ReadAdr = 0;
   \        0x4   0x2000             MOVS     R0,#+0
    637              u16 Register_Num = 0;
   \        0x6   0x2000             MOVS     R0,#+0
    638              u32 index = 0;
   \        0x8   0x2400             MOVS     R4,#+0
    639              u8 i, j, u8Temp[4];
    640              u8 uBuf[80];
    641              
    642              u16 uTemp;
    643              
    644              u16 s_TotalPacks, s_CurrentPack;
    645            
    646              BitAction CommChangeFlag = Bit_RESET;
   \        0xA   0x2700             MOVS     R7,#+0
    647              
    648              ProductPara.bFlashWEn = FLASH_WR_ENABLE;
   \        0xC   0x48A7             LDR      R0,??MBASC_Fun10_0
   \        0xE   0x9004             STR      R0,[SP, #+16]
   \       0x10   0x2001             MOVS     R0,#+1
   \       0x12   0x9904             LDR      R1,[SP, #+16]
   \       0x14   0x7008             STRB     R0,[R1, #+0]
    649              
    650              Register_Num = (u16)(UART1_RXBuff[4] * 256 + UART1_RXBuff[5]);
   \       0x16   0x2680             MOVS     R6,#+128
   \       0x18   0x0076             LSLS     R6,R6,#+1        ;; #+256
   \       0x1A   0x4DA5             LDR      R5,??MBASC_Fun10_0+0x4
   \       0x1C   0x7928             LDRB     R0,[R5, #+4]
   \       0x1E   0x4370             MULS     R0,R6,R0
   \       0x20   0x7969             LDRB     R1,[R5, #+5]
   \       0x22   0x1840             ADDS     R0,R0,R1
   \       0x24   0x4669             MOV      R1,SP
   \       0x26   0x8108             STRH     R0,[R1, #+8]
    651              if(UART1_RXBuff[2] - UartComm.SlaveAddr != 0) 
   \       0x28   0x78A8             LDRB     R0,[R5, #+2]
   \       0x2A   0x49A2             LDR      R1,??MBASC_Fun10_0+0x8
   \       0x2C   0x7809             LDRB     R1,[R1, #+0]
   \       0x2E   0x1A40             SUBS     R0,R0,R1
   \       0x30   0x2800             CMP      R0,#+0
   \       0x32   0xD006             BEQ      ??MBASC_Fun10_6
    652              {
    653                  ReadAdr = (u16)(UART1_RXBuff[2] * 256 + UART1_RXBuff[3]);
   \       0x34   0x78A8             LDRB     R0,[R5, #+2]
   \       0x36   0x4370             MULS     R0,R6,R0
   \       0x38   0x78E9             LDRB     R1,[R5, #+3]
   \       0x3A   0x1840             ADDS     R0,R0,R1
   \       0x3C   0x4669             MOV      R1,SP
   \       0x3E   0x8008             STRH     R0,[R1, #+0]
   \       0x40   0xE005             B        ??MBASC_Fun10_7
    654              }
    655              else
    656              {
    657                  ReadAdr = 0x71 * 256 + UART1_RXBuff[3];
   \                     ??MBASC_Fun10_6: (+1)
   \       0x42   0x78E8             LDRB     R0,[R5, #+3]
   \       0x44   0x21E2             MOVS     R1,#+226
   \       0x46   0x01C9             LSLS     R1,R1,#+7        ;; #+28928
   \       0x48   0x1840             ADDS     R0,R0,R1
   \       0x4A   0x4669             MOV      R1,SP
   \       0x4C   0x8008             STRH     R0,[R1, #+0]
    658              }
    659              
    660              SendLen = 0;
   \                     ??MBASC_Fun10_7: (+1)
   \       0x4E   0x2000             MOVS     R0,#+0
   \       0x50   0x4999             LDR      R1,??MBASC_Fun10_0+0xC
   \       0x52   0x7008             STRB     R0,[R1, #+0]
    661              SendBuf[SendLen++] = (MBASC_GetSlaveAddr(UART1_RXBuff)) ? UartComm.SlaveAddr : 0x00;
   \       0x54   0x4898             LDR      R0,??MBASC_Fun10_0+0xC
   \       0x56   0x7800             LDRB     R0,[R0, #+0]
   \       0x58   0x4669             MOV      R1,SP
   \       0x5A   0x7088             STRB     R0,[R1, #+2]
   \       0x5C   0x4668             MOV      R0,SP
   \       0x5E   0x7880             LDRB     R0,[R0, #+2]
   \       0x60   0x1C40             ADDS     R0,R0,#+1
   \       0x62   0x4995             LDR      R1,??MBASC_Fun10_0+0xC
   \       0x64   0x7008             STRB     R0,[R1, #+0]
   \       0x66   0x0028             MOVS     R0,R5
   \       0x68   0x....'....        BL       MBASC_GetSlaveAddr
   \       0x6C   0x2800             CMP      R0,#+0
   \       0x6E   0xD002             BEQ      ??MBASC_Fun10_8
   \       0x70   0x4890             LDR      R0,??MBASC_Fun10_0+0x8
   \       0x72   0x7801             LDRB     R1,[R0, #+0]
   \       0x74   0xE000             B        ??MBASC_Fun10_9
   \                     ??MBASC_Fun10_8: (+1)
   \       0x76   0x2100             MOVS     R1,#+0
   \                     ??MBASC_Fun10_9: (+1)
   \       0x78   0x4890             LDR      R0,??MBASC_Fun10_0+0x10
   \       0x7A   0x466A             MOV      R2,SP
   \       0x7C   0x7892             LDRB     R2,[R2, #+2]
   \       0x7E   0x5481             STRB     R1,[R0, R2]
    662              SendBuf[SendLen++] = MB_FUNC_WRITE_MULTIPLE_REGISTERS;
   \       0x80   0x498D             LDR      R1,??MBASC_Fun10_0+0xC
   \       0x82   0x2210             MOVS     R2,#+16
   \       0x84   0x780B             LDRB     R3,[R1, #+0]
   \       0x86   0x54C2             STRB     R2,[R0, R3]
   \       0x88   0x780A             LDRB     R2,[R1, #+0]
   \       0x8A   0x1C52             ADDS     R2,R2,#+1
   \       0x8C   0x700A             STRB     R2,[R1, #+0]
    663              SendBuf[SendLen++] = Register_Num * 2;                
   \       0x8E   0x466A             MOV      R2,SP
   \       0x90   0x8912             LDRH     R2,[R2, #+8]
   \       0x92   0x2302             MOVS     R3,#+2
   \       0x94   0x435A             MULS     R2,R3,R2
   \       0x96   0x780B             LDRB     R3,[R1, #+0]
   \       0x98   0x54C2             STRB     R2,[R0, R3]
   \       0x9A   0x7808             LDRB     R0,[R1, #+0]
   \       0x9C   0x1C40             ADDS     R0,R0,#+1
   \       0x9E   0x7008             STRB     R0,[R1, #+0]
    664                                                                 //如果读取范围溢出
    665              if (!(((ReadAdr >= MBASC_MUL_REG_REGION1_BGEIN) && (ReadAdr <= MBASC_MUL_REG_REGION1_END)
    666                      && (ReadAdr + Register_Num <= (MBASC_MUL_REG_REGION1_END + 1)))
    667                      || ((ReadAdr == MBASC_HOLDING_REG_REGION2_BGEIN)
    668                      || ((ReadAdr >= MBASC_MUL_REG_REGION3_BGEIN) && (ReadAdr <= MBASC_MUL_REG_REGION3_END)
    669                      && (ReadAdr + Register_Num <= (MBASC_MUL_REG_REGION3_END + 1)))
    670                      || (ReadAdr == MBASC_HOLDING_REG_REGION4_BGEIN))
    671                      && (0 != Register_Num)) || (Register_Num * 2 != UART1_RXBuff[6])) //修改modbus_asc.c  10功能码 非法数据地址（MB_EX_ILLEGAL_DATA_ADDRESS）的判断条件 20190628 
   \       0xA0   0x4668             MOV      R0,SP
   \       0xA2   0x8800             LDRH     R0,[R0, #+0]
   \       0xA4   0x4986             LDR      R1,??MBASC_Fun10_0+0x14  ;; 0x7130
   \       0xA6   0x1A40             SUBS     R0,R0,R1
   \       0xA8   0x2820             CMP      R0,#+32
   \       0xAA   0xD207             BCS      ??MBASC_Fun10_10
   \       0xAC   0x4668             MOV      R0,SP
   \       0xAE   0x8800             LDRH     R0,[R0, #+0]
   \       0xB0   0x4669             MOV      R1,SP
   \       0xB2   0x8909             LDRH     R1,[R1, #+8]
   \       0xB4   0x1840             ADDS     R0,R0,R1
   \       0xB6   0x4983             LDR      R1,??MBASC_Fun10_0+0x18  ;; 0x7151
   \       0xB8   0x4288             CMP      R0,R1
   \       0xBA   0xDB1C             BLT      ??MBASC_Fun10_11
   \                     ??MBASC_Fun10_10: (+1)
   \       0xBC   0x4668             MOV      R0,SP
   \       0xBE   0x8800             LDRH     R0,[R0, #+0]
   \       0xC0   0x4981             LDR      R1,??MBASC_Fun10_0+0x1C  ;; 0x7160
   \       0xC2   0x4288             CMP      R0,R1
   \       0xC4   0xD013             BEQ      ??MBASC_Fun10_12
   \       0xC6   0x4668             MOV      R0,SP
   \       0xC8   0x8800             LDRH     R0,[R0, #+0]
   \       0xCA   0x4980             LDR      R1,??MBASC_Fun10_0+0x20  ;; 0x7170
   \       0xCC   0x1A40             SUBS     R0,R0,R1
   \       0xCE   0x2804             CMP      R0,#+4
   \       0xD0   0xD207             BCS      ??MBASC_Fun10_13
   \       0xD2   0x4668             MOV      R0,SP
   \       0xD4   0x8800             LDRH     R0,[R0, #+0]
   \       0xD6   0x4669             MOV      R1,SP
   \       0xD8   0x8909             LDRH     R1,[R1, #+8]
   \       0xDA   0x1840             ADDS     R0,R0,R1
   \       0xDC   0x497C             LDR      R1,??MBASC_Fun10_0+0x24  ;; 0x7175
   \       0xDE   0x4288             CMP      R0,R1
   \       0xE0   0xDB05             BLT      ??MBASC_Fun10_12
   \                     ??MBASC_Fun10_13: (+1)
   \       0xE2   0x4668             MOV      R0,SP
   \       0xE4   0x8800             LDRH     R0,[R0, #+0]
   \       0xE6   0x21E3             MOVS     R1,#+227
   \       0xE8   0x01C9             LSLS     R1,R1,#+7        ;; #+29056
   \       0xEA   0x4288             CMP      R0,R1
   \       0xEC   0xD10A             BNE      ??MBASC_Fun10_14
   \                     ??MBASC_Fun10_12: (+1)
   \       0xEE   0x4668             MOV      R0,SP
   \       0xF0   0x8900             LDRH     R0,[R0, #+8]
   \       0xF2   0x2800             CMP      R0,#+0
   \       0xF4   0xD006             BEQ      ??MBASC_Fun10_14
   \                     ??MBASC_Fun10_11: (+1)
   \       0xF6   0x4668             MOV      R0,SP
   \       0xF8   0x8900             LDRH     R0,[R0, #+8]
   \       0xFA   0x2102             MOVS     R1,#+2
   \       0xFC   0x4341             MULS     R1,R0,R1
   \       0xFE   0x79A8             LDRB     R0,[R5, #+6]
   \      0x100   0x4281             CMP      R1,R0
   \      0x102   0xD004             BEQ      ??MBASC_Fun10_15
    672              { 
    673                MBASC_SendErr(MB_EX_ILLEGAL_DATA_ADDRESS);
   \                     ??MBASC_Fun10_14: (+1)
   \      0x104   0x2002             MOVS     R0,#+2
   \      0x106   0x....'....        BL       MBASC_SendErr
    674                return;
   \      0x10A   0xF000 0xFBFB      BL       ??MBASC_Fun10_16
    675              }
    676          
    677              for (u8 k = 0; k < Register_Num; ReadAdr++, k++)
   \                     ??MBASC_Fun10_15: (+1)
   \      0x10E   0x2000             MOVS     R0,#+0
   \      0x110   0x4669             MOV      R1,SP
   \      0x112   0x7088             STRB     R0,[R1, #+2]
   \      0x114   0xE00A             B        ??MBASC_Fun10_17
    678              {
    679                  switch (ReadAdr)
    680                  {
    681                  case 0x7130:						                //设备地址
    682                      UartComm.SlaveAddr = UART1_RXBuff[7+index] * 256 + UART1_RXBuff[8+index];
    683                      I2C1_WNBytesMul3T(EEPROM_ADDRESS, SLAVE_ADDR, 1, &UartComm.SlaveAddr);
    684                      index += 2;
    685                      break;
    686          
    687                  case 0x7131:                                                            //波特率
    688                      UartComm.BaudRate = UART1_RXBuff[7+index] * 256 + UART1_RXBuff[8+index];
    689                      if(UartComm.BaudRate <1)
    690                          UartComm.BaudRate = 1;
    691                      if(UartComm.BaudRate > 7)
    692                          UartComm.BaudRate = 7;
    693                        
    694                      I2C1_WNBytesMul3T(EEPROM_ADDRESS, BAUDRATE, 1, &UartComm.BaudRate);
    695                      CommChangeFlag = Bit_SET;
    696                      index += 2;                                               
    697                      break;
    698          
    699                  case 0x7132:						                //奇偶校验
    700                      UartComm.Parity = UART1_RXBuff[7+index] * 256 + UART1_RXBuff[8+index];
    701                      if((UartComm.Parity <1) || (UartComm.BaudRate >3))
    702                          UartComm.Parity = 3;
    703                      I2C1_WNBytesMul3T(EEPROM_ADDRESS, PARITY, 1, &UartComm.Parity);
    704                      CommChangeFlag = Bit_SET;
    705                      index += 2;
    706                      break;
    707          
    708                  case 0x7133:                                                            //保留
    709                      index += 2;
    710                      break;
    711          
    712                  case 0x7134:                                                            //补偿使能
    713                      ProductPara.OffsetEn = UART1_RXBuff[7+index] * 256 + UART1_RXBuff[8+index];
    714                      if((ProductPara.OffsetEn != 1) && (ProductPara.OffsetEn != 2))
    715                      {
    716                          ProductPara.OffsetEn = 1;
    717                      }
    718                      I2C1_WNBytesMul3T(EEPROM_ADDRESS, OFFSET_ENABLE, 1, &ProductPara.OffsetEn);
    719                      index += 2;
    720                      break;
    721          
    722                  case 0x7135:						                //滤波系数
    723                      ProductPara.cyFilterLevel = UART1_RXBuff[7+index] * 256 + UART1_RXBuff[8+index];
    724                      if((ProductPara.cyFilterLevel == 0) || (ProductPara.cyFilterLevel > 3))
    725                      {
    726                          ProductPara.cyFilterLevel = 2;
    727                      }
    728                      I2C1_WNBytesMul3T(EEPROM_ADDRESS, FILTER_LEVEL, 1, &ProductPara.cyFilterLevel);
    729                      index += 2;
    730                      break;
    731          
    732                  case 0x7136:                                                            //增加修改时间编码就可以实现时间的切换，不需重启
    733                      ProductPara.cyAutoUpLoadTime = UART1_RXBuff[7+index] * 256 + UART1_RXBuff[8+index];
    734                      if((ProductPara.cyAutoUpLoadTime < 1) || (ProductPara.cyAutoUpLoadTime >4))
    735                      {
    736                          ProductPara.cyAutoUpLoadTime = 1;
    737                      }
    738                      I2C1_WNBytesMul3T(EEPROM_ADDRESS, AUTO_UPLOAD_TIME, 1, &ProductPara.cyAutoUpLoadTime);
    739                      index += 2;
    740                      break;
    741          
    742                  case 0x7137:                                                            //输出修正系数K
    743                      UserParam.UserFlowK = (UART1_RXBuff[7+index] * 256 + UART1_RXBuff[8+index]) / 100.0;  //修正系数K，输入值为1~200
    744                      if((UserParam.UserFlowK < 0.01f) || (UserParam.UserFlowK > 2.0f))
    745                      {
    746                          UserParam.UserFlowK = 1.0f;
    747                      }
    748                      floatToHexArray(UserParam.UserFlowK, u8Temp, 4);
    749                      I2C1_WNBytesMul3T(EEPROM_ADDRESS, USER_FLOW_K, 4, u8Temp);
    750                      index += 2;
    751                      break;
    752          
    753                  case 0x7138:                                                            //输出修正系数B
    754                      UserParam.UserFlowB = (UART1_RXBuff[7+index] * 256 + UART1_RXBuff[8+index]) - 100.0;
    755                      if((UserParam.UserFlowB < -100.0f) || (UserParam.UserFlowB > 100.0f))
    756                          UserParam.UserFlowB = 100.0f;
    757                      floatToHexArray(UserParam.UserFlowB, u8Temp, 4);
    758                      I2C1_WNBytesMul3T(EEPROM_ADDRESS, USER_FLOW_B, 4, u8Temp);
    759                      index += 2;
    760                      break;
    761                      
    762                  case 0x7139:	//保留						                
    763                      index += 2;
    764                      break;
    765          
    766                  case 0x713A:	//保留						                
    767                      index += 2;
    768                      break;            
    769          
    770                  case 0x713B:	//保留						                
    771                      index += 2;
    772                      break; 
    773          
    774                  case 0x713C:	//保留						                
    775                      index += 2;
    776                      break; 
    777                      
    778                  case 0x713D:                                                             //重量单位
    779                       uTemp = (u8)(UART1_RXBuff[7+index] * 256 + UART1_RXBuff[8+index]);
    780                       if(uTemp != 0xFFFF)
    781                       {
    782                          RunVar.Weight_Unit = uTemp;
    783                          I2C1_WNBytesMul3T(EEPROM_ADDRESS, WEIGHT_UNIT, 1, &RunVar.Weight_Unit);
    784                       }
    785                      index += 2;
    786                      break; 
    787                      
    788                  case 0x713E:	//保留					                
    789                      index += 2;
    790                      break; 
    791                      
    792                  case 0x713F:						                //整车重量/载荷重量
    793                      uTemp = (u16)(UART1_RXBuff[7+index] * 256 + UART1_RXBuff[8+index]);
    794                      if(uTemp != 0xFFFF)
    795                      {
    796                          RunVar.VehicleWeight = uTemp;
    797                          UshortToArray(RunVar.VehicleWeight, u8Temp);
    798                          I2C1_WNBytesMul3T(EEPROM_ADDRESS, VEHICLE_WEIGHT, 2, u8Temp);
    799                      }
    800                      index += 2;
    801                      break;
    802          
    803                  case 0x7140:						                //超载阀值
    804                      uTemp = (u16)(UART1_RXBuff[7+index] * 256 + UART1_RXBuff[8+index]);
    805                      if(uTemp != 0xFFFF)
    806                      {
    807                          RunVar.OverloadLimit = uTemp;
    808                          UshortToArray(RunVar.OverloadLimit, u8Temp);
    809                          I2C1_WNBytesMul3T(EEPROM_ADDRESS, OVERLOAD_LIMIT, 2, u8Temp);
    810                      }
    811                      index += 2;
    812                      break; 
    813          
    814                  case 0x7141:						                //超载阀值偏差
    815                      uTemp = (u16)(UART1_RXBuff[7+index] * 256 + UART1_RXBuff[8+index]);
    816                      if(uTemp != 0xFFFF)
    817                      {
    818                          RunVar.OverloadLimitDevation = uTemp;
    819                          UshortToArray(RunVar.OverloadLimitDevation, u8Temp);
    820                          I2C1_WNBytesMul3T(EEPROM_ADDRESS, OVERLOAD_LIMIT_DEVIATION, 2, u8Temp);  
    821                      }
    822                      index += 2;
    823                      break;
    824          
    825                  case 0x7142:						                //载重测量方案
    826                      uTemp = (u16)(UART1_RXBuff[7+index] * 256 + UART1_RXBuff[8+index]);
    827                      if(uTemp != 0xFFFF)
    828                      {
    829                          RunVar.LoadMeasureScheme = uTemp;
    830                          if((RunVar.LoadMeasureScheme != 1) && (RunVar.LoadMeasureScheme != 2))
    831                          {
    832                              RunVar.LoadMeasureScheme = 2;
    833                          }
    834                          UshortToArray(RunVar.LoadMeasureScheme, u8Temp);
    835                          I2C1_WNBytesMul3T(EEPROM_ADDRESS, LOAD_MEASURE_SCHEME, 2, u8Temp); 
    836                      }
    837                      index += 2;
    838                      break;
    839          
    840                  case 0x7143:						                //重载阀值
    841                      uTemp = (u16)(UART1_RXBuff[7+index] * 256 + UART1_RXBuff[8+index]);
    842                      if(uTemp != 0xFFFF)
    843                      {
    844                          RunVar.LoadLimit = uTemp;
    845                          UshortToArray(RunVar.LoadLimit, u8Temp);
    846                          I2C1_WNBytesMul3T(EEPROM_ADDRESS, LOAD_LIMIT, 2, u8Temp);  
    847                      }
    848                      index += 2;
    849                      break;
    850          
    851                  case 0x7144:						                //重载阀值偏差
    852                      uTemp = (u16)(UART1_RXBuff[7+index] * 256 + UART1_RXBuff[8+index]);
    853                      if(uTemp != 0xFFFF)
    854                      {
    855                          RunVar.LoadLimitDevation = uTemp;
    856                          UshortToArray(RunVar.LoadLimitDevation, u8Temp);
    857                          I2C1_WNBytesMul3T(EEPROM_ADDRESS, LOAD_LIMIT_DEVIATION, 2, u8Temp); 
    858                      }
    859                      index += 2;
    860                      break;
    861          
    862                  case 0x7145:						                //空载阀值
    863                      uTemp = (u16)(UART1_RXBuff[7+index] * 256 + UART1_RXBuff[8+index]);
    864                      if(uTemp != 0xFFFF)
    865                      {
    866                          RunVar.EmptyLimit = uTemp;
    867                          UshortToArray(RunVar.EmptyLimit, u8Temp);
    868                          I2C1_WNBytesMul3T(EEPROM_ADDRESS, EMPTYLOAD_LIMIT, 2, u8Temp);
    869                      }            
    870                      index += 2;
    871                      break;
    872          
    873                  case 0x7146:						                //空载阀值偏差
    874                      uTemp = (u16)(UART1_RXBuff[7+index] * 256 + UART1_RXBuff[8+index]);
    875                      if(uTemp != 0xFFFF)
    876                      {
    877                          RunVar.EmptyLimitDevation = uTemp;
    878                          UshortToArray(RunVar.EmptyLimitDevation, u8Temp);
    879                          I2C1_WNBytesMul3T(EEPROM_ADDRESS, EMPTYLOAD_LIMIT_DEVIATION, 2, u8Temp);
    880                      }
    881                      index += 2;
    882                      break;
    883          
    884                  case 0x7147://轻载阈值
    885                      uTemp = (u16)(UART1_RXBuff[7+index] * 256 + UART1_RXBuff[8+index]);
    886                      if(uTemp != 0xFFFF)
    887                      {
    888                          RunVar.LightLimit = uTemp;
    889                          UshortToArray(RunVar.LightLimit, u8Temp);
    890                          I2C1_WNBytesMul3T(EEPROM_ADDRESS, LIGHTLOAD_LIMIT, 2, u8Temp); 
    891                      }
    892                      index += 2;
    893                      break;
    894          
    895                  case 0x7148:	//轻载阈值偏差				                
    896                      uTemp = (u16)(UART1_RXBuff[7+index] * 256 + UART1_RXBuff[8+index]);
    897                      if(uTemp != 0xFFFF)
    898                      {
    899                          RunVar.LightLimitDevation = uTemp;
    900                          UshortToArray(RunVar.LightLimitDevation, u8Temp);
    901                          I2C1_WNBytesMul3T(EEPROM_ADDRESS, LIGHTLOAD_LIMIT_DEVIATION, 2, u8Temp);
    902                      }
    903                      index += 2;            
    904                      break;
    905          
    906                  case 0x7149:						                
    907                      index += 2;
    908                      break;
    909          
    910                  case 0x714A:                                                             
    911                      index += 2;
    912                      break;                                                                                      
    913                      
    914                   case 0x714B:                                                             
    915                      index += 2;
    916                      break;           
    917                      
    918                  case 0x714C:                                                             
    919                      index += 2;
    920                      break;
    921                      
    922                  case 0x714D:                                                             
    923                      index += 2;
    924                      break;
    925          
    926                  case 0x714E:                                                             
    927                      index += 2;
    928                      break;
    929                      
    930                  case 0x714F:                                                             
    931                      index += 2;
    932                      break;
    933                      
    934                  case 0x7160:                                                            //输出模式 0-RTU，1-ASCII
    935                      ProductPara.cyMbtWorkType = UART1_RXBuff[7+index] * 256 + UART1_RXBuff[8+index];
    936                      if((ProductPara.cyMbtWorkType != 0) && (ProductPara.cyMbtWorkType != 1))
    937                          ProductPara.cyMbtWorkType = 1;
    938                      I2C1_WNBytesMul3T(EEPROM_ADDRESS, MBT_WORK_TYPE, 1, &ProductPara.cyMbtWorkType);
    939                      index += 2;				        
    940                      break;
    941          
    942                  case 0x7170:						                //车速度
    943                      Speed = UART1_RXBuff[7+index] * 256 + UART1_RXBuff[8+index];
    944                      myOutData = Runing(g_wRADValue);                                    //发送一次速度检测一次数据
    945                      index += 2;
    946                      break;
    947                      
    948                  case 0x7171:
    949                      Acc_Flag = UART1_RXBuff[7+index] * 256 + UART1_RXBuff[8+index];
    950                      if((Acc_Flag == 1) && (Acc_Flag_Cnt++ >= 4))
    951                      {
    952                          Acc_Flag_Cnt = 0;
    953                          RunVar.AdcMaxCnt = 20;
    954                      }
    955                      else
    956                      {
    957                          RunVar.AdcMaxCnt = ProductPara.cyFilterLevel * 90;
    958                      }
    959                      break;
    960                      
    961                  case 0x7172:
    962                      break;
    963          
    964                  case 0x7173:
    965                      break;             
    966          
    967                  case 0x7180: /*不超过5组，每组10个数据，每个数据4个字节*/                
    968                      s_TotalPacks = ArrayToUshort(UART1_RXBuff + 7);
    969                      s_CurrentPack = ArrayToUshort(UART1_RXBuff + 9);
    970                      if((s_TotalPacks > 5) || (s_CurrentPack > 4) || (s_CurrentPack >= s_TotalPacks) 
    971                         || (Register_Num < 6) || (Register_Num > 42))
    972                      {
    973                          MBASC_SendErr(MB_EX_ILLEGAL_DATA_VALUE);
    974                          return;
    975                      }          
    976                      
    977                      for(i = 0; i < 10; i++)
    978                      {
    979                          if((HexToUlong(UART1_RXBuff + 8 * i + 11) != 0xFFFFFFFF)
    980                             && (HexToUlong(UART1_RXBuff + 8 * i + 15) != 0xFFFFFFFF))    //重量数据不为0xFFFFFFFF才写入数组
    981                          {
    982                              AD_Buff[s_CurrentPack][i] = HexToUlong(UART1_RXBuff + 8 * i + 11);
    983                              Weight_Buff[s_CurrentPack][i] = HexToUlong(UART1_RXBuff + 8 * i + 15);
    984                          }
    985                          else
    986                          {
    987                              for(j = i; j < 10; j++)
    988                              {
    989                                  AD_Buff[s_CurrentPack][j] = 0xFFFFFFFF;
    990                                  Weight_Buff[s_CurrentPack][j] = 0xFFFFFFFF;
    991                              }
    992                              break;
    993                          }
    994                      }
    995                      if(s_CurrentPack == 0)                                              //第0包时写入总包数
    996                      {
    997                          UshortToArray(s_TotalPacks, u8Temp);
    998                          I2C1_WriteNBytes(EEPROM_ADDRESS, AD_WEIGHT_PACKS, 2, u8Temp);
    999                      }
   1000                      memmove(uBuf, (u8*)(&UART1_RXBuff[11]), i * 8);                     //前面写入接收到的数据
   1001                      if(i < 10)
   1002                      {
   1003                          memset(uBuf + i * 8, 0xFF, (10 - i) * 8);                       //后面写入FF
   1004                      }
   1005                      I2C1_WriteNBytes(EEPROM_ADDRESS, AD_WEIGHT_ADDR(s_CurrentPack), 80, uBuf); //写入对照表
   1006                      MBASC_SendMsg(UART1_RXBuff, 11);                                    //应答前11个字节 
   1007                      return;
   1008          
   1009                  default:
   1010                      break;
   \                     ??MBASC_Fun10_18: (+1)
   \      0x116   0xE7FF             B        ??MBASC_Fun10_19
   \                     ??MBASC_Fun10_20: (+1)
   \                     ??MBASC_Fun10_19: (+1)
   \      0x118   0x4668             MOV      R0,SP
   \      0x11A   0x8800             LDRH     R0,[R0, #+0]
   \      0x11C   0x1C40             ADDS     R0,R0,#+1
   \      0x11E   0x4669             MOV      R1,SP
   \      0x120   0x8008             STRH     R0,[R1, #+0]
   \      0x122   0x4668             MOV      R0,SP
   \      0x124   0x7880             LDRB     R0,[R0, #+2]
   \      0x126   0x1C40             ADDS     R0,R0,#+1
   \      0x128   0x4669             MOV      R1,SP
   \      0x12A   0x7088             STRB     R0,[R1, #+2]
   \                     ??MBASC_Fun10_17: (+1)
   \      0x12C   0x4668             MOV      R0,SP
   \      0x12E   0x7880             LDRB     R0,[R0, #+2]
   \      0x130   0x4669             MOV      R1,SP
   \      0x132   0x8909             LDRH     R1,[R1, #+8]
   \      0x134   0xB280             UXTH     R0,R0
   \      0x136   0x4288             CMP      R0,R1
   \      0x138   0xD300             BCC      .+4
   \      0x13A   0xE3D1             B        ??MBASC_Fun10_21
   \      0x13C   0x4668             MOV      R0,SP
   \      0x13E   0x8800             LDRH     R0,[R0, #+0]
   \      0x140   0x495F             LDR      R1,??MBASC_Fun10_0+0x14  ;; 0x7130
   \      0x142   0x1A40             SUBS     R0,R0,R1
   \      0x144   0xD06E             BEQ      ??MBASC_Fun10_22
   \      0x146   0x1E40             SUBS     R0,R0,#+1
   \      0x148   0xD07B             BEQ      ??MBASC_Fun10_23
   \      0x14A   0x1E40             SUBS     R0,R0,#+1
   \      0x14C   0xD100             BNE      .+4
   \      0x14E   0xE093             B        ??MBASC_Fun10_24
   \      0x150   0x1E40             SUBS     R0,R0,#+1
   \      0x152   0xD100             BNE      .+4
   \      0x154   0xE0BE             B        ??MBASC_Fun10_25
   \      0x156   0x1E40             SUBS     R0,R0,#+1
   \      0x158   0xD100             BNE      .+4
   \      0x15A   0xE0BD             B        ??MBASC_Fun10_26
   \      0x15C   0x1E40             SUBS     R0,R0,#+1
   \      0x15E   0xD100             BNE      .+4
   \      0x160   0xE0D2             B        ??MBASC_Fun10_27
   \      0x162   0x1E40             SUBS     R0,R0,#+1
   \      0x164   0xD100             BNE      .+4
   \      0x166   0xE0E7             B        ??MBASC_Fun10_28
   \      0x168   0x1E40             SUBS     R0,R0,#+1
   \      0x16A   0xD100             BNE      .+4
   \      0x16C   0xE0FB             B        ??MBASC_Fun10_29
   \      0x16E   0x1E40             SUBS     R0,R0,#+1
   \      0x170   0xD100             BNE      .+4
   \      0x172   0xE126             B        ??MBASC_Fun10_30
   \      0x174   0x1E40             SUBS     R0,R0,#+1
   \      0x176   0xD100             BNE      .+4
   \      0x178   0xE152             B        ??MBASC_Fun10_31
   \      0x17A   0x1E40             SUBS     R0,R0,#+1
   \      0x17C   0xD100             BNE      .+4
   \      0x17E   0xE151             B        ??MBASC_Fun10_32
   \      0x180   0x1E40             SUBS     R0,R0,#+1
   \      0x182   0xD100             BNE      .+4
   \      0x184   0xE150             B        ??MBASC_Fun10_33
   \      0x186   0x1E40             SUBS     R0,R0,#+1
   \      0x188   0xD100             BNE      .+4
   \      0x18A   0xE14F             B        ??MBASC_Fun10_34
   \      0x18C   0x1E40             SUBS     R0,R0,#+1
   \      0x18E   0xD100             BNE      .+4
   \      0x190   0xE14E             B        ??MBASC_Fun10_35
   \      0x192   0x1E40             SUBS     R0,R0,#+1
   \      0x194   0xD100             BNE      .+4
   \      0x196   0xE163             B        ??MBASC_Fun10_36
   \      0x198   0x1E40             SUBS     R0,R0,#+1
   \      0x19A   0xD100             BNE      .+4
   \      0x19C   0xE162             B        ??MBASC_Fun10_37
   \      0x19E   0x1E40             SUBS     R0,R0,#+1
   \      0x1A0   0xD100             BNE      .+4
   \      0x1A2   0xE178             B        ??MBASC_Fun10_38
   \      0x1A4   0x1E40             SUBS     R0,R0,#+1
   \      0x1A6   0xD100             BNE      .+4
   \      0x1A8   0xE18E             B        ??MBASC_Fun10_39
   \      0x1AA   0x1E40             SUBS     R0,R0,#+1
   \      0x1AC   0xD100             BNE      .+4
   \      0x1AE   0xE1A4             B        ??MBASC_Fun10_40
   \      0x1B0   0x1E40             SUBS     R0,R0,#+1
   \      0x1B2   0xD100             BNE      .+4
   \      0x1B4   0xE1C4             B        ??MBASC_Fun10_41
   \      0x1B6   0x1E40             SUBS     R0,R0,#+1
   \      0x1B8   0xD100             BNE      .+4
   \      0x1BA   0xE1DA             B        ??MBASC_Fun10_42
   \      0x1BC   0x1E40             SUBS     R0,R0,#+1
   \      0x1BE   0xD100             BNE      .+4
   \      0x1C0   0xE1F0             B        ??MBASC_Fun10_43
   \      0x1C2   0x1E40             SUBS     R0,R0,#+1
   \      0x1C4   0xD100             BNE      .+4
   \      0x1C6   0xE206             B        ??MBASC_Fun10_44
   \      0x1C8   0x1E40             SUBS     R0,R0,#+1
   \      0x1CA   0xD100             BNE      .+4
   \      0x1CC   0xE21C             B        ??MBASC_Fun10_45
   \      0x1CE   0x1E40             SUBS     R0,R0,#+1
   \      0x1D0   0xD100             BNE      .+4
   \      0x1D2   0xE232             B        ??MBASC_Fun10_46
   \      0x1D4   0x1E40             SUBS     R0,R0,#+1
   \      0x1D6   0xD100             BNE      .+4
   \      0x1D8   0xE248             B        ??MBASC_Fun10_47
   \      0x1DA   0x1E40             SUBS     R0,R0,#+1
   \      0x1DC   0xD100             BNE      .+4
   \      0x1DE   0xE247             B        ??MBASC_Fun10_48
   \      0x1E0   0x1E40             SUBS     R0,R0,#+1
   \      0x1E2   0xD100             BNE      .+4
   \      0x1E4   0xE246             B        ??MBASC_Fun10_49
   \      0x1E6   0x1E40             SUBS     R0,R0,#+1
   \      0x1E8   0xD100             BNE      .+4
   \      0x1EA   0xE245             B        ??MBASC_Fun10_50
   \      0x1EC   0x1E40             SUBS     R0,R0,#+1
   \      0x1EE   0xD100             BNE      .+4
   \      0x1F0   0xE244             B        ??MBASC_Fun10_51
   \      0x1F2   0x1E40             SUBS     R0,R0,#+1
   \      0x1F4   0xD100             BNE      .+4
   \      0x1F6   0xE243             B        ??MBASC_Fun10_52
   \      0x1F8   0x1E40             SUBS     R0,R0,#+1
   \      0x1FA   0xD100             BNE      .+4
   \      0x1FC   0xE242             B        ??MBASC_Fun10_53
   \      0x1FE   0x3811             SUBS     R0,R0,#+17
   \      0x200   0xD100             BNE      .+4
   \      0x202   0xE241             B        ??MBASC_Fun10_54
   \      0x204   0x3810             SUBS     R0,R0,#+16
   \      0x206   0xD100             BNE      .+4
   \      0x208   0xE25E             B        ??MBASC_Fun10_55
   \      0x20A   0x1E40             SUBS     R0,R0,#+1
   \      0x20C   0xD100             BNE      .+4
   \      0x20E   0xE275             B        ??MBASC_Fun10_56
   \      0x210   0x1E40             SUBS     R0,R0,#+1
   \      0x212   0xD100             BNE      .+4
   \      0x214   0xE2A0             B        ??MBASC_Fun10_57
   \      0x216   0x1E40             SUBS     R0,R0,#+1
   \      0x218   0xD100             BNE      .+4
   \      0x21A   0xE77D             B        ??MBASC_Fun10_20
   \      0x21C   0x380D             SUBS     R0,R0,#+13
   \      0x21E   0xD100             BNE      .+4
   \      0x220   0xE29B             B        ??MBASC_Fun10_58
   \      0x222   0xE778             B        ??MBASC_Fun10_18
   \                     ??MBASC_Fun10_22: (+1)
   \      0x224   0x4B23             LDR      R3,??MBASC_Fun10_0+0x8
   \      0x226   0x1928             ADDS     R0,R5,R4
   \      0x228   0x79C0             LDRB     R0,[R0, #+7]
   \      0x22A   0x4370             MULS     R0,R6,R0
   \      0x22C   0x1929             ADDS     R1,R5,R4
   \      0x22E   0x7A09             LDRB     R1,[R1, #+8]
   \      0x230   0x1840             ADDS     R0,R0,R1
   \      0x232   0x7018             STRB     R0,[R3, #+0]
   \      0x234   0x2201             MOVS     R2,#+1
   \      0x236   0x2101             MOVS     R1,#+1
   \      0x238   0x20A0             MOVS     R0,#+160
   \      0x23A   0x....'....        BL       I2C1_WNBytesMul3T
   \      0x23E   0x1CA4             ADDS     R4,R4,#+2
   \      0x240   0xE76A             B        ??MBASC_Fun10_19
   \                     ??MBASC_Fun10_23: (+1)
   \      0x242   0x481C             LDR      R0,??MBASC_Fun10_0+0x8
   \      0x244   0x1C43             ADDS     R3,R0,#+1
   \      0x246   0x1929             ADDS     R1,R5,R4
   \      0x248   0x79C9             LDRB     R1,[R1, #+7]
   \      0x24A   0x4371             MULS     R1,R6,R1
   \      0x24C   0x192A             ADDS     R2,R5,R4
   \      0x24E   0x7A12             LDRB     R2,[R2, #+8]
   \      0x250   0x1889             ADDS     R1,R1,R2
   \      0x252   0x7019             STRB     R1,[R3, #+0]
   \      0x254   0x7841             LDRB     R1,[R0, #+1]
   \      0x256   0x2900             CMP      R1,#+0
   \      0x258   0xD101             BNE      ??MBASC_Fun10_59
   \      0x25A   0x2101             MOVS     R1,#+1
   \      0x25C   0x7019             STRB     R1,[R3, #+0]
   \                     ??MBASC_Fun10_59: (+1)
   \      0x25E   0x7840             LDRB     R0,[R0, #+1]
   \      0x260   0x2808             CMP      R0,#+8
   \      0x262   0xDB01             BLT      ??MBASC_Fun10_60
   \      0x264   0x2007             MOVS     R0,#+7
   \      0x266   0x7018             STRB     R0,[R3, #+0]
   \                     ??MBASC_Fun10_60: (+1)
   \      0x268   0x2201             MOVS     R2,#+1
   \      0x26A   0x2102             MOVS     R1,#+2
   \      0x26C   0x20A0             MOVS     R0,#+160
   \      0x26E   0x....'....        BL       I2C1_WNBytesMul3T
   \      0x272   0x2701             MOVS     R7,#+1
   \      0x274   0x1CA4             ADDS     R4,R4,#+2
   \      0x276   0xE74F             B        ??MBASC_Fun10_19
   \                     ??MBASC_Fun10_24: (+1)
   \      0x278   0x480E             LDR      R0,??MBASC_Fun10_0+0x8
   \      0x27A   0x1D03             ADDS     R3,R0,#+4
   \      0x27C   0x1929             ADDS     R1,R5,R4
   \      0x27E   0x79C9             LDRB     R1,[R1, #+7]
   \      0x280   0x4371             MULS     R1,R6,R1
   \      0x282   0x192A             ADDS     R2,R5,R4
   \      0x284   0x7A12             LDRB     R2,[R2, #+8]
   \      0x286   0x1889             ADDS     R1,R1,R2
   \      0x288   0x7019             STRB     R1,[R3, #+0]
   \      0x28A   0x7901             LDRB     R1,[R0, #+4]
   \      0x28C   0x2900             CMP      R1,#+0
   \      0x28E   0xD002             BEQ      ??MBASC_Fun10_61
   \      0x290   0x7840             LDRB     R0,[R0, #+1]
   \      0x292   0x2804             CMP      R0,#+4
   \      0x294   0xDB01             BLT      ??MBASC_Fun10_62
   \                     ??MBASC_Fun10_61: (+1)
   \      0x296   0x2003             MOVS     R0,#+3
   \      0x298   0x7018             STRB     R0,[R3, #+0]
   \                     ??MBASC_Fun10_62: (+1)
   \      0x29A   0x2201             MOVS     R2,#+1
   \      0x29C   0x2103             MOVS     R1,#+3
   \      0x29E   0x20A0             MOVS     R0,#+160
   \      0x2A0   0x....'....        BL       I2C1_WNBytesMul3T
   \      0x2A4   0x2701             MOVS     R7,#+1
   \      0x2A6   0x1CA4             ADDS     R4,R4,#+2
   \      0x2A8   0xE736             B        ??MBASC_Fun10_19
   \      0x2AA   0xBF00             Nop
   \                     ??MBASC_Fun10_0:
   \      0x2AC   0x....'....        DC32     ProductPara+0x3
   \      0x2B0   0x....'....        DC32     UART1_RXBuff
   \      0x2B4   0x....'....        DC32     UartComm
   \      0x2B8   0x....'....        DC32     SendLen
   \      0x2BC   0x....'....        DC32     SendBuf
   \      0x2C0   0x0000'7130        DC32     0x7130
   \      0x2C4   0x0000'7151        DC32     0x7151
   \      0x2C8   0x0000'7160        DC32     0x7160
   \      0x2CC   0x0000'7170        DC32     0x7170
   \      0x2D0   0x0000'7175        DC32     0x7175
   \                     ??MBASC_Fun10_25: (+1)
   \      0x2D4   0x1CA4             ADDS     R4,R4,#+2
   \      0x2D6   0xE71F             B        ??MBASC_Fun10_19
   \                     ??MBASC_Fun10_26: (+1)
   \      0x2D8   0x4860             LDR      R0,??MBASC_Fun10_1
   \      0x2DA   0x1D03             ADDS     R3,R0,#+4
   \      0x2DC   0x1929             ADDS     R1,R5,R4
   \      0x2DE   0x79C9             LDRB     R1,[R1, #+7]
   \      0x2E0   0x4371             MULS     R1,R6,R1
   \      0x2E2   0x192A             ADDS     R2,R5,R4
   \      0x2E4   0x7A12             LDRB     R2,[R2, #+8]
   \      0x2E6   0x1889             ADDS     R1,R1,R2
   \      0x2E8   0x7019             STRB     R1,[R3, #+0]
   \      0x2EA   0x7901             LDRB     R1,[R0, #+4]
   \      0x2EC   0x2901             CMP      R1,#+1
   \      0x2EE   0xD004             BEQ      ??MBASC_Fun10_63
   \      0x2F0   0x7900             LDRB     R0,[R0, #+4]
   \      0x2F2   0x2802             CMP      R0,#+2
   \      0x2F4   0xD001             BEQ      ??MBASC_Fun10_63
   \      0x2F6   0x2001             MOVS     R0,#+1
   \      0x2F8   0x7018             STRB     R0,[R3, #+0]
   \                     ??MBASC_Fun10_63: (+1)
   \      0x2FA   0x2201             MOVS     R2,#+1
   \      0x2FC   0x2104             MOVS     R1,#+4
   \      0x2FE   0x20A0             MOVS     R0,#+160
   \      0x300   0x....'....        BL       I2C1_WNBytesMul3T
   \      0x304   0x1CA4             ADDS     R4,R4,#+2
   \      0x306   0xE707             B        ??MBASC_Fun10_19
   \                     ??MBASC_Fun10_27: (+1)
   \      0x308   0x4854             LDR      R0,??MBASC_Fun10_1
   \      0x30A   0x1C43             ADDS     R3,R0,#+1
   \      0x30C   0x1929             ADDS     R1,R5,R4
   \      0x30E   0x79C9             LDRB     R1,[R1, #+7]
   \      0x310   0x4371             MULS     R1,R6,R1
   \      0x312   0x192A             ADDS     R2,R5,R4
   \      0x314   0x7A12             LDRB     R2,[R2, #+8]
   \      0x316   0x1889             ADDS     R1,R1,R2
   \      0x318   0x7019             STRB     R1,[R3, #+0]
   \      0x31A   0x7841             LDRB     R1,[R0, #+1]
   \      0x31C   0x2900             CMP      R1,#+0
   \      0x31E   0xD002             BEQ      ??MBASC_Fun10_64
   \      0x320   0x7840             LDRB     R0,[R0, #+1]
   \      0x322   0x2804             CMP      R0,#+4
   \      0x324   0xDB01             BLT      ??MBASC_Fun10_65
   \                     ??MBASC_Fun10_64: (+1)
   \      0x326   0x2002             MOVS     R0,#+2
   \      0x328   0x7018             STRB     R0,[R3, #+0]
   \                     ??MBASC_Fun10_65: (+1)
   \      0x32A   0x2201             MOVS     R2,#+1
   \      0x32C   0x2105             MOVS     R1,#+5
   \      0x32E   0x20A0             MOVS     R0,#+160
   \      0x330   0x....'....        BL       I2C1_WNBytesMul3T
   \      0x334   0x1CA4             ADDS     R4,R4,#+2
   \      0x336   0xE6EF             B        ??MBASC_Fun10_19
   \                     ??MBASC_Fun10_28: (+1)
   \      0x338   0x4B48             LDR      R3,??MBASC_Fun10_1
   \      0x33A   0x1928             ADDS     R0,R5,R4
   \      0x33C   0x79C0             LDRB     R0,[R0, #+7]
   \      0x33E   0x4370             MULS     R0,R6,R0
   \      0x340   0x1929             ADDS     R1,R5,R4
   \      0x342   0x7A09             LDRB     R1,[R1, #+8]
   \      0x344   0x1840             ADDS     R0,R0,R1
   \      0x346   0x7018             STRB     R0,[R3, #+0]
   \      0x348   0x7818             LDRB     R0,[R3, #+0]
   \      0x34A   0x2800             CMP      R0,#+0
   \      0x34C   0xD002             BEQ      ??MBASC_Fun10_66
   \      0x34E   0x7818             LDRB     R0,[R3, #+0]
   \      0x350   0x2805             CMP      R0,#+5
   \      0x352   0xDB01             BLT      ??MBASC_Fun10_67
   \                     ??MBASC_Fun10_66: (+1)
   \      0x354   0x2001             MOVS     R0,#+1
   \      0x356   0x7018             STRB     R0,[R3, #+0]
   \                     ??MBASC_Fun10_67: (+1)
   \      0x358   0x2201             MOVS     R2,#+1
   \      0x35A   0x2106             MOVS     R1,#+6
   \      0x35C   0x20A0             MOVS     R0,#+160
   \      0x35E   0x....'....        BL       I2C1_WNBytesMul3T
   \      0x362   0x1CA4             ADDS     R4,R4,#+2
   \      0x364   0xE6D8             B        ??MBASC_Fun10_19
   \                     ??MBASC_Fun10_29: (+1)
   \      0x366   0x1928             ADDS     R0,R5,R4
   \      0x368   0x79C0             LDRB     R0,[R0, #+7]
   \      0x36A   0x4370             MULS     R0,R6,R0
   \      0x36C   0x1929             ADDS     R1,R5,R4
   \      0x36E   0x7A09             LDRB     R1,[R1, #+8]
   \      0x370   0x1840             ADDS     R0,R0,R1
   \      0x372   0x....'....        BL       __aeabi_i2d
   \      0x376   0x2200             MOVS     R2,#+0
   \      0x378   0x4BCF             LDR      R3,??MBASC_Fun10_2  ;; 0x40590000
   \      0x37A   0x....'....        BL       __aeabi_ddiv
   \      0x37E   0x....'....        BL       __aeabi_d2f
   \      0x382   0x49CE             LDR      R1,??MBASC_Fun10_2+0x4
   \      0x384   0x6008             STR      R0,[R1, #+0]
   \      0x386   0x48CD             LDR      R0,??MBASC_Fun10_2+0x4
   \      0x388   0x6800             LDR      R0,[R0, #+0]
   \      0x38A   0x49CD             LDR      R1,??MBASC_Fun10_2+0x8  ;; 0x3c23d70a
   \      0x38C   0x....'....        BL       __aeabi_cfcmple
   \      0x390   0xD305             BCC      ??MBASC_Fun10_68
   \      0x392   0x48CA             LDR      R0,??MBASC_Fun10_2+0x4
   \      0x394   0x6800             LDR      R0,[R0, #+0]
   \      0x396   0x49CB             LDR      R1,??MBASC_Fun10_2+0xC  ;; 0x40000001
   \      0x398   0x....'....        BL       __aeabi_cfrcmple
   \      0x39C   0xD803             BHI      ??MBASC_Fun10_69
   \                     ??MBASC_Fun10_68: (+1)
   \      0x39E   0x20FE             MOVS     R0,#+254
   \      0x3A0   0x0580             LSLS     R0,R0,#+22       ;; #+1065353216
   \      0x3A2   0x49C6             LDR      R1,??MBASC_Fun10_2+0x4
   \      0x3A4   0x6008             STR      R0,[R1, #+0]
   \                     ??MBASC_Fun10_69: (+1)
   \      0x3A6   0x2204             MOVS     R2,#+4
   \      0x3A8   0xA901             ADD      R1,SP,#+4
   \      0x3AA   0x48C4             LDR      R0,??MBASC_Fun10_2+0x4
   \      0x3AC   0x6800             LDR      R0,[R0, #+0]
   \      0x3AE   0x....'....        BL       floatToHexArray
   \      0x3B2   0xAB01             ADD      R3,SP,#+4
   \      0x3B4   0x2204             MOVS     R2,#+4
   \      0x3B6   0x2131             MOVS     R1,#+49
   \      0x3B8   0x20A0             MOVS     R0,#+160
   \      0x3BA   0x....'....        BL       I2C1_WNBytesMul3T
   \      0x3BE   0x1CA4             ADDS     R4,R4,#+2
   \      0x3C0   0xE6AA             B        ??MBASC_Fun10_19
   \                     ??MBASC_Fun10_30: (+1)
   \      0x3C2   0x48CC             LDR      R0,??MBASC_Fun10_3
   \      0x3C4   0x9003             STR      R0,[SP, #+12]
   \      0x3C6   0x1928             ADDS     R0,R5,R4
   \      0x3C8   0x79C0             LDRB     R0,[R0, #+7]
   \      0x3CA   0x4370             MULS     R0,R6,R0
   \      0x3CC   0x1929             ADDS     R1,R5,R4
   \      0x3CE   0x7A09             LDRB     R1,[R1, #+8]
   \      0x3D0   0x1840             ADDS     R0,R0,R1
   \      0x3D2   0x....'....        BL       __aeabi_i2d
   \      0x3D6   0x2200             MOVS     R2,#+0
   \      0x3D8   0x4BC7             LDR      R3,??MBASC_Fun10_3+0x4  ;; 0xc0590000
   \      0x3DA   0x....'....        BL       __aeabi_dadd
   \      0x3DE   0x....'....        BL       __aeabi_d2f
   \      0x3E2   0x9903             LDR      R1,[SP, #+12]
   \      0x3E4   0x6008             STR      R0,[R1, #+0]
   \      0x3E6   0x48B5             LDR      R0,??MBASC_Fun10_2+0x4
   \      0x3E8   0x6840             LDR      R0,[R0, #+4]
   \      0x3EA   0x49D1             LDR      R1,??MBASC_Fun10_4  ;; 0xc2c80000
   \      0x3EC   0x....'....        BL       __aeabi_cfcmple
   \      0x3F0   0xD305             BCC      ??MBASC_Fun10_70
   \      0x3F2   0x48B2             LDR      R0,??MBASC_Fun10_2+0x4
   \      0x3F4   0x6840             LDR      R0,[R0, #+4]
   \      0x3F6   0x49CF             LDR      R1,??MBASC_Fun10_4+0x4  ;; 0x42c80001
   \      0x3F8   0x....'....        BL       __aeabi_cfrcmple
   \      0x3FC   0xD802             BHI      ??MBASC_Fun10_71
   \                     ??MBASC_Fun10_70: (+1)
   \      0x3FE   0x48D2             LDR      R0,??MBASC_Fun10_5  ;; 0x42c80000
   \      0x400   0x9903             LDR      R1,[SP, #+12]
   \      0x402   0x6008             STR      R0,[R1, #+0]
   \                     ??MBASC_Fun10_71: (+1)
   \      0x404   0x2204             MOVS     R2,#+4
   \      0x406   0xA901             ADD      R1,SP,#+4
   \      0x408   0x48AC             LDR      R0,??MBASC_Fun10_2+0x4
   \      0x40A   0x6840             LDR      R0,[R0, #+4]
   \      0x40C   0x....'....        BL       floatToHexArray
   \      0x410   0xAB01             ADD      R3,SP,#+4
   \      0x412   0x2204             MOVS     R2,#+4
   \      0x414   0x2135             MOVS     R1,#+53
   \      0x416   0x20A0             MOVS     R0,#+160
   \      0x418   0x....'....        BL       I2C1_WNBytesMul3T
   \      0x41C   0x1CA4             ADDS     R4,R4,#+2
   \      0x41E   0xE67B             B        ??MBASC_Fun10_19
   \                     ??MBASC_Fun10_31: (+1)
   \      0x420   0x1CA4             ADDS     R4,R4,#+2
   \      0x422   0xE679             B        ??MBASC_Fun10_19
   \                     ??MBASC_Fun10_32: (+1)
   \      0x424   0x1CA4             ADDS     R4,R4,#+2
   \      0x426   0xE677             B        ??MBASC_Fun10_19
   \                     ??MBASC_Fun10_33: (+1)
   \      0x428   0x1CA4             ADDS     R4,R4,#+2
   \      0x42A   0xE675             B        ??MBASC_Fun10_19
   \                     ??MBASC_Fun10_34: (+1)
   \      0x42C   0x1CA4             ADDS     R4,R4,#+2
   \      0x42E   0xE673             B        ??MBASC_Fun10_19
   \                     ??MBASC_Fun10_35: (+1)
   \      0x430   0x1928             ADDS     R0,R5,R4
   \      0x432   0x79C0             LDRB     R0,[R0, #+7]
   \      0x434   0x2100             MOVS     R1,#+0
   \      0x436   0x4348             MULS     R0,R1,R0
   \      0x438   0x1929             ADDS     R1,R5,R4
   \      0x43A   0x7A09             LDRB     R1,[R1, #+8]
   \      0x43C   0x1840             ADDS     R0,R0,R1
   \      0x43E   0xB2C0             UXTB     R0,R0
   \      0x440   0x0001             MOVS     R1,R0
   \      0x442   0xB289             UXTH     R1,R1
   \      0x444   0x4AC1             LDR      R2,??MBASC_Fun10_5+0x4  ;; 0xffff
   \      0x446   0x4291             CMP      R1,R2
   \      0x448   0xD006             BEQ      ??MBASC_Fun10_72
   \      0x44A   0x4BC1             LDR      R3,??MBASC_Fun10_5+0x8
   \      0x44C   0x7018             STRB     R0,[R3, #+0]
   \      0x44E   0x2201             MOVS     R2,#+1
   \      0x450   0x2163             MOVS     R1,#+99
   \      0x452   0x20A0             MOVS     R0,#+160
   \      0x454   0x....'....        BL       I2C1_WNBytesMul3T
   \                     ??MBASC_Fun10_72: (+1)
   \      0x458   0x1CA4             ADDS     R4,R4,#+2
   \      0x45A   0xE65D             B        ??MBASC_Fun10_19
   \                     ??MBASC_Fun10_1:
   \      0x45C   0x....'....        DC32     ProductPara
   \                     ??MBASC_Fun10_36: (+1)
   \      0x460   0x1CA4             ADDS     R4,R4,#+2
   \      0x462   0xE659             B        ??MBASC_Fun10_19
   \                     ??MBASC_Fun10_37: (+1)
   \      0x464   0x1928             ADDS     R0,R5,R4
   \      0x466   0x79C0             LDRB     R0,[R0, #+7]
   \      0x468   0x4370             MULS     R0,R6,R0
   \      0x46A   0x1929             ADDS     R1,R5,R4
   \      0x46C   0x7A09             LDRB     R1,[R1, #+8]
   \      0x46E   0x1840             ADDS     R0,R0,R1
   \      0x470   0x0001             MOVS     R1,R0
   \      0x472   0xB289             UXTH     R1,R1
   \      0x474   0x4AB5             LDR      R2,??MBASC_Fun10_5+0x4  ;; 0xffff
   \      0x476   0x4291             CMP      R1,R2
   \      0x478   0xD00B             BEQ      ??MBASC_Fun10_73
   \      0x47A   0x4AB6             LDR      R2,??MBASC_Fun10_5+0xC
   \      0x47C   0x8290             STRH     R0,[R2, #+20]
   \      0x47E   0xA901             ADD      R1,SP,#+4
   \      0x480   0x8A90             LDRH     R0,[R2, #+20]
   \      0x482   0x....'....        BL       UshortToArray
   \      0x486   0xAB01             ADD      R3,SP,#+4
   \      0x488   0x2202             MOVS     R2,#+2
   \      0x48A   0x214F             MOVS     R1,#+79
   \      0x48C   0x20A0             MOVS     R0,#+160
   \      0x48E   0x....'....        BL       I2C1_WNBytesMul3T
   \                     ??MBASC_Fun10_73: (+1)
   \      0x492   0x1CA4             ADDS     R4,R4,#+2
   \      0x494   0xE640             B        ??MBASC_Fun10_19
   \                     ??MBASC_Fun10_38: (+1)
   \      0x496   0x1928             ADDS     R0,R5,R4
   \      0x498   0x79C0             LDRB     R0,[R0, #+7]
   \      0x49A   0x4370             MULS     R0,R6,R0
   \      0x49C   0x1929             ADDS     R1,R5,R4
   \      0x49E   0x7A09             LDRB     R1,[R1, #+8]
   \      0x4A0   0x1840             ADDS     R0,R0,R1
   \      0x4A2   0x0001             MOVS     R1,R0
   \      0x4A4   0xB289             UXTH     R1,R1
   \      0x4A6   0x4AA9             LDR      R2,??MBASC_Fun10_5+0x4  ;; 0xffff
   \      0x4A8   0x4291             CMP      R1,R2
   \      0x4AA   0xD00B             BEQ      ??MBASC_Fun10_74
   \      0x4AC   0x4AA9             LDR      R2,??MBASC_Fun10_5+0xC
   \      0x4AE   0x8310             STRH     R0,[R2, #+24]
   \      0x4B0   0xA901             ADD      R1,SP,#+4
   \      0x4B2   0x8B10             LDRH     R0,[R2, #+24]
   \      0x4B4   0x....'....        BL       UshortToArray
   \      0x4B8   0xAB01             ADD      R3,SP,#+4
   \      0x4BA   0x2202             MOVS     R2,#+2
   \      0x4BC   0x2153             MOVS     R1,#+83
   \      0x4BE   0x20A0             MOVS     R0,#+160
   \      0x4C0   0x....'....        BL       I2C1_WNBytesMul3T
   \                     ??MBASC_Fun10_74: (+1)
   \      0x4C4   0x1CA4             ADDS     R4,R4,#+2
   \      0x4C6   0xE627             B        ??MBASC_Fun10_19
   \                     ??MBASC_Fun10_39: (+1)
   \      0x4C8   0x1928             ADDS     R0,R5,R4
   \      0x4CA   0x79C0             LDRB     R0,[R0, #+7]
   \      0x4CC   0x4370             MULS     R0,R6,R0
   \      0x4CE   0x1929             ADDS     R1,R5,R4
   \      0x4D0   0x7A09             LDRB     R1,[R1, #+8]
   \      0x4D2   0x1840             ADDS     R0,R0,R1
   \      0x4D4   0x0001             MOVS     R1,R0
   \      0x4D6   0xB289             UXTH     R1,R1
   \      0x4D8   0x4A9C             LDR      R2,??MBASC_Fun10_5+0x4  ;; 0xffff
   \      0x4DA   0x4291             CMP      R1,R2
   \      0x4DC   0xD00B             BEQ      ??MBASC_Fun10_75
   \      0x4DE   0x4A9D             LDR      R2,??MBASC_Fun10_5+0xC
   \      0x4E0   0x8350             STRH     R0,[R2, #+26]
   \      0x4E2   0xA901             ADD      R1,SP,#+4
   \      0x4E4   0x8B50             LDRH     R0,[R2, #+26]
   \      0x4E6   0x....'....        BL       UshortToArray
   \      0x4EA   0xAB01             ADD      R3,SP,#+4
   \      0x4EC   0x2202             MOVS     R2,#+2
   \      0x4EE   0x2155             MOVS     R1,#+85
   \      0x4F0   0x20A0             MOVS     R0,#+160
   \      0x4F2   0x....'....        BL       I2C1_WNBytesMul3T
   \                     ??MBASC_Fun10_75: (+1)
   \      0x4F6   0x1CA4             ADDS     R4,R4,#+2
   \      0x4F8   0xE60E             B        ??MBASC_Fun10_19
   \                     ??MBASC_Fun10_40: (+1)
   \      0x4FA   0x1928             ADDS     R0,R5,R4
   \      0x4FC   0x79C0             LDRB     R0,[R0, #+7]
   \      0x4FE   0x4370             MULS     R0,R6,R0
   \      0x500   0x1929             ADDS     R1,R5,R4
   \      0x502   0x7A09             LDRB     R1,[R1, #+8]
   \      0x504   0x1840             ADDS     R0,R0,R1
   \      0x506   0x0001             MOVS     R1,R0
   \      0x508   0xB289             UXTH     R1,R1
   \      0x50A   0x4A90             LDR      R2,??MBASC_Fun10_5+0x4  ;; 0xffff
   \      0x50C   0x4291             CMP      R1,R2
   \      0x50E   0xD015             BEQ      ??MBASC_Fun10_76
   \      0x510   0x4A90             LDR      R2,??MBASC_Fun10_5+0xC
   \      0x512   0x0011             MOVS     R1,R2
   \      0x514   0x3116             ADDS     R1,R1,#+22
   \      0x516   0x8008             STRH     R0,[R1, #+0]
   \      0x518   0x8AD0             LDRH     R0,[R2, #+22]
   \      0x51A   0x2801             CMP      R0,#+1
   \      0x51C   0xD004             BEQ      ??MBASC_Fun10_77
   \      0x51E   0x8AD0             LDRH     R0,[R2, #+22]
   \      0x520   0x2802             CMP      R0,#+2
   \      0x522   0xD001             BEQ      ??MBASC_Fun10_77
   \      0x524   0x2002             MOVS     R0,#+2
   \      0x526   0x8008             STRH     R0,[R1, #+0]
   \                     ??MBASC_Fun10_77: (+1)
   \      0x528   0xA901             ADD      R1,SP,#+4
   \      0x52A   0x8AD0             LDRH     R0,[R2, #+22]
   \      0x52C   0x....'....        BL       UshortToArray
   \      0x530   0xAB01             ADD      R3,SP,#+4
   \      0x532   0x2202             MOVS     R2,#+2
   \      0x534   0x2151             MOVS     R1,#+81
   \      0x536   0x20A0             MOVS     R0,#+160
   \      0x538   0x....'....        BL       I2C1_WNBytesMul3T
   \                     ??MBASC_Fun10_76: (+1)
   \      0x53C   0x1CA4             ADDS     R4,R4,#+2
   \      0x53E   0xE5EB             B        ??MBASC_Fun10_19
   \                     ??MBASC_Fun10_41: (+1)
   \      0x540   0x1928             ADDS     R0,R5,R4
   \      0x542   0x79C0             LDRB     R0,[R0, #+7]
   \      0x544   0x4370             MULS     R0,R6,R0
   \      0x546   0x1929             ADDS     R1,R5,R4
   \      0x548   0x7A09             LDRB     R1,[R1, #+8]
   \      0x54A   0x1840             ADDS     R0,R0,R1
   \      0x54C   0x0001             MOVS     R1,R0
   \      0x54E   0xB289             UXTH     R1,R1
   \      0x550   0x4A7E             LDR      R2,??MBASC_Fun10_5+0x4  ;; 0xffff
   \      0x552   0x4291             CMP      R1,R2
   \      0x554   0xD00B             BEQ      ??MBASC_Fun10_78
   \      0x556   0x4A7F             LDR      R2,??MBASC_Fun10_5+0xC
   \      0x558   0x8390             STRH     R0,[R2, #+28]
   \      0x55A   0xA901             ADD      R1,SP,#+4
   \      0x55C   0x8B90             LDRH     R0,[R2, #+28]
   \      0x55E   0x....'....        BL       UshortToArray
   \      0x562   0xAB01             ADD      R3,SP,#+4
   \      0x564   0x2202             MOVS     R2,#+2
   \      0x566   0x2157             MOVS     R1,#+87
   \      0x568   0x20A0             MOVS     R0,#+160
   \      0x56A   0x....'....        BL       I2C1_WNBytesMul3T
   \                     ??MBASC_Fun10_78: (+1)
   \      0x56E   0x1CA4             ADDS     R4,R4,#+2
   \      0x570   0xE5D2             B        ??MBASC_Fun10_19
   \                     ??MBASC_Fun10_42: (+1)
   \      0x572   0x1928             ADDS     R0,R5,R4
   \      0x574   0x79C0             LDRB     R0,[R0, #+7]
   \      0x576   0x4370             MULS     R0,R6,R0
   \      0x578   0x1929             ADDS     R1,R5,R4
   \      0x57A   0x7A09             LDRB     R1,[R1, #+8]
   \      0x57C   0x1840             ADDS     R0,R0,R1
   \      0x57E   0x0001             MOVS     R1,R0
   \      0x580   0xB289             UXTH     R1,R1
   \      0x582   0x4A72             LDR      R2,??MBASC_Fun10_5+0x4  ;; 0xffff
   \      0x584   0x4291             CMP      R1,R2
   \      0x586   0xD00B             BEQ      ??MBASC_Fun10_79
   \      0x588   0x4A72             LDR      R2,??MBASC_Fun10_5+0xC
   \      0x58A   0x83D0             STRH     R0,[R2, #+30]
   \      0x58C   0xA901             ADD      R1,SP,#+4
   \      0x58E   0x8BD0             LDRH     R0,[R2, #+30]
   \      0x590   0x....'....        BL       UshortToArray
   \      0x594   0xAB01             ADD      R3,SP,#+4
   \      0x596   0x2202             MOVS     R2,#+2
   \      0x598   0x2159             MOVS     R1,#+89
   \      0x59A   0x20A0             MOVS     R0,#+160
   \      0x59C   0x....'....        BL       I2C1_WNBytesMul3T
   \                     ??MBASC_Fun10_79: (+1)
   \      0x5A0   0x1CA4             ADDS     R4,R4,#+2
   \      0x5A2   0xE5B9             B        ??MBASC_Fun10_19
   \                     ??MBASC_Fun10_43: (+1)
   \      0x5A4   0x1928             ADDS     R0,R5,R4
   \      0x5A6   0x79C0             LDRB     R0,[R0, #+7]
   \      0x5A8   0x4370             MULS     R0,R6,R0
   \      0x5AA   0x1929             ADDS     R1,R5,R4
   \      0x5AC   0x7A09             LDRB     R1,[R1, #+8]
   \      0x5AE   0x1840             ADDS     R0,R0,R1
   \      0x5B0   0x0001             MOVS     R1,R0
   \      0x5B2   0xB289             UXTH     R1,R1
   \      0x5B4   0x4A65             LDR      R2,??MBASC_Fun10_5+0x4  ;; 0xffff
   \      0x5B6   0x4291             CMP      R1,R2
   \      0x5B8   0xD00B             BEQ      ??MBASC_Fun10_80
   \      0x5BA   0x4A66             LDR      R2,??MBASC_Fun10_5+0xC
   \      0x5BC   0x8410             STRH     R0,[R2, #+32]
   \      0x5BE   0xA901             ADD      R1,SP,#+4
   \      0x5C0   0x8C10             LDRH     R0,[R2, #+32]
   \      0x5C2   0x....'....        BL       UshortToArray
   \      0x5C6   0xAB01             ADD      R3,SP,#+4
   \      0x5C8   0x2202             MOVS     R2,#+2
   \      0x5CA   0x215B             MOVS     R1,#+91
   \      0x5CC   0x20A0             MOVS     R0,#+160
   \      0x5CE   0x....'....        BL       I2C1_WNBytesMul3T
   \                     ??MBASC_Fun10_80: (+1)
   \      0x5D2   0x1CA4             ADDS     R4,R4,#+2
   \      0x5D4   0xE5A0             B        ??MBASC_Fun10_19
   \                     ??MBASC_Fun10_44: (+1)
   \      0x5D6   0x1928             ADDS     R0,R5,R4
   \      0x5D8   0x79C0             LDRB     R0,[R0, #+7]
   \      0x5DA   0x4370             MULS     R0,R6,R0
   \      0x5DC   0x1929             ADDS     R1,R5,R4
   \      0x5DE   0x7A09             LDRB     R1,[R1, #+8]
   \      0x5E0   0x1840             ADDS     R0,R0,R1
   \      0x5E2   0x0001             MOVS     R1,R0
   \      0x5E4   0xB289             UXTH     R1,R1
   \      0x5E6   0x4A59             LDR      R2,??MBASC_Fun10_5+0x4  ;; 0xffff
   \      0x5E8   0x4291             CMP      R1,R2
   \      0x5EA   0xD00B             BEQ      ??MBASC_Fun10_81
   \      0x5EC   0x4A59             LDR      R2,??MBASC_Fun10_5+0xC
   \      0x5EE   0x8450             STRH     R0,[R2, #+34]
   \      0x5F0   0xA901             ADD      R1,SP,#+4
   \      0x5F2   0x8C50             LDRH     R0,[R2, #+34]
   \      0x5F4   0x....'....        BL       UshortToArray
   \      0x5F8   0xAB01             ADD      R3,SP,#+4
   \      0x5FA   0x2202             MOVS     R2,#+2
   \      0x5FC   0x215D             MOVS     R1,#+93
   \      0x5FE   0x20A0             MOVS     R0,#+160
   \      0x600   0x....'....        BL       I2C1_WNBytesMul3T
   \                     ??MBASC_Fun10_81: (+1)
   \      0x604   0x1CA4             ADDS     R4,R4,#+2
   \      0x606   0xE587             B        ??MBASC_Fun10_19
   \                     ??MBASC_Fun10_45: (+1)
   \      0x608   0x1928             ADDS     R0,R5,R4
   \      0x60A   0x79C0             LDRB     R0,[R0, #+7]
   \      0x60C   0x4370             MULS     R0,R6,R0
   \      0x60E   0x1929             ADDS     R1,R5,R4
   \      0x610   0x7A09             LDRB     R1,[R1, #+8]
   \      0x612   0x1840             ADDS     R0,R0,R1
   \      0x614   0x0001             MOVS     R1,R0
   \      0x616   0xB289             UXTH     R1,R1
   \      0x618   0x4A4C             LDR      R2,??MBASC_Fun10_5+0x4  ;; 0xffff
   \      0x61A   0x4291             CMP      R1,R2
   \      0x61C   0xD00B             BEQ      ??MBASC_Fun10_82
   \      0x61E   0x4A4D             LDR      R2,??MBASC_Fun10_5+0xC
   \      0x620   0x8490             STRH     R0,[R2, #+36]
   \      0x622   0xA901             ADD      R1,SP,#+4
   \      0x624   0x8C90             LDRH     R0,[R2, #+36]
   \      0x626   0x....'....        BL       UshortToArray
   \      0x62A   0xAB01             ADD      R3,SP,#+4
   \      0x62C   0x2202             MOVS     R2,#+2
   \      0x62E   0x215F             MOVS     R1,#+95
   \      0x630   0x20A0             MOVS     R0,#+160
   \      0x632   0x....'....        BL       I2C1_WNBytesMul3T
   \                     ??MBASC_Fun10_82: (+1)
   \      0x636   0x1CA4             ADDS     R4,R4,#+2
   \      0x638   0xE56E             B        ??MBASC_Fun10_19
   \                     ??MBASC_Fun10_46: (+1)
   \      0x63A   0x1928             ADDS     R0,R5,R4
   \      0x63C   0x79C0             LDRB     R0,[R0, #+7]
   \      0x63E   0x4370             MULS     R0,R6,R0
   \      0x640   0x1929             ADDS     R1,R5,R4
   \      0x642   0x7A09             LDRB     R1,[R1, #+8]
   \      0x644   0x1840             ADDS     R0,R0,R1
   \      0x646   0x0001             MOVS     R1,R0
   \      0x648   0xB289             UXTH     R1,R1
   \      0x64A   0x4A40             LDR      R2,??MBASC_Fun10_5+0x4  ;; 0xffff
   \      0x64C   0x4291             CMP      R1,R2
   \      0x64E   0xD00B             BEQ      ??MBASC_Fun10_83
   \      0x650   0x4A40             LDR      R2,??MBASC_Fun10_5+0xC
   \      0x652   0x84D0             STRH     R0,[R2, #+38]
   \      0x654   0xA901             ADD      R1,SP,#+4
   \      0x656   0x8CD0             LDRH     R0,[R2, #+38]
   \      0x658   0x....'....        BL       UshortToArray
   \      0x65C   0xAB01             ADD      R3,SP,#+4
   \      0x65E   0x2202             MOVS     R2,#+2
   \      0x660   0x2161             MOVS     R1,#+97
   \      0x662   0x20A0             MOVS     R0,#+160
   \      0x664   0x....'....        BL       I2C1_WNBytesMul3T
   \                     ??MBASC_Fun10_83: (+1)
   \      0x668   0x1CA4             ADDS     R4,R4,#+2
   \      0x66A   0xE555             B        ??MBASC_Fun10_19
   \                     ??MBASC_Fun10_47: (+1)
   \      0x66C   0x1CA4             ADDS     R4,R4,#+2
   \      0x66E   0xE553             B        ??MBASC_Fun10_19
   \                     ??MBASC_Fun10_48: (+1)
   \      0x670   0x1CA4             ADDS     R4,R4,#+2
   \      0x672   0xE551             B        ??MBASC_Fun10_19
   \                     ??MBASC_Fun10_49: (+1)
   \      0x674   0x1CA4             ADDS     R4,R4,#+2
   \      0x676   0xE54F             B        ??MBASC_Fun10_19
   \                     ??MBASC_Fun10_50: (+1)
   \      0x678   0x1CA4             ADDS     R4,R4,#+2
   \      0x67A   0xE54D             B        ??MBASC_Fun10_19
   \                     ??MBASC_Fun10_51: (+1)
   \      0x67C   0x1CA4             ADDS     R4,R4,#+2
   \      0x67E   0xE54B             B        ??MBASC_Fun10_19
   \                     ??MBASC_Fun10_52: (+1)
   \      0x680   0x1CA4             ADDS     R4,R4,#+2
   \      0x682   0xE549             B        ??MBASC_Fun10_19
   \                     ??MBASC_Fun10_53: (+1)
   \      0x684   0x1CA4             ADDS     R4,R4,#+2
   \      0x686   0xE547             B        ??MBASC_Fun10_19
   \                     ??MBASC_Fun10_54: (+1)
   \      0x688   0x....             LDR      R0,??DataTable7
   \      0x68A   0x1C83             ADDS     R3,R0,#+2
   \      0x68C   0x1929             ADDS     R1,R5,R4
   \      0x68E   0x79C9             LDRB     R1,[R1, #+7]
   \      0x690   0x4371             MULS     R1,R6,R1
   \      0x692   0x192A             ADDS     R2,R5,R4
   \      0x694   0x7A12             LDRB     R2,[R2, #+8]
   \      0x696   0x1889             ADDS     R1,R1,R2
   \      0x698   0x7019             STRB     R1,[R3, #+0]
   \      0x69A   0x7881             LDRB     R1,[R0, #+2]
   \      0x69C   0x2900             CMP      R1,#+0
   \      0x69E   0xD004             BEQ      ??MBASC_Fun10_84
   \      0x6A0   0x7880             LDRB     R0,[R0, #+2]
   \      0x6A2   0x2801             CMP      R0,#+1
   \      0x6A4   0xD001             BEQ      ??MBASC_Fun10_84
   \      0x6A6   0x2001             MOVS     R0,#+1
   \      0x6A8   0x7018             STRB     R0,[R3, #+0]
   \                     ??MBASC_Fun10_84: (+1)
   \      0x6AA   0x2201             MOVS     R2,#+1
   \      0x6AC   0x2107             MOVS     R1,#+7
   \      0x6AE   0x20A0             MOVS     R0,#+160
   \      0x6B0   0x....'....        BL       I2C1_WNBytesMul3T
   \      0x6B4   0x1CA4             ADDS     R4,R4,#+2
   \      0x6B6   0xE52F             B        ??MBASC_Fun10_19
   \                     ??MBASC_Fun10_2:
   \      0x6B8   0x4059'0000        DC32     0x40590000
   \      0x6BC   0x....'....        DC32     UserParam
   \      0x6C0   0x3C23'D70A        DC32     0x3c23d70a
   \      0x6C4   0x4000'0001        DC32     0x40000001
   \                     ??MBASC_Fun10_55: (+1)
   \      0x6C8   0x1928             ADDS     R0,R5,R4
   \      0x6CA   0x79C0             LDRB     R0,[R0, #+7]
   \      0x6CC   0x4370             MULS     R0,R6,R0
   \      0x6CE   0x1929             ADDS     R1,R5,R4
   \      0x6D0   0x7A09             LDRB     R1,[R1, #+8]
   \      0x6D2   0x1840             ADDS     R0,R0,R1
   \      0x6D4   0x....             LDR      R1,??DataTable7_1
   \      0x6D6   0x8008             STRH     R0,[R1, #+0]
   \      0x6D8   0x....             LDR      R0,??DataTable7_2
   \      0x6DA   0x8800             LDRH     R0,[R0, #+0]
   \      0x6DC   0x....'....        BL       Runing
   \      0x6E0   0x9003             STR      R0,[SP, #+12]
   \      0x6E2   0x....             LDR      R0,??DataTable7_3
   \      0x6E4   0xA903             ADD      R1,SP,#+12
   \      0x6E6   0x880A             LDRH     R2,[R1, #0]
   \      0x6E8   0x8002             STRH     R2,[R0, #0]
   \      0x6EA   0x884A             LDRH     R2,[R1, #+2]
   \      0x6EC   0x8042             STRH     R2,[R0, #+2]
   \      0x6EE   0x1CA4             ADDS     R4,R4,#+2
   \      0x6F0   0xE512             B        ??MBASC_Fun10_19
   \      0x6F2   0xBF00             Nop
   \                     ??MBASC_Fun10_3:
   \      0x6F4   0x....'....        DC32     UserParam+0x4
   \      0x6F8   0xC059'0000        DC32     0xc0590000
   \                     ??MBASC_Fun10_56: (+1)
   \      0x6FC   0x....             LDR      R0,??DataTable7_4
   \      0x6FE   0x1929             ADDS     R1,R5,R4
   \      0x700   0x79C9             LDRB     R1,[R1, #+7]
   \      0x702   0x4371             MULS     R1,R6,R1
   \      0x704   0x192A             ADDS     R2,R5,R4
   \      0x706   0x7A12             LDRB     R2,[R2, #+8]
   \      0x708   0x1889             ADDS     R1,R1,R2
   \      0x70A   0x7001             STRB     R1,[R0, #+0]
   \      0x70C   0x7800             LDRB     R0,[R0, #+0]
   \      0x70E   0x2801             CMP      R0,#+1
   \      0x710   0xD112             BNE      ??MBASC_Fun10_85
   \      0x712   0x....             LDR      R0,??DataTable7_5
   \      0x714   0x7801             LDRB     R1,[R0, #+0]
   \      0x716   0x000A             MOVS     R2,R1
   \      0x718   0x1C52             ADDS     R2,R2,#+1
   \      0x71A   0x7002             STRB     R2,[R0, #+0]
   \      0x71C   0xB2C9             UXTB     R1,R1
   \      0x71E   0x2904             CMP      R1,#+4
   \      0x720   0xDB0A             BLT      ??MBASC_Fun10_85
   \      0x722   0x2100             MOVS     R1,#+0
   \      0x724   0x7001             STRB     R1,[R0, #+0]
   \      0x726   0x2014             MOVS     R0,#+20
   \      0x728   0x490A             LDR      R1,??MBASC_Fun10_5+0xC
   \      0x72A   0x8508             STRH     R0,[R1, #+40]
   \      0x72C   0xE00A             B        ??MBASC_Fun10_86
   \      0x72E   0xBF00             Nop
   \                     ??MBASC_Fun10_4:
   \      0x730   0xC2C8'0000        DC32     0xc2c80000
   \      0x734   0x42C8'0001        DC32     0x42c80001
   \                     ??MBASC_Fun10_85: (+1)
   \      0x738   0x....             LDR      R0,??DataTable7
   \      0x73A   0x7840             LDRB     R0,[R0, #+1]
   \      0x73C   0x215A             MOVS     R1,#+90
   \      0x73E   0x4341             MULS     R1,R0,R1
   \      0x740   0x4804             LDR      R0,??MBASC_Fun10_5+0xC
   \      0x742   0x8501             STRH     R1,[R0, #+40]
   \                     ??MBASC_Fun10_86: (+1)
   \      0x744   0xE4E8             B        ??MBASC_Fun10_19
   \      0x746   0xBF00             Nop
   \                     ??MBASC_Fun10_5:
   \      0x748   0x42C8'0000        DC32     0x42c80000
   \      0x74C   0x0000'FFFF        DC32     0xffff
   \      0x750   0x....'....        DC32     RunVar+0x2C
   \      0x754   0x....'....        DC32     RunVar
   \                     ??MBASC_Fun10_57: (+1)
   \      0x758   0xE4DE             B        ??MBASC_Fun10_19
   \                     ??MBASC_Fun10_58: (+1)
   \      0x75A   0x1DE8             ADDS     R0,R5,#+7
   \      0x75C   0x....'....        BL       ArrayToUshort
   \      0x760   0x4669             MOV      R1,SP
   \      0x762   0x8148             STRH     R0,[R1, #+10]
   \      0x764   0x0028             MOVS     R0,R5
   \      0x766   0x3009             ADDS     R0,R0,#+9
   \      0x768   0x....'....        BL       ArrayToUshort
   \      0x76C   0x0007             MOVS     R7,R0
   \      0x76E   0x4668             MOV      R0,SP
   \      0x770   0x8940             LDRH     R0,[R0, #+10]
   \      0x772   0x2806             CMP      R0,#+6
   \      0x774   0xDA0E             BGE      ??MBASC_Fun10_87
   \      0x776   0x0038             MOVS     R0,R7
   \      0x778   0xB280             UXTH     R0,R0
   \      0x77A   0x2805             CMP      R0,#+5
   \      0x77C   0xDA0A             BGE      ??MBASC_Fun10_87
   \      0x77E   0x0038             MOVS     R0,R7
   \      0x780   0x4669             MOV      R1,SP
   \      0x782   0x8949             LDRH     R1,[R1, #+10]
   \      0x784   0xB280             UXTH     R0,R0
   \      0x786   0x4288             CMP      R0,R1
   \      0x788   0xD204             BCS      ??MBASC_Fun10_87
   \      0x78A   0x4668             MOV      R0,SP
   \      0x78C   0x8900             LDRH     R0,[R0, #+8]
   \      0x78E   0x1F80             SUBS     R0,R0,#+6
   \      0x790   0x2825             CMP      R0,#+37
   \      0x792   0xD303             BCC      ??MBASC_Fun10_88
   \                     ??MBASC_Fun10_87: (+1)
   \      0x794   0x2003             MOVS     R0,#+3
   \      0x796   0x....'....        BL       MBASC_SendErr
   \      0x79A   0xE0B3             B        ??MBASC_Fun10_16
   \                     ??MBASC_Fun10_88: (+1)
   \      0x79C   0x2400             MOVS     R4,#+0
   \      0x79E   0xE02A             B        ??MBASC_Fun10_89
   \                     ??MBASC_Fun10_90: (+1)
   \      0x7A0   0x....             LDR      R0,??DataTable7_6
   \      0x7A2   0x0039             MOVS     R1,R7
   \      0x7A4   0xB289             UXTH     R1,R1
   \      0x7A6   0x2228             MOVS     R2,#+40
   \      0x7A8   0x434A             MULS     R2,R1,R2
   \      0x7AA   0x1886             ADDS     R6,R0,R2
   \      0x7AC   0x0021             MOVS     R1,R4
   \      0x7AE   0xB2C9             UXTB     R1,R1
   \      0x7B0   0x2004             MOVS     R0,#+4
   \      0x7B2   0x4341             MULS     R1,R0,R1
   \      0x7B4   0x9100             STR      R1,[SP, #+0]
   \      0x7B6   0x0020             MOVS     R0,R4
   \      0x7B8   0xB2C0             UXTB     R0,R0
   \      0x7BA   0x2108             MOVS     R1,#+8
   \      0x7BC   0x4348             MULS     R0,R1,R0
   \      0x7BE   0x1828             ADDS     R0,R5,R0
   \      0x7C0   0x300B             ADDS     R0,R0,#+11
   \      0x7C2   0x....'....        BL       HexToUlong
   \      0x7C6   0x9900             LDR      R1,[SP, #+0]
   \      0x7C8   0x5070             STR      R0,[R6, R1]
   \      0x7CA   0x....             LDR      R0,??DataTable7_7
   \      0x7CC   0x0039             MOVS     R1,R7
   \      0x7CE   0xB289             UXTH     R1,R1
   \      0x7D0   0x2228             MOVS     R2,#+40
   \      0x7D2   0x434A             MULS     R2,R1,R2
   \      0x7D4   0x1886             ADDS     R6,R0,R2
   \      0x7D6   0x0021             MOVS     R1,R4
   \      0x7D8   0xB2C9             UXTB     R1,R1
   \      0x7DA   0x2004             MOVS     R0,#+4
   \      0x7DC   0x4341             MULS     R1,R0,R1
   \      0x7DE   0x9100             STR      R1,[SP, #+0]
   \      0x7E0   0x0020             MOVS     R0,R4
   \      0x7E2   0xB2C0             UXTB     R0,R0
   \      0x7E4   0x2108             MOVS     R1,#+8
   \      0x7E6   0x4348             MULS     R0,R1,R0
   \      0x7E8   0x1828             ADDS     R0,R5,R0
   \      0x7EA   0x300F             ADDS     R0,R0,#+15
   \      0x7EC   0x....'....        BL       HexToUlong
   \      0x7F0   0x9900             LDR      R1,[SP, #+0]
   \      0x7F2   0x5070             STR      R0,[R6, R1]
   \      0x7F4   0x1C64             ADDS     R4,R4,#+1
   \                     ??MBASC_Fun10_89: (+1)
   \      0x7F6   0x0020             MOVS     R0,R4
   \      0x7F8   0xB2C0             UXTB     R0,R0
   \      0x7FA   0x280A             CMP      R0,#+10
   \      0x7FC   0xDA32             BGE      ??MBASC_Fun10_91
   \      0x7FE   0x2600             MOVS     R6,#+0
   \      0x800   0x43F6             MVNS     R6,R6            ;; #-1
   \      0x802   0x0020             MOVS     R0,R4
   \      0x804   0xB2C0             UXTB     R0,R0
   \      0x806   0x2108             MOVS     R1,#+8
   \      0x808   0x4348             MULS     R0,R1,R0
   \      0x80A   0x1828             ADDS     R0,R5,R0
   \      0x80C   0x300B             ADDS     R0,R0,#+11
   \      0x80E   0x....'....        BL       HexToUlong
   \      0x812   0x42B0             CMP      R0,R6
   \      0x814   0xD009             BEQ      ??MBASC_Fun10_92
   \      0x816   0x0020             MOVS     R0,R4
   \      0x818   0xB2C0             UXTB     R0,R0
   \      0x81A   0x2108             MOVS     R1,#+8
   \      0x81C   0x4348             MULS     R0,R1,R0
   \      0x81E   0x1828             ADDS     R0,R5,R0
   \      0x820   0x300F             ADDS     R0,R0,#+15
   \      0x822   0x....'....        BL       HexToUlong
   \      0x826   0x42B0             CMP      R0,R6
   \      0x828   0xD1BA             BNE      ??MBASC_Fun10_90
   \                     ??MBASC_Fun10_92: (+1)
   \      0x82A   0x0020             MOVS     R0,R4
   \      0x82C   0xE016             B        ??MBASC_Fun10_93
   \                     ??MBASC_Fun10_94: (+1)
   \      0x82E   0x....             LDR      R1,??DataTable7_6
   \      0x830   0x003A             MOVS     R2,R7
   \      0x832   0xB292             UXTH     R2,R2
   \      0x834   0x2328             MOVS     R3,#+40
   \      0x836   0x4353             MULS     R3,R2,R3
   \      0x838   0x18C9             ADDS     R1,R1,R3
   \      0x83A   0x0003             MOVS     R3,R0
   \      0x83C   0xB2DB             UXTB     R3,R3
   \      0x83E   0x2204             MOVS     R2,#+4
   \      0x840   0x4353             MULS     R3,R2,R3
   \      0x842   0x50CE             STR      R6,[R1, R3]
   \      0x844   0x....             LDR      R1,??DataTable7_7
   \      0x846   0x003A             MOVS     R2,R7
   \      0x848   0xB292             UXTH     R2,R2
   \      0x84A   0x2328             MOVS     R3,#+40
   \      0x84C   0x4353             MULS     R3,R2,R3
   \      0x84E   0x18C9             ADDS     R1,R1,R3
   \      0x850   0x0003             MOVS     R3,R0
   \      0x852   0xB2DB             UXTB     R3,R3
   \      0x854   0x2204             MOVS     R2,#+4
   \      0x856   0x4353             MULS     R3,R2,R3
   \      0x858   0x50CE             STR      R6,[R1, R3]
   \      0x85A   0x1C40             ADDS     R0,R0,#+1
   \                     ??MBASC_Fun10_93: (+1)
   \      0x85C   0x0001             MOVS     R1,R0
   \      0x85E   0xB2C9             UXTB     R1,R1
   \      0x860   0x290A             CMP      R1,#+10
   \      0x862   0xDBE4             BLT      ??MBASC_Fun10_94
   \                     ??MBASC_Fun10_91: (+1)
   \      0x864   0x0038             MOVS     R0,R7
   \      0x866   0xB280             UXTH     R0,R0
   \      0x868   0x2800             CMP      R0,#+0
   \      0x86A   0xD10A             BNE      ??MBASC_Fun10_95
   \      0x86C   0xA901             ADD      R1,SP,#+4
   \      0x86E   0x4668             MOV      R0,SP
   \      0x870   0x8940             LDRH     R0,[R0, #+10]
   \      0x872   0x....'....        BL       UshortToArray
   \      0x876   0xAB01             ADD      R3,SP,#+4
   \      0x878   0x2202             MOVS     R2,#+2
   \      0x87A   0x....             LDR      R1,??DataTable7_8  ;; 0x43e
   \      0x87C   0x20A0             MOVS     R0,#+160
   \      0x87E   0x....'....        BL       I2C1_WriteNBytes
   \                     ??MBASC_Fun10_95: (+1)
   \      0x882   0x0022             MOVS     R2,R4
   \      0x884   0xB2D2             UXTB     R2,R2
   \      0x886   0x2008             MOVS     R0,#+8
   \      0x888   0x4342             MULS     R2,R0,R2
   \      0x88A   0x0029             MOVS     R1,R5
   \      0x88C   0x310B             ADDS     R1,R1,#+11
   \      0x88E   0xAE05             ADD      R6,SP,#+20
   \      0x890   0x0030             MOVS     R0,R6
   \      0x892   0x....'....        BL       __aeabi_memmove
   \      0x896   0x0020             MOVS     R0,R4
   \      0x898   0xB2C0             UXTB     R0,R0
   \      0x89A   0x280A             CMP      R0,#+10
   \      0x89C   0xDA0E             BGE      ??MBASC_Fun10_96
   \      0x89E   0x200A             MOVS     R0,#+10
   \      0x8A0   0x0021             MOVS     R1,R4
   \      0x8A2   0xB2C9             UXTB     R1,R1
   \      0x8A4   0x1A41             SUBS     R1,R0,R1
   \      0x8A6   0x2008             MOVS     R0,#+8
   \      0x8A8   0x4341             MULS     R1,R0,R1
   \      0x8AA   0x22FF             MOVS     R2,#+255
   \      0x8AC   0xA805             ADD      R0,SP,#+20
   \      0x8AE   0xB2E4             UXTB     R4,R4
   \      0x8B0   0x2308             MOVS     R3,#+8
   \      0x8B2   0x435C             MULS     R4,R3,R4
   \      0x8B4   0x1904             ADDS     R4,R0,R4
   \      0x8B6   0x0020             MOVS     R0,R4
   \      0x8B8   0x....'....        BL       __aeabi_memset
   \                     ??MBASC_Fun10_96: (+1)
   \      0x8BC   0xAB05             ADD      R3,SP,#+20
   \      0x8BE   0x2250             MOVS     R2,#+80
   \      0x8C0   0xB2BF             UXTH     R7,R7
   \      0x8C2   0x2050             MOVS     R0,#+80
   \      0x8C4   0x4378             MULS     R0,R7,R0
   \      0x8C6   0x2188             MOVS     R1,#+136
   \      0x8C8   0x00C9             LSLS     R1,R1,#+3        ;; #+1088
   \      0x8CA   0x1840             ADDS     R0,R0,R1
   \      0x8CC   0x0001             MOVS     R1,R0
   \      0x8CE   0xB289             UXTH     R1,R1
   \      0x8D0   0x20A0             MOVS     R0,#+160
   \      0x8D2   0x....'....        BL       I2C1_WriteNBytes
   \      0x8D6   0x210B             MOVS     R1,#+11
   \      0x8D8   0x0028             MOVS     R0,R5
   \      0x8DA   0x....'....        BL       MBASC_SendMsg
   \      0x8DE   0xE011             B        ??MBASC_Fun10_16
   1011                  }
   1012              }
   1013              ProductPara.bFlashWEn = FLASH_WR_DISABLE;
   \                     ??MBASC_Fun10_21: (+1)
   \      0x8E0   0x2400             MOVS     R4,#+0
   \      0x8E2   0x0020             MOVS     R0,R4
   \      0x8E4   0x9904             LDR      R1,[SP, #+16]
   \      0x8E6   0x7008             STRB     R0,[R1, #+0]
   1014          
   1015              MBASC_SendMsg(UART1_RXBuff, 6);
   \      0x8E8   0x2106             MOVS     R1,#+6
   \      0x8EA   0x0028             MOVS     R0,R5
   \      0x8EC   0x....'....        BL       MBASC_SendMsg
   1016              if(CommChangeFlag == Bit_SET)
   \      0x8F0   0xB2FF             UXTB     R7,R7
   \      0x8F2   0x2F01             CMP      R7,#+1
   \      0x8F4   0xD106             BNE      ??MBASC_Fun10_97
   1017              {   
   1018                  while(0 != u8SendNum);                                                  //等待串口数据发送完毕
   \                     ??MBASC_Fun10_98: (+1)
   \      0x8F6   0x....             LDR      R0,??DataTable7_9
   \      0x8F8   0x7800             LDRB     R0,[R0, #+0]
   \      0x8FA   0x2800             CMP      R0,#+0
   \      0x8FC   0xD1FB             BNE      ??MBASC_Fun10_98
   1019                  CommChangeFlag = Bit_RESET;
   1020                  UART1_Init(&UartComm);                                                  //初始化串口
   \      0x8FE   0x....             LDR      R0,??DataTable8
   \      0x900   0x....'....        BL       UART1_Init
   1021              }
   1022          }
   \                     ??MBASC_Fun10_97: (+1)
   \                     ??MBASC_Fun10_16: (+1)
   \      0x904   0xB019             ADD      SP,SP,#+100
   \      0x906   0xBDF0             POP      {R4-R7,PC}       ;; return
   1023          
   1024          

   \                                 In section .text, align 2, keep-with-next
   1025          void MBASC_Fun26(void)
   1026          {
   \                     MBASC_Fun26: (+1)
   \        0x0   0xB5FE             PUSH     {R1-R7,LR}
   1027              u32 i;
   1028              u32 Data_Buf;
   1029              u16 ReadAdr = 0;
   \        0x2   0x2400             MOVS     R4,#+0
   \        0x4   0x0020             MOVS     R0,R4
   1030              u16 Register_Num = 0;
   \        0x6   0x0020             MOVS     R0,R4
   1031          
   1032              Register_Num = (u16)UART1_RXBuff[4] * 256 + UART1_RXBuff[5];    
   \        0x8   0x2180             MOVS     R1,#+128
   \        0xA   0x0049             LSLS     R1,R1,#+1        ;; #+256
   \        0xC   0x....             LDR      R0,??DataTable8_1
   \        0xE   0x7902             LDRB     R2,[R0, #+4]
   \       0x10   0x434A             MULS     R2,R1,R2
   \       0x12   0x7943             LDRB     R3,[R0, #+5]
   \       0x14   0x18D2             ADDS     R2,R2,R3
   \       0x16   0x466B             MOV      R3,SP
   \       0x18   0x801A             STRH     R2,[R3, #+0]
   1033              if(UART1_RXBuff[2] - UartComm.SlaveAddr !=0) 
   \       0x1A   0x7882             LDRB     R2,[R0, #+2]
   \       0x1C   0x....             LDR      R3,??DataTable8
   \       0x1E   0x781B             LDRB     R3,[R3, #+0]
   \       0x20   0x1AD2             SUBS     R2,R2,R3
   \       0x22   0x2A00             CMP      R2,#+0
   \       0x24   0xD004             BEQ      ??MBASC_Fun26_0
   1034                  ReadAdr = (u16)UART1_RXBuff[2] * 256 + UART1_RXBuff[3];
   \       0x26   0x7882             LDRB     R2,[R0, #+2]
   \       0x28   0x434A             MULS     R2,R1,R2
   \       0x2A   0x78C1             LDRB     R1,[R0, #+3]
   \       0x2C   0x1855             ADDS     R5,R2,R1
   \       0x2E   0xE003             B        ??MBASC_Fun26_1
   1035              else
   1036                  ReadAdr = 0x71 * 256 + UART1_RXBuff[3];
   \                     ??MBASC_Fun26_0: (+1)
   \       0x30   0x78C1             LDRB     R1,[R0, #+3]
   \       0x32   0x22E2             MOVS     R2,#+226
   \       0x34   0x01D2             LSLS     R2,R2,#+7        ;; #+28928
   \       0x36   0x188D             ADDS     R5,R1,R2
   1037          
   1038              SendLen = 0;
   \                     ??MBASC_Fun26_1: (+1)
   \       0x38   0x....             LDR      R6,??DataTable8_2
   \       0x3A   0x0021             MOVS     R1,R4
   \       0x3C   0x7031             STRB     R1,[R6, #+0]
   1039              SendBuf[SendLen++] = (MBASC_GetSlaveAddr(UART1_RXBuff)) ? UartComm.SlaveAddr : 0x00;
   \       0x3E   0x7837             LDRB     R7,[R6, #+0]
   \       0x40   0x0039             MOVS     R1,R7
   \       0x42   0x1C49             ADDS     R1,R1,#+1
   \       0x44   0x7031             STRB     R1,[R6, #+0]
   \       0x46   0x....'....        BL       MBASC_GetSlaveAddr
   \       0x4A   0x2800             CMP      R0,#+0
   \       0x4C   0xD002             BEQ      ??MBASC_Fun26_2
   \       0x4E   0x....             LDR      R0,??DataTable8
   \       0x50   0x7801             LDRB     R1,[R0, #+0]
   \       0x52   0xE000             B        ??MBASC_Fun26_3
   \                     ??MBASC_Fun26_2: (+1)
   \       0x54   0x0021             MOVS     R1,R4
   \                     ??MBASC_Fun26_3: (+1)
   \       0x56   0x....             LDR      R0,??DataTable8_3
   \       0x58   0xB2FF             UXTB     R7,R7
   \       0x5A   0x55C1             STRB     R1,[R0, R7]
   1040              SendBuf[SendLen++] = 0x26;
   \       0x5C   0x2126             MOVS     R1,#+38
   \       0x5E   0x7832             LDRB     R2,[R6, #+0]
   \       0x60   0x5481             STRB     R1,[R0, R2]
   \       0x62   0x7831             LDRB     R1,[R6, #+0]
   \       0x64   0x1C49             ADDS     R1,R1,#+1
   \       0x66   0x7031             STRB     R1,[R6, #+0]
   1041              SendBuf[SendLen++] = Register_Num * 2;		
   \       0x68   0x4669             MOV      R1,SP
   \       0x6A   0x8809             LDRH     R1,[R1, #+0]
   \       0x6C   0x2202             MOVS     R2,#+2
   \       0x6E   0x4351             MULS     R1,R2,R1
   \       0x70   0x7832             LDRB     R2,[R6, #+0]
   \       0x72   0x5481             STRB     R1,[R0, R2]
   \       0x74   0x7831             LDRB     R1,[R6, #+0]
   \       0x76   0x1C49             ADDS     R1,R1,#+1
   \       0x78   0x7031             STRB     R1,[R6, #+0]
   1042              
   1043              if (!((((ReadAdr >= 0x7180) && (ReadAdr <= 0x718E) && (ReadAdr + Register_Num) <= (0x718E + 2))
   1044                 || ((ReadAdr >= 0x7190) && (ReadAdr <= 0x719E) && (ReadAdr + Register_Num) <= (0x719E + 2))
   1045                 || ((ReadAdr >= 0x71A0) && (ReadAdr <= 0x71AE) && (ReadAdr + Register_Num) <= (0x71AE + 2))
   1046                 || ((ReadAdr >= 0x71B0) && (ReadAdr <= 0x71BE) && (ReadAdr + Register_Num) <= (0x71BE + 2))
   1047                 || ((ReadAdr >= 0x71C0) && (ReadAdr <= 0x71CE) && (ReadAdr + Register_Num) <= (0x71CE + 2)))
   1048                 && ((0 != Register_Num) && (0 == (Register_Num & 0x01)) && (0 == (ReadAdr & 0x01)))))
   \       0x7A   0x0029             MOVS     R1,R5
   \       0x7C   0xB289             UXTH     R1,R1
   \       0x7E   0x22E3             MOVS     R2,#+227
   \       0x80   0x01D2             LSLS     R2,R2,#+7        ;; #+29056
   \       0x82   0x1A89             SUBS     R1,R1,R2
   \       0x84   0x290F             CMP      R1,#+15
   \       0x86   0xD207             BCS      ??MBASC_Fun26_4
   \       0x88   0x0029             MOVS     R1,R5
   \       0x8A   0xB289             UXTH     R1,R1
   \       0x8C   0x466A             MOV      R2,SP
   \       0x8E   0x8812             LDRH     R2,[R2, #+0]
   \       0x90   0x1889             ADDS     R1,R1,R2
   \       0x92   0x....             LDR      R2,??DataTable8_4  ;; 0x7191
   \       0x94   0x4291             CMP      R1,R2
   \       0x96   0xDB37             BLT      ??MBASC_Fun26_5
   \                     ??MBASC_Fun26_4: (+1)
   \       0x98   0x0029             MOVS     R1,R5
   \       0x9A   0xB289             UXTH     R1,R1
   \       0x9C   0x....             LDR      R2,??DataTable8_5  ;; 0x7190
   \       0x9E   0x1A89             SUBS     R1,R1,R2
   \       0xA0   0x290F             CMP      R1,#+15
   \       0xA2   0xD207             BCS      ??MBASC_Fun26_6
   \       0xA4   0x0029             MOVS     R1,R5
   \       0xA6   0xB289             UXTH     R1,R1
   \       0xA8   0x466A             MOV      R2,SP
   \       0xAA   0x8812             LDRH     R2,[R2, #+0]
   \       0xAC   0x1889             ADDS     R1,R1,R2
   \       0xAE   0x....             LDR      R2,??DataTable8_6  ;; 0x71a1
   \       0xB0   0x4291             CMP      R1,R2
   \       0xB2   0xDB29             BLT      ??MBASC_Fun26_5
   \                     ??MBASC_Fun26_6: (+1)
   \       0xB4   0x0029             MOVS     R1,R5
   \       0xB6   0xB289             UXTH     R1,R1
   \       0xB8   0x....             LDR      R2,??DataTable8_7  ;; 0x71a0
   \       0xBA   0x1A89             SUBS     R1,R1,R2
   \       0xBC   0x290F             CMP      R1,#+15
   \       0xBE   0xD207             BCS      ??MBASC_Fun26_7
   \       0xC0   0x0029             MOVS     R1,R5
   \       0xC2   0xB289             UXTH     R1,R1
   \       0xC4   0x466A             MOV      R2,SP
   \       0xC6   0x8812             LDRH     R2,[R2, #+0]
   \       0xC8   0x1889             ADDS     R1,R1,R2
   \       0xCA   0x....             LDR      R2,??DataTable8_8  ;; 0x71b1
   \       0xCC   0x4291             CMP      R1,R2
   \       0xCE   0xDB1B             BLT      ??MBASC_Fun26_5
   \                     ??MBASC_Fun26_7: (+1)
   \       0xD0   0x0029             MOVS     R1,R5
   \       0xD2   0xB289             UXTH     R1,R1
   \       0xD4   0x....             LDR      R2,??DataTable8_9  ;; 0x71b0
   \       0xD6   0x1A89             SUBS     R1,R1,R2
   \       0xD8   0x290F             CMP      R1,#+15
   \       0xDA   0xD207             BCS      ??MBASC_Fun26_8
   \       0xDC   0x0029             MOVS     R1,R5
   \       0xDE   0xB289             UXTH     R1,R1
   \       0xE0   0x466A             MOV      R2,SP
   \       0xE2   0x8812             LDRH     R2,[R2, #+0]
   \       0xE4   0x1889             ADDS     R1,R1,R2
   \       0xE6   0x....             LDR      R2,??DataTable8_10  ;; 0x71c1
   \       0xE8   0x4291             CMP      R1,R2
   \       0xEA   0xDB0D             BLT      ??MBASC_Fun26_5
   \                     ??MBASC_Fun26_8: (+1)
   \       0xEC   0x0029             MOVS     R1,R5
   \       0xEE   0xB289             UXTH     R1,R1
   \       0xF0   0x....             LDR      R2,??DataTable8_11  ;; 0x71c0
   \       0xF2   0x1A89             SUBS     R1,R1,R2
   \       0xF4   0x290F             CMP      R1,#+15
   \       0xF6   0xD218             BCS      ??MBASC_Fun26_9
   \       0xF8   0x0029             MOVS     R1,R5
   \       0xFA   0xB289             UXTH     R1,R1
   \       0xFC   0x466A             MOV      R2,SP
   \       0xFE   0x8812             LDRH     R2,[R2, #+0]
   \      0x100   0x1889             ADDS     R1,R1,R2
   \      0x102   0x....             LDR      R2,??DataTable8_12  ;; 0x71d1
   \      0x104   0x4291             CMP      R1,R2
   \      0x106   0xDA10             BGE      ??MBASC_Fun26_9
   \                     ??MBASC_Fun26_5: (+1)
   \      0x108   0x4669             MOV      R1,SP
   \      0x10A   0x8809             LDRH     R1,[R1, #+0]
   \      0x10C   0x2900             CMP      R1,#+0
   \      0x10E   0xD00C             BEQ      ??MBASC_Fun26_9
   \      0x110   0x4669             MOV      R1,SP
   \      0x112   0x8809             LDRH     R1,[R1, #+0]
   \      0x114   0x000A             MOVS     R2,R1
   \      0x116   0x07D2             LSLS     R2,R2,#+31       ;; ZeroExtS R2,R2,#+31,#+31
   \      0x118   0x0FD2             LSRS     R2,R2,#+31
   \      0x11A   0x0029             MOVS     R1,R5
   \      0x11C   0x000B             MOVS     R3,R1
   \      0x11E   0x07DB             LSLS     R3,R3,#+31       ;; ZeroExtS R3,R3,#+31,#+31
   \      0x120   0x0FDB             LSRS     R3,R3,#+31
   \      0x122   0x4313             ORRS     R3,R3,R2
   \      0x124   0xB2DB             UXTB     R3,R3
   \      0x126   0x2B00             CMP      R3,#+0
   \      0x128   0xD003             BEQ      ??MBASC_Fun26_10
   1049              {
   1050                  MBASC_SendErr(MB_EX_ILLEGAL_DATA_ADDRESS);
   \                     ??MBASC_Fun26_9: (+1)
   \      0x12A   0x2002             MOVS     R0,#+2
   \      0x12C   0x....'....        BL       MBASC_SendErr
   1051                  return;
   \      0x130   0xE08D             B        ??MBASC_Fun26_11
   1052              }
   1053              for (long k = 0; k < Register_Num; ReadAdr += 2, k += 2)
   \                     ??MBASC_Fun26_10: (+1)
   \      0x132   0x9401             STR      R4,[SP, #+4]
   \      0x134   0xE011             B        ??MBASC_Fun26_12
   1054              {
   1055                  switch (ReadAdr)
   1056                  {
   1057          
   1058                  case 0x7180:                                                            //出厂量程                                                
   1059                      Data_Buf = 0;
   1060                      break;
   1061          
   1062                  case 0x7182:                                                            //出厂零点AD                                                       
   1063                      Data_Buf = 0;
   1064                      break;
   1065          
   1066                  case 0x7184:                                                            //出厂满量程AD
   1067                      Data_Buf = 0;
   1068                      break;
   1069          
   1070                  case 0x7186:
   1071                      Data_Buf = 0;
   1072                      break;
   1073          
   1074                  case 0x7188:                                                            
   1075                      Data_Buf = 0;
   1076                      break;
   1077          
   1078                  case 0x718A:                                                            
   1079                      Data_Buf = 0;
   1080                      break;
   1081          
   1082                  case 0x718C:                                                           
   1083                      Data_Buf = 0;
   1084                      break;
   1085          
   1086                  case 0x718E:                                                            
   1087                      Data_Buf = 0;
   1088                      break;
   1089          
   1090                  case 0x7190:                                                            
   1091          
   1092                  case 0x7192:
   1093          
   1094                  case 0x7194:
   1095          
   1096                  case 0x7196:
   1097          
   1098                  case 0x7198:
   1099          
   1100                  case 0x719A:
   1101          
   1102                  case 0x719C:
   1103          
   1104                  case 0x719E:
   1105                      Data_Buf = 0;
   1106                      break;
   1107          
   1108                  case 0x71A0:                                                           
   1109          
   1110                  case 0x71A2:
   1111          
   1112                  case 0x71A4:
   1113          
   1114                  case 0x71A6:
   1115          
   1116                  case 0x71A8:
   1117          
   1118                  case 0x71AA:
   1119          
   1120                  case 0x71AC:
   1121          
   1122                  case 0x71AE:
   1123                      Data_Buf = 0;
   1124                      break;
   1125          
   1126                  case 0x71B0:                                                            
   1127          
   1128                  case 0x71B2:
   1129          
   1130                  case 0x71B4:
   1131          
   1132                  case 0x71B6:
   1133          
   1134                  case 0x71B8:
   1135          
   1136                  case 0x71BA:
   1137          
   1138                  case 0x71BC:
   1139          
   1140                  case 0x71BE:
   1141                      Data_Buf = 0;
   1142                      break;
   1143          
   1144                  case 0x71C0:                                                            
   1145          
   1146                  case 0x71C2:
   1147          
   1148                  case 0x71C4:
   1149          
   1150                  case 0x71C6:
   1151          
   1152                  case 0x71C8:
   1153          
   1154                  case 0x71CA:
   1155          
   1156                  case 0x71CC:
   1157          
   1158                  case 0x71CE:
   1159                      Data_Buf = 0;
   1160                      break;
   1161          
   1162                  default:
   1163                      MBASC_SendErr(MB_EX_ILLEGAL_DATA_ADDRESS);
   1164                      return;
   1165                  }
   1166          
   1167                  for (i = 4; i > 0; i--)
   1168                  {
   1169                      SendBuf[SendLen++] = (u8)(Data_Buf >> ((i - 1) * 8));
   \                     ??MBASC_Fun26_13: (+1)
   \      0x136   0x0013             MOVS     R3,R2
   \      0x138   0x1E5B             SUBS     R3,R3,#+1
   \      0x13A   0x2708             MOVS     R7,#+8
   \      0x13C   0x437B             MULS     R3,R7,R3
   \      0x13E   0x000F             MOVS     R7,R1
   \      0x140   0x40DF             LSRS     R7,R7,R3
   \      0x142   0x7833             LDRB     R3,[R6, #+0]
   \      0x144   0x54C7             STRB     R7,[R0, R3]
   \      0x146   0x7833             LDRB     R3,[R6, #+0]
   \      0x148   0x1C5B             ADDS     R3,R3,#+1
   \      0x14A   0x7033             STRB     R3,[R6, #+0]
   1170                  }
   \      0x14C   0x1E52             SUBS     R2,R2,#+1
   \                     ??MBASC_Fun26_14: (+1)
   \      0x14E   0x2A00             CMP      R2,#+0
   \      0x150   0xD1F1             BNE      ??MBASC_Fun26_13
   \      0x152   0x1CAD             ADDS     R5,R5,#+2
   \      0x154   0x9901             LDR      R1,[SP, #+4]
   \      0x156   0x1C89             ADDS     R1,R1,#+2
   \      0x158   0x9101             STR      R1,[SP, #+4]
   \                     ??MBASC_Fun26_12: (+1)
   \      0x15A   0x9901             LDR      R1,[SP, #+4]
   \      0x15C   0x466A             MOV      R2,SP
   \      0x15E   0x8812             LDRH     R2,[R2, #+0]
   \      0x160   0x4291             CMP      R1,R2
   \      0x162   0xDA71             BGE      ??MBASC_Fun26_15
   \      0x164   0x0029             MOVS     R1,R5
   \      0x166   0xB289             UXTH     R1,R1
   \      0x168   0x22E3             MOVS     R2,#+227
   \      0x16A   0x01D2             LSLS     R2,R2,#+7        ;; #+29056
   \      0x16C   0x1A89             SUBS     R1,R1,R2
   \      0x16E   0xD04E             BEQ      ??MBASC_Fun26_16
   \      0x170   0x1E89             SUBS     R1,R1,#+2
   \      0x172   0xD04E             BEQ      ??MBASC_Fun26_17
   \      0x174   0x1E89             SUBS     R1,R1,#+2
   \      0x176   0xD04E             BEQ      ??MBASC_Fun26_18
   \      0x178   0x1E89             SUBS     R1,R1,#+2
   \      0x17A   0xD04E             BEQ      ??MBASC_Fun26_19
   \      0x17C   0x1E89             SUBS     R1,R1,#+2
   \      0x17E   0xD04E             BEQ      ??MBASC_Fun26_20
   \      0x180   0x1E89             SUBS     R1,R1,#+2
   \      0x182   0xD04E             BEQ      ??MBASC_Fun26_21
   \      0x184   0x1E89             SUBS     R1,R1,#+2
   \      0x186   0xD04E             BEQ      ??MBASC_Fun26_22
   \      0x188   0x1E89             SUBS     R1,R1,#+2
   \      0x18A   0xD04E             BEQ      ??MBASC_Fun26_23
   \      0x18C   0x1E89             SUBS     R1,R1,#+2
   \      0x18E   0xD04E             BEQ      ??MBASC_Fun26_24
   \      0x190   0x1E89             SUBS     R1,R1,#+2
   \      0x192   0xD04C             BEQ      ??MBASC_Fun26_24
   \      0x194   0x1E89             SUBS     R1,R1,#+2
   \      0x196   0xD04A             BEQ      ??MBASC_Fun26_24
   \      0x198   0x1E89             SUBS     R1,R1,#+2
   \      0x19A   0xD048             BEQ      ??MBASC_Fun26_24
   \      0x19C   0x1E89             SUBS     R1,R1,#+2
   \      0x19E   0xD046             BEQ      ??MBASC_Fun26_24
   \      0x1A0   0x1E89             SUBS     R1,R1,#+2
   \      0x1A2   0xD044             BEQ      ??MBASC_Fun26_24
   \      0x1A4   0x1E89             SUBS     R1,R1,#+2
   \      0x1A6   0xD042             BEQ      ??MBASC_Fun26_24
   \      0x1A8   0x1E89             SUBS     R1,R1,#+2
   \      0x1AA   0xD040             BEQ      ??MBASC_Fun26_24
   \      0x1AC   0x1E89             SUBS     R1,R1,#+2
   \      0x1AE   0xD040             BEQ      ??MBASC_Fun26_25
   \      0x1B0   0x1E89             SUBS     R1,R1,#+2
   \      0x1B2   0xD03E             BEQ      ??MBASC_Fun26_25
   \      0x1B4   0x1E89             SUBS     R1,R1,#+2
   \      0x1B6   0xD03C             BEQ      ??MBASC_Fun26_25
   \      0x1B8   0x1E89             SUBS     R1,R1,#+2
   \      0x1BA   0xD03A             BEQ      ??MBASC_Fun26_25
   \      0x1BC   0x1E89             SUBS     R1,R1,#+2
   \      0x1BE   0xD038             BEQ      ??MBASC_Fun26_25
   \      0x1C0   0x1E89             SUBS     R1,R1,#+2
   \      0x1C2   0xD036             BEQ      ??MBASC_Fun26_25
   \      0x1C4   0x1E89             SUBS     R1,R1,#+2
   \      0x1C6   0xD034             BEQ      ??MBASC_Fun26_25
   \      0x1C8   0x1E89             SUBS     R1,R1,#+2
   \      0x1CA   0xD032             BEQ      ??MBASC_Fun26_25
   \      0x1CC   0x1E89             SUBS     R1,R1,#+2
   \      0x1CE   0xD032             BEQ      ??MBASC_Fun26_26
   \      0x1D0   0x1E89             SUBS     R1,R1,#+2
   \      0x1D2   0xD030             BEQ      ??MBASC_Fun26_26
   \      0x1D4   0x1E89             SUBS     R1,R1,#+2
   \      0x1D6   0xD02E             BEQ      ??MBASC_Fun26_26
   \      0x1D8   0x1E89             SUBS     R1,R1,#+2
   \      0x1DA   0xD02C             BEQ      ??MBASC_Fun26_26
   \      0x1DC   0x1E89             SUBS     R1,R1,#+2
   \      0x1DE   0xD02A             BEQ      ??MBASC_Fun26_26
   \      0x1E0   0x1E89             SUBS     R1,R1,#+2
   \      0x1E2   0xD028             BEQ      ??MBASC_Fun26_26
   \      0x1E4   0x1E89             SUBS     R1,R1,#+2
   \      0x1E6   0xD026             BEQ      ??MBASC_Fun26_26
   \      0x1E8   0x1E89             SUBS     R1,R1,#+2
   \      0x1EA   0xD024             BEQ      ??MBASC_Fun26_26
   \      0x1EC   0x1E89             SUBS     R1,R1,#+2
   \      0x1EE   0xD024             BEQ      ??MBASC_Fun26_27
   \      0x1F0   0x1E89             SUBS     R1,R1,#+2
   \      0x1F2   0xD022             BEQ      ??MBASC_Fun26_27
   \      0x1F4   0x1E89             SUBS     R1,R1,#+2
   \      0x1F6   0xD020             BEQ      ??MBASC_Fun26_27
   \      0x1F8   0x1E89             SUBS     R1,R1,#+2
   \      0x1FA   0xD01E             BEQ      ??MBASC_Fun26_27
   \      0x1FC   0x1E89             SUBS     R1,R1,#+2
   \      0x1FE   0xD01C             BEQ      ??MBASC_Fun26_27
   \      0x200   0x1E89             SUBS     R1,R1,#+2
   \      0x202   0xD01A             BEQ      ??MBASC_Fun26_27
   \      0x204   0x1E89             SUBS     R1,R1,#+2
   \      0x206   0xD018             BEQ      ??MBASC_Fun26_27
   \      0x208   0x1E89             SUBS     R1,R1,#+2
   \      0x20A   0xD016             BEQ      ??MBASC_Fun26_27
   \      0x20C   0xE018             B        ??MBASC_Fun26_28
   \                     ??MBASC_Fun26_16: (+1)
   \      0x20E   0x0021             MOVS     R1,R4
   \      0x210   0xE014             B        ??MBASC_Fun26_29
   \                     ??MBASC_Fun26_17: (+1)
   \      0x212   0x0021             MOVS     R1,R4
   \      0x214   0xE012             B        ??MBASC_Fun26_29
   \                     ??MBASC_Fun26_18: (+1)
   \      0x216   0x0021             MOVS     R1,R4
   \      0x218   0xE010             B        ??MBASC_Fun26_29
   \                     ??MBASC_Fun26_19: (+1)
   \      0x21A   0x0021             MOVS     R1,R4
   \      0x21C   0xE00E             B        ??MBASC_Fun26_29
   \                     ??MBASC_Fun26_20: (+1)
   \      0x21E   0x0021             MOVS     R1,R4
   \      0x220   0xE00C             B        ??MBASC_Fun26_29
   \                     ??MBASC_Fun26_21: (+1)
   \      0x222   0x0021             MOVS     R1,R4
   \      0x224   0xE00A             B        ??MBASC_Fun26_29
   \                     ??MBASC_Fun26_22: (+1)
   \      0x226   0x0021             MOVS     R1,R4
   \      0x228   0xE008             B        ??MBASC_Fun26_29
   \                     ??MBASC_Fun26_23: (+1)
   \      0x22A   0x0021             MOVS     R1,R4
   \      0x22C   0xE006             B        ??MBASC_Fun26_29
   \                     ??MBASC_Fun26_24: (+1)
   \      0x22E   0x0021             MOVS     R1,R4
   \      0x230   0xE004             B        ??MBASC_Fun26_29
   \                     ??MBASC_Fun26_25: (+1)
   \      0x232   0x0021             MOVS     R1,R4
   \      0x234   0xE002             B        ??MBASC_Fun26_29
   \                     ??MBASC_Fun26_26: (+1)
   \      0x236   0x0021             MOVS     R1,R4
   \      0x238   0xE000             B        ??MBASC_Fun26_29
   \                     ??MBASC_Fun26_27: (+1)
   \      0x23A   0x0021             MOVS     R1,R4
   \                     ??MBASC_Fun26_29: (+1)
   \      0x23C   0x2204             MOVS     R2,#+4
   \      0x23E   0xE786             B        ??MBASC_Fun26_14
   \                     ??MBASC_Fun26_28: (+1)
   \      0x240   0x2002             MOVS     R0,#+2
   \      0x242   0x....'....        BL       MBASC_SendErr
   \      0x246   0xE002             B        ??MBASC_Fun26_11
   1171              }
   1172          
   1173              MBASC_SendMsg(SendBuf, SendLen);
   \                     ??MBASC_Fun26_15: (+1)
   \      0x248   0x7831             LDRB     R1,[R6, #+0]
   \      0x24A   0x....'....        BL       MBASC_SendMsg
   1174          }
   \                     ??MBASC_Fun26_11: (+1)
   \      0x24E   0xBDF7             POP      {R0-R2,R4-R7,PC}  ;; return
   1175          
   1176          
   1177          

   \                                 In section .text, align 2, keep-with-next
   1178          void MBASC_Fun27(void)
   1179          {
   \                     MBASC_Fun27: (+1)
   \        0x0   0xB5F8             PUSH     {R3-R7,LR}
   1180              u32 index = 0;
   \        0x2   0x2400             MOVS     R4,#+0
   \        0x4   0x0025             MOVS     R5,R4
   1181          //  u8 bFlashWStatus = ProductPara.bFlashWEn;
   1182           
   1183              u16 ReadAdr = 0;
   \        0x6   0x0020             MOVS     R0,R4
   1184              u16 Register_Num = 0;
   \        0x8   0x0020             MOVS     R0,R4
   1185              ProductPara.bFlashWEn = FLASH_WR_ENABLE;
   \        0xA   0x2001             MOVS     R0,#+1
   \        0xC   0x....             LDR      R1,??DataTable9
   \        0xE   0x70C8             STRB     R0,[R1, #+3]
   1186              
   1187              Register_Num = (u16)UART1_RXBuff[4] * 256 + UART1_RXBuff[5];    
   \       0x10   0x2080             MOVS     R0,#+128
   \       0x12   0x0040             LSLS     R0,R0,#+1        ;; #+256
   \       0x14   0x....             LDR      R1,??DataTable9_1
   \       0x16   0x7909             LDRB     R1,[R1, #+4]
   \       0x18   0x4341             MULS     R1,R0,R1
   \       0x1A   0x....             LDR      R2,??DataTable9_1
   \       0x1C   0x7952             LDRB     R2,[R2, #+5]
   \       0x1E   0x188F             ADDS     R7,R1,R2
   1188              if(UART1_RXBuff[2] - UartComm.SlaveAddr !=0) 
   \       0x20   0x....             LDR      R1,??DataTable9_1
   \       0x22   0x7889             LDRB     R1,[R1, #+2]
   \       0x24   0x....             LDR      R2,??DataTable9_2
   \       0x26   0x7812             LDRB     R2,[R2, #+0]
   \       0x28   0x1A89             SUBS     R1,R1,R2
   \       0x2A   0x2900             CMP      R1,#+0
   \       0x2C   0xD005             BEQ      ??MBASC_Fun27_0
   1189                  ReadAdr = (u16)UART1_RXBuff[2] * 256 + UART1_RXBuff[3];
   \       0x2E   0x....             LDR      R1,??DataTable9_1
   \       0x30   0x788A             LDRB     R2,[R1, #+2]
   \       0x32   0x4342             MULS     R2,R0,R2
   \       0x34   0x78C8             LDRB     R0,[R1, #+3]
   \       0x36   0x1816             ADDS     R6,R2,R0
   \       0x38   0xE004             B        ??MBASC_Fun27_1
   1190              else
   1191                  ReadAdr = 0x71 * 256 + UART1_RXBuff[3]; 
   \                     ??MBASC_Fun27_0: (+1)
   \       0x3A   0x....             LDR      R0,??DataTable9_1
   \       0x3C   0x78C0             LDRB     R0,[R0, #+3]
   \       0x3E   0x21E2             MOVS     R1,#+226
   \       0x40   0x01C9             LSLS     R1,R1,#+7        ;; #+28928
   \       0x42   0x1846             ADDS     R6,R0,R1
   1192              
   1193              SendLen = 0;
   \                     ??MBASC_Fun27_1: (+1)
   \       0x44   0x0020             MOVS     R0,R4
   \       0x46   0x....             LDR      R1,??DataTable9_3
   \       0x48   0x7008             STRB     R0,[R1, #+0]
   1194              SendBuf[SendLen++] = (MBASC_GetSlaveAddr(UART1_RXBuff)) ? UartComm.SlaveAddr : 0x00;
   \       0x4A   0x....             LDR      R0,??DataTable9_3
   \       0x4C   0x7800             LDRB     R0,[R0, #+0]
   \       0x4E   0x4669             MOV      R1,SP
   \       0x50   0x7008             STRB     R0,[R1, #+0]
   \       0x52   0x4668             MOV      R0,SP
   \       0x54   0x7800             LDRB     R0,[R0, #+0]
   \       0x56   0x1C40             ADDS     R0,R0,#+1
   \       0x58   0x....             LDR      R1,??DataTable9_3
   \       0x5A   0x7008             STRB     R0,[R1, #+0]
   \       0x5C   0x....             LDR      R0,??DataTable9_1
   \       0x5E   0x....'....        BL       MBASC_GetSlaveAddr
   \       0x62   0x2800             CMP      R0,#+0
   \       0x64   0xD002             BEQ      ??MBASC_Fun27_2
   \       0x66   0x....             LDR      R0,??DataTable9_2
   \       0x68   0x7801             LDRB     R1,[R0, #+0]
   \       0x6A   0xE000             B        ??MBASC_Fun27_3
   \                     ??MBASC_Fun27_2: (+1)
   \       0x6C   0x0021             MOVS     R1,R4
   \                     ??MBASC_Fun27_3: (+1)
   \       0x6E   0x....             LDR      R0,??DataTable9_4
   \       0x70   0x466A             MOV      R2,SP
   \       0x72   0x7812             LDRB     R2,[R2, #+0]
   \       0x74   0x5481             STRB     R1,[R0, R2]
   1195              SendBuf[SendLen++] = 0x27;
   \       0x76   0x....             LDR      R1,??DataTable9_3
   \       0x78   0x2227             MOVS     R2,#+39
   \       0x7A   0x780B             LDRB     R3,[R1, #+0]
   \       0x7C   0x54C2             STRB     R2,[R0, R3]
   \       0x7E   0x780A             LDRB     R2,[R1, #+0]
   \       0x80   0x1C52             ADDS     R2,R2,#+1
   \       0x82   0x700A             STRB     R2,[R1, #+0]
   1196              SendBuf[SendLen++] = Register_Num * 2;
   \       0x84   0x003A             MOVS     R2,R7
   \       0x86   0x2302             MOVS     R3,#+2
   \       0x88   0x435A             MULS     R2,R3,R2
   \       0x8A   0x780B             LDRB     R3,[R1, #+0]
   \       0x8C   0x54C2             STRB     R2,[R0, R3]
   \       0x8E   0x7808             LDRB     R0,[R1, #+0]
   \       0x90   0x1C40             ADDS     R0,R0,#+1
   \       0x92   0x7008             STRB     R0,[R1, #+0]
   1197          
   1198              if ((0 != (Register_Num & 0x01)) || (0 == Register_Num) || (0 != (ReadAdr & 0x01))
   1199                      || ((Register_Num * 2) != UART1_RXBuff[6]))
   \       0x94   0x07F8             LSLS     R0,R7,#+31
   \       0x96   0xD40D             BMI      ??MBASC_Fun27_4
   \       0x98   0x0038             MOVS     R0,R7
   \       0x9A   0xB280             UXTH     R0,R0
   \       0x9C   0x2800             CMP      R0,#+0
   \       0x9E   0xD009             BEQ      ??MBASC_Fun27_4
   \       0xA0   0x07F0             LSLS     R0,R6,#+31
   \       0xA2   0xD407             BMI      ??MBASC_Fun27_4
   \       0xA4   0x....             LDR      R0,??DataTable9_1
   \       0xA6   0x0039             MOVS     R1,R7
   \       0xA8   0xB289             UXTH     R1,R1
   \       0xAA   0x2202             MOVS     R2,#+2
   \       0xAC   0x434A             MULS     R2,R1,R2
   \       0xAE   0x7981             LDRB     R1,[R0, #+6]
   \       0xB0   0x428A             CMP      R2,R1
   \       0xB2   0xD003             BEQ      ??MBASC_Fun27_5
   1200              {
   1201                  MBASC_SendErr(MB_EX_ILLEGAL_DATA_ADDRESS);
   \                     ??MBASC_Fun27_4: (+1)
   \       0xB4   0x2002             MOVS     R0,#+2
   \       0xB6   0x....'....        BL       MBASC_SendErr
   1202                  return;
   \       0xBA   0xE0E2             B        ??MBASC_Fun27_6
   1203              }
   1204              else if (!(((ReadAdr >= 0x7180) && (ReadAdr <= 0x718E) && (ReadAdr + Register_Num) <= (0x718E + 2))
   1205                     || ((ReadAdr >= 0x7190) && (ReadAdr <= 0x719E) && (ReadAdr + Register_Num) <= (0x719E + 2))
   1206                     || ((ReadAdr >= 0x71A0) && (ReadAdr <= 0x71AE) && (ReadAdr + Register_Num) <= (0x71AE + 2))
   1207                     || ((ReadAdr >= 0x71B0) && (ReadAdr <= 0x71BE) && (ReadAdr + Register_Num) <= (0x71BE + 2))
   1208                     || ((ReadAdr >= 0x71C0) && (ReadAdr <= 0x71CE) && (ReadAdr + Register_Num) <= (0x71CE + 2))))
   \                     ??MBASC_Fun27_5: (+1)
   \       0xBC   0x0031             MOVS     R1,R6
   \       0xBE   0xB289             UXTH     R1,R1
   \       0xC0   0x22E3             MOVS     R2,#+227
   \       0xC2   0x01D2             LSLS     R2,R2,#+7        ;; #+29056
   \       0xC4   0x1A89             SUBS     R1,R1,R2
   \       0xC6   0x290F             CMP      R1,#+15
   \       0xC8   0xD207             BCS      ??MBASC_Fun27_7
   \       0xCA   0x0031             MOVS     R1,R6
   \       0xCC   0xB289             UXTH     R1,R1
   \       0xCE   0x003A             MOVS     R2,R7
   \       0xD0   0xB292             UXTH     R2,R2
   \       0xD2   0x1889             ADDS     R1,R1,R2
   \       0xD4   0x....             LDR      R2,??DataTable9_5  ;; 0x7191
   \       0xD6   0x4291             CMP      R1,R2
   \       0xD8   0xDB3B             BLT      ??MBASC_Fun27_8
   \                     ??MBASC_Fun27_7: (+1)
   \       0xDA   0x0031             MOVS     R1,R6
   \       0xDC   0xB289             UXTH     R1,R1
   \       0xDE   0x....             LDR      R2,??DataTable9_6  ;; 0x7190
   \       0xE0   0x1A89             SUBS     R1,R1,R2
   \       0xE2   0x290F             CMP      R1,#+15
   \       0xE4   0xD207             BCS      ??MBASC_Fun27_9
   \       0xE6   0x0031             MOVS     R1,R6
   \       0xE8   0xB289             UXTH     R1,R1
   \       0xEA   0x003A             MOVS     R2,R7
   \       0xEC   0xB292             UXTH     R2,R2
   \       0xEE   0x1889             ADDS     R1,R1,R2
   \       0xF0   0x....             LDR      R2,??DataTable9_7  ;; 0x71a1
   \       0xF2   0x4291             CMP      R1,R2
   \       0xF4   0xDB2D             BLT      ??MBASC_Fun27_8
   \                     ??MBASC_Fun27_9: (+1)
   \       0xF6   0x0031             MOVS     R1,R6
   \       0xF8   0xB289             UXTH     R1,R1
   \       0xFA   0x....             LDR      R2,??DataTable9_8  ;; 0x71a0
   \       0xFC   0x1A89             SUBS     R1,R1,R2
   \       0xFE   0x290F             CMP      R1,#+15
   \      0x100   0xD207             BCS      ??MBASC_Fun27_10
   \      0x102   0x0031             MOVS     R1,R6
   \      0x104   0xB289             UXTH     R1,R1
   \      0x106   0x003A             MOVS     R2,R7
   \      0x108   0xB292             UXTH     R2,R2
   \      0x10A   0x1889             ADDS     R1,R1,R2
   \      0x10C   0x....             LDR      R2,??DataTable9_9  ;; 0x71b1
   \      0x10E   0x4291             CMP      R1,R2
   \      0x110   0xDB1F             BLT      ??MBASC_Fun27_8
   \                     ??MBASC_Fun27_10: (+1)
   \      0x112   0x0031             MOVS     R1,R6
   \      0x114   0xB289             UXTH     R1,R1
   \      0x116   0x....             LDR      R2,??DataTable9_10  ;; 0x71b0
   \      0x118   0x1A89             SUBS     R1,R1,R2
   \      0x11A   0x290F             CMP      R1,#+15
   \      0x11C   0xD207             BCS      ??MBASC_Fun27_11
   \      0x11E   0x0031             MOVS     R1,R6
   \      0x120   0xB289             UXTH     R1,R1
   \      0x122   0x003A             MOVS     R2,R7
   \      0x124   0xB292             UXTH     R2,R2
   \      0x126   0x1889             ADDS     R1,R1,R2
   \      0x128   0x....             LDR      R2,??DataTable9_11  ;; 0x71c1
   \      0x12A   0x4291             CMP      R1,R2
   \      0x12C   0xDB11             BLT      ??MBASC_Fun27_8
   \                     ??MBASC_Fun27_11: (+1)
   \      0x12E   0x0031             MOVS     R1,R6
   \      0x130   0xB289             UXTH     R1,R1
   \      0x132   0x....             LDR      R2,??DataTable9_12  ;; 0x71c0
   \      0x134   0x1A89             SUBS     R1,R1,R2
   \      0x136   0x290F             CMP      R1,#+15
   \      0x138   0xD207             BCS      ??MBASC_Fun27_12
   \      0x13A   0x0031             MOVS     R1,R6
   \      0x13C   0xB289             UXTH     R1,R1
   \      0x13E   0x003A             MOVS     R2,R7
   \      0x140   0xB292             UXTH     R2,R2
   \      0x142   0x1889             ADDS     R1,R1,R2
   \      0x144   0x....             LDR      R2,??DataTable9_13  ;; 0x71d1
   \      0x146   0x4291             CMP      R1,R2
   \      0x148   0xDB03             BLT      ??MBASC_Fun27_8
   1209              {
   1210                  MBASC_SendErr(MB_EX_ILLEGAL_DATA_ADDRESS);
   \                     ??MBASC_Fun27_12: (+1)
   \      0x14A   0x2002             MOVS     R0,#+2
   \      0x14C   0x....'....        BL       MBASC_SendErr
   1211                  return;
   \      0x150   0xE097             B        ??MBASC_Fun27_6
   1212              }
   1213          
   1214              if ((ProductPara.bFlashWEn == FLASH_WR_DISABLE) &&
   1215          	!(((ReadAdr >= 0x7190) && (ReadAdr <= 0x719E) )
   1216                  || ((ReadAdr >= 0x71A0) && (ReadAdr <= 0x71AE) )
   1217                  || ((ReadAdr >= 0x71B0) && (ReadAdr <= 0x71BE) )
   1218                  || ((ReadAdr >= 0x71C0) && (ReadAdr <= 0x71CE) )))
   \                     ??MBASC_Fun27_8: (+1)
   \      0x152   0x....             LDR      R1,??DataTable9
   \      0x154   0x78C9             LDRB     R1,[R1, #+3]
   \      0x156   0x2900             CMP      R1,#+0
   \      0x158   0xD11B             BNE      ??MBASC_Fun27_13
   \      0x15A   0x0031             MOVS     R1,R6
   \      0x15C   0xB289             UXTH     R1,R1
   \      0x15E   0x....             LDR      R2,??DataTable9_6  ;; 0x7190
   \      0x160   0x1A89             SUBS     R1,R1,R2
   \      0x162   0x290F             CMP      R1,#+15
   \      0x164   0xD315             BCC      ??MBASC_Fun27_13
   \      0x166   0x0031             MOVS     R1,R6
   \      0x168   0xB289             UXTH     R1,R1
   \      0x16A   0x....             LDR      R2,??DataTable9_8  ;; 0x71a0
   \      0x16C   0x1A89             SUBS     R1,R1,R2
   \      0x16E   0x290F             CMP      R1,#+15
   \      0x170   0xD30F             BCC      ??MBASC_Fun27_13
   \      0x172   0x0031             MOVS     R1,R6
   \      0x174   0xB289             UXTH     R1,R1
   \      0x176   0x....             LDR      R2,??DataTable9_10  ;; 0x71b0
   \      0x178   0x1A89             SUBS     R1,R1,R2
   \      0x17A   0x290F             CMP      R1,#+15
   \      0x17C   0xD309             BCC      ??MBASC_Fun27_13
   \      0x17E   0x0031             MOVS     R1,R6
   \      0x180   0xB289             UXTH     R1,R1
   \      0x182   0x....             LDR      R2,??DataTable9_12  ;; 0x71c0
   \      0x184   0x1A89             SUBS     R1,R1,R2
   \      0x186   0x290F             CMP      R1,#+15
   \      0x188   0xD303             BCC      ??MBASC_Fun27_13
   1219              {
   1220                  MBASC_SendErr(MB_EX_SLAVE_DEVICE_FAILURE);
   \      0x18A   0x2004             MOVS     R0,#+4
   \      0x18C   0x....'....        BL       MBASC_SendErr
   1221                  return;
   \      0x190   0xE077             B        ??MBASC_Fun27_6
   1222              }
   1223          
   1224              for (long k = 0; k < Register_Num; ReadAdr += 2, k += 2)
   \                     ??MBASC_Fun27_13: (+1)
   \      0x192   0xE004             B        ??MBASC_Fun27_14
   1225              {
   1226                  switch (ReadAdr)
   1227                  {
   1228          
   1229                  case 0x7180:                                                            
   1230                      index += 4;
   1231                      break;
   1232          
   1233                  case 0x7182:                                                           
   1234                      index += 4;
   1235                      break;
   1236          
   1237                  case 0x7184:
   1238                      index += 4;
   1239                      break;
   1240          
   1241                  case 0x7186:
   1242                      index += 4;
   1243                      break;
   1244          
   1245                  case 0x7188:                                                            
   1246                      index += 4;
   1247                      break;
   1248          
   1249                  case 0x718A:                                                            
   1250                      index += 4;
   1251                      break;
   1252          
   1253                  case 0x718C:                                                            
   1254                      index += 4;
   1255                      break;
   1256          
   1257                  case 0x718E:                                                            
   1258                      index += 4;
   1259                      break;
   1260          
   1261                  case 0x7190:                                                            
   1262          
   1263                  case 0x7192:
   1264          
   1265                  case 0x7194:
   1266          
   1267                  case 0x7196:
   1268          
   1269                  case 0x7198:
   1270          
   1271                  case 0x719A:
   1272          
   1273                  case 0x719C:
   1274          
   1275                  case 0x719E:
   1276                      index += 4;
   1277                      break;
   1278          
   1279                  case 0x71A0:                                                            
   1280          
   1281                  case 0x71A2:
   1282          
   1283                  case 0x71A4:
   1284          
   1285                  case 0x71A6:
   1286          
   1287                  case 0x71A8:
   1288          
   1289                  case 0x71AA:
   1290          
   1291                  case 0x71AC:
   1292          
   1293                  case 0x71AE:
   1294                      index += 4;
   1295                      break;
   1296          
   1297                  case 0x71B0:                                                            
   1298          
   1299                  case 0x71B2:
   1300          
   1301                  case 0x71B4:
   1302          
   1303                  case 0x71B6:
   1304          
   1305                  case 0x71B8:
   1306          
   1307                  case 0x71BA:
   1308          
   1309                  case 0x71BC:
   1310          
   1311                  case 0x71BE:
   1312                      index += 4;
   1313                      break;
   1314          
   1315                  case 0x71C0:                                                            
   1316          
   1317                  case 0x71C2:
   1318          
   1319                  case 0x71C4:
   1320          
   1321                  case 0x71C6:
   1322          
   1323                  case 0x71C8:
   1324          
   1325                  case 0x71CA:
   1326          
   1327                  case 0x71CC:
   1328          
   1329                  case 0x71CE:
   1330                      index += 4;
   1331                      break;
   1332          
   1333                  default:
   1334                      index += 4;
   \                     ??MBASC_Fun27_15: (+1)
   \      0x194   0x1D2D             ADDS     R5,R5,#+4
   1335                      break;
   \      0x196   0xE000             B        ??MBASC_Fun27_16
   \                     ??MBASC_Fun27_17: (+1)
   \      0x198   0x1D2D             ADDS     R5,R5,#+4
   \                     ??MBASC_Fun27_16: (+1)
   \      0x19A   0x1CB6             ADDS     R6,R6,#+2
   \      0x19C   0x1CA4             ADDS     R4,R4,#+2
   \                     ??MBASC_Fun27_14: (+1)
   \      0x19E   0x0039             MOVS     R1,R7
   \      0x1A0   0xB289             UXTH     R1,R1
   \      0x1A2   0x428C             CMP      R4,R1
   \      0x1A4   0xDA6A             BGE      ??MBASC_Fun27_18
   \      0x1A6   0x0031             MOVS     R1,R6
   \      0x1A8   0xB289             UXTH     R1,R1
   \      0x1AA   0x22E3             MOVS     R2,#+227
   \      0x1AC   0x01D2             LSLS     R2,R2,#+7        ;; #+29056
   \      0x1AE   0x1A89             SUBS     R1,R1,R2
   \      0x1B0   0xD04E             BEQ      ??MBASC_Fun27_19
   \      0x1B2   0x1E89             SUBS     R1,R1,#+2
   \      0x1B4   0xD04E             BEQ      ??MBASC_Fun27_20
   \      0x1B6   0x1E89             SUBS     R1,R1,#+2
   \      0x1B8   0xD04E             BEQ      ??MBASC_Fun27_21
   \      0x1BA   0x1E89             SUBS     R1,R1,#+2
   \      0x1BC   0xD04E             BEQ      ??MBASC_Fun27_22
   \      0x1BE   0x1E89             SUBS     R1,R1,#+2
   \      0x1C0   0xD04E             BEQ      ??MBASC_Fun27_23
   \      0x1C2   0x1E89             SUBS     R1,R1,#+2
   \      0x1C4   0xD04E             BEQ      ??MBASC_Fun27_24
   \      0x1C6   0x1E89             SUBS     R1,R1,#+2
   \      0x1C8   0xD04E             BEQ      ??MBASC_Fun27_25
   \      0x1CA   0x1E89             SUBS     R1,R1,#+2
   \      0x1CC   0xD04E             BEQ      ??MBASC_Fun27_26
   \      0x1CE   0x1E89             SUBS     R1,R1,#+2
   \      0x1D0   0xD04E             BEQ      ??MBASC_Fun27_27
   \      0x1D2   0x1E89             SUBS     R1,R1,#+2
   \      0x1D4   0xD04C             BEQ      ??MBASC_Fun27_27
   \      0x1D6   0x1E89             SUBS     R1,R1,#+2
   \      0x1D8   0xD04A             BEQ      ??MBASC_Fun27_27
   \      0x1DA   0x1E89             SUBS     R1,R1,#+2
   \      0x1DC   0xD048             BEQ      ??MBASC_Fun27_27
   \      0x1DE   0x1E89             SUBS     R1,R1,#+2
   \      0x1E0   0xD046             BEQ      ??MBASC_Fun27_27
   \      0x1E2   0x1E89             SUBS     R1,R1,#+2
   \      0x1E4   0xD044             BEQ      ??MBASC_Fun27_27
   \      0x1E6   0x1E89             SUBS     R1,R1,#+2
   \      0x1E8   0xD042             BEQ      ??MBASC_Fun27_27
   \      0x1EA   0x1E89             SUBS     R1,R1,#+2
   \      0x1EC   0xD040             BEQ      ??MBASC_Fun27_27
   \      0x1EE   0x1E89             SUBS     R1,R1,#+2
   \      0x1F0   0xD040             BEQ      ??MBASC_Fun27_28
   \      0x1F2   0x1E89             SUBS     R1,R1,#+2
   \      0x1F4   0xD03E             BEQ      ??MBASC_Fun27_28
   \      0x1F6   0x1E89             SUBS     R1,R1,#+2
   \      0x1F8   0xD03C             BEQ      ??MBASC_Fun27_28
   \      0x1FA   0x1E89             SUBS     R1,R1,#+2
   \      0x1FC   0xD03A             BEQ      ??MBASC_Fun27_28
   \      0x1FE   0x1E89             SUBS     R1,R1,#+2
   \      0x200   0xD038             BEQ      ??MBASC_Fun27_28
   \      0x202   0x1E89             SUBS     R1,R1,#+2
   \      0x204   0xD036             BEQ      ??MBASC_Fun27_28
   \      0x206   0x1E89             SUBS     R1,R1,#+2
   \      0x208   0xD034             BEQ      ??MBASC_Fun27_28
   \      0x20A   0x1E89             SUBS     R1,R1,#+2
   \      0x20C   0xD032             BEQ      ??MBASC_Fun27_28
   \      0x20E   0x1E89             SUBS     R1,R1,#+2
   \      0x210   0xD032             BEQ      ??MBASC_Fun27_29
   \      0x212   0x1E89             SUBS     R1,R1,#+2
   \      0x214   0xD030             BEQ      ??MBASC_Fun27_29
   \      0x216   0x1E89             SUBS     R1,R1,#+2
   \      0x218   0xD02E             BEQ      ??MBASC_Fun27_29
   \      0x21A   0x1E89             SUBS     R1,R1,#+2
   \      0x21C   0xD02C             BEQ      ??MBASC_Fun27_29
   \      0x21E   0x1E89             SUBS     R1,R1,#+2
   \      0x220   0xD02A             BEQ      ??MBASC_Fun27_29
   \      0x222   0x1E89             SUBS     R1,R1,#+2
   \      0x224   0xD028             BEQ      ??MBASC_Fun27_29
   \      0x226   0x1E89             SUBS     R1,R1,#+2
   \      0x228   0xD026             BEQ      ??MBASC_Fun27_29
   \      0x22A   0x1E89             SUBS     R1,R1,#+2
   \      0x22C   0xD024             BEQ      ??MBASC_Fun27_29
   \      0x22E   0x1E89             SUBS     R1,R1,#+2
   \      0x230   0xD0B2             BEQ      ??MBASC_Fun27_17
   \      0x232   0x1E89             SUBS     R1,R1,#+2
   \      0x234   0xD0B0             BEQ      ??MBASC_Fun27_17
   \      0x236   0x1E89             SUBS     R1,R1,#+2
   \      0x238   0xD0AE             BEQ      ??MBASC_Fun27_17
   \      0x23A   0x1E89             SUBS     R1,R1,#+2
   \      0x23C   0xD0AC             BEQ      ??MBASC_Fun27_17
   \      0x23E   0x1E89             SUBS     R1,R1,#+2
   \      0x240   0xD0AA             BEQ      ??MBASC_Fun27_17
   \      0x242   0x1E89             SUBS     R1,R1,#+2
   \      0x244   0xD0A8             BEQ      ??MBASC_Fun27_17
   \      0x246   0x1E89             SUBS     R1,R1,#+2
   \      0x248   0xD0A6             BEQ      ??MBASC_Fun27_17
   \      0x24A   0x1E89             SUBS     R1,R1,#+2
   \      0x24C   0xD0A4             BEQ      ??MBASC_Fun27_17
   \      0x24E   0xE7A1             B        ??MBASC_Fun27_15
   \                     ??MBASC_Fun27_19: (+1)
   \      0x250   0x1D2D             ADDS     R5,R5,#+4
   \      0x252   0xE7A2             B        ??MBASC_Fun27_16
   \                     ??MBASC_Fun27_20: (+1)
   \      0x254   0x1D2D             ADDS     R5,R5,#+4
   \      0x256   0xE7A0             B        ??MBASC_Fun27_16
   \                     ??MBASC_Fun27_21: (+1)
   \      0x258   0x1D2D             ADDS     R5,R5,#+4
   \      0x25A   0xE79E             B        ??MBASC_Fun27_16
   \                     ??MBASC_Fun27_22: (+1)
   \      0x25C   0x1D2D             ADDS     R5,R5,#+4
   \      0x25E   0xE79C             B        ??MBASC_Fun27_16
   \                     ??MBASC_Fun27_23: (+1)
   \      0x260   0x1D2D             ADDS     R5,R5,#+4
   \      0x262   0xE79A             B        ??MBASC_Fun27_16
   \                     ??MBASC_Fun27_24: (+1)
   \      0x264   0x1D2D             ADDS     R5,R5,#+4
   \      0x266   0xE798             B        ??MBASC_Fun27_16
   \                     ??MBASC_Fun27_25: (+1)
   \      0x268   0x1D2D             ADDS     R5,R5,#+4
   \      0x26A   0xE796             B        ??MBASC_Fun27_16
   \                     ??MBASC_Fun27_26: (+1)
   \      0x26C   0x1D2D             ADDS     R5,R5,#+4
   \      0x26E   0xE794             B        ??MBASC_Fun27_16
   \                     ??MBASC_Fun27_27: (+1)
   \      0x270   0x1D2D             ADDS     R5,R5,#+4
   \      0x272   0xE792             B        ??MBASC_Fun27_16
   \                     ??MBASC_Fun27_28: (+1)
   \      0x274   0x1D2D             ADDS     R5,R5,#+4
   \      0x276   0xE790             B        ??MBASC_Fun27_16
   \                     ??MBASC_Fun27_29: (+1)
   \      0x278   0x1D2D             ADDS     R5,R5,#+4
   \      0x27A   0xE78E             B        ??MBASC_Fun27_16
   1336                  }
   1337              }
   1338              MBASC_SendMsg(UART1_RXBuff, 6);
   \                     ??MBASC_Fun27_18: (+1)
   \      0x27C   0x2106             MOVS     R1,#+6
   \      0x27E   0x....'....        BL       MBASC_SendMsg
   1339          }
   \                     ??MBASC_Fun27_6: (+1)
   \      0x282   0xBDF1             POP      {R0,R4-R7,PC}    ;; return
   1340          
   1341          
   1342          
   1343          //**************************************************************************************************
   1344          // 名称         : MBASC_Fun2A()
   1345          // 创建日期     : 2016-09-19
   1346          // 作者         : 梅梦醒
   1347          // 功能         : 用于设置公司名称、产品代码、版本号、设备ID、客户代码
   1348          // 输入参数     : 无
   1349          // 输出参数     : 无
   1350          // 返回结果     : 无
   1351          // 注意和说明   : 注意：当5个对象一起赋值时数据量很大，所以接收缓冲区要足够大
   1352          // 修改内容     :
   1353          //**************************************************************************************************

   \                                 In section .text, align 2, keep-with-next
   1354          void MBASC_Fun2A(void)
   1355          {                                                      
   \                     MBASC_Fun2A: (+1)
   \        0x0   0xB5F0             PUSH     {R4-R7,LR}
   \        0x2   0xB087             SUB      SP,SP,#+28
   1356              u32 index = 0;
   \        0x4   0x2400             MOVS     R4,#+0
   \        0x6   0x2506             MOVS     R5,#+6
   \        0x8   0x0029             MOVS     R1,R5
   \        0xA   0x2000             MOVS     R0,#+0
   \        0xC   0x9000             STR      R0,[SP, #+0]
   \        0xE   0xAE05             ADD      R6,SP,#+20
   \       0x10   0x9A00             LDR      R2,[SP, #+0]
   \       0x12   0x0030             MOVS     R0,R6
   \       0x14   0x....'....        BL       __aeabi_memset
   \       0x18   0x2105             MOVS     R1,#+5
   \       0x1A   0x2000             MOVS     R0,#+0
   \       0x1C   0x9000             STR      R0,[SP, #+0]
   \       0x1E   0xAE01             ADD      R6,SP,#+4
   \       0x20   0x9A00             LDR      R2,[SP, #+0]
   \       0x22   0x0030             MOVS     R0,R6
   \       0x24   0x....'....        BL       __aeabi_memset
   \       0x28   0x0029             MOVS     R1,R5
   \       0x2A   0x2000             MOVS     R0,#+0
   \       0x2C   0x9000             STR      R0,[SP, #+0]
   \       0x2E   0xAD03             ADD      R5,SP,#+12
   \       0x30   0x9A00             LDR      R2,[SP, #+0]
   \       0x32   0x0028             MOVS     R0,R5
   \       0x34   0x....'....        BL       __aeabi_memset
   1357              u8 Object_Len[6]={0};                                                       
   1358              u8 Len[5]={0};
   1359              u8 Length[6] = {0}; 
   1360          
   1361              u16 ReadAdr = 0;
   \       0x38   0x2000             MOVS     R0,#+0
   1362              u16 Object_Num = 0;
   \       0x3A   0x2000             MOVS     R0,#+0
   1363              
   1364              if(UartComm.SlaveAddr != UART1_RXBuff[2])                                   //当从机地址改为非0x45时，也可以读写寄存器
   \       0x3C   0x....             LDR      R5,??DataTable10
   \       0x3E   0x....             LDR      R0,??DataTable10_1
   \       0x40   0x7800             LDRB     R0,[R0, #+0]
   \       0x42   0x78A9             LDRB     R1,[R5, #+2]
   \       0x44   0x4288             CMP      R0,R1
   \       0x46   0xD006             BEQ      ??MBASC_Fun2A_0
   1365              {
   1366                  ReadAdr = UART1_RXBuff[2] * 256 + UART1_RXBuff[3];
   \       0x48   0x78A8             LDRB     R0,[R5, #+2]
   \       0x4A   0x2180             MOVS     R1,#+128
   \       0x4C   0x0049             LSLS     R1,R1,#+1        ;; #+256
   \       0x4E   0x4348             MULS     R0,R1,R0
   \       0x50   0x78E9             LDRB     R1,[R5, #+3]
   \       0x52   0x1847             ADDS     R7,R0,R1
   \       0x54   0xE003             B        ??MBASC_Fun2A_1
   1367              }
   1368              else
   1369              {
   1370                  ReadAdr = 0x71 * 256 + UART1_RXBuff[3];
   \                     ??MBASC_Fun2A_0: (+1)
   \       0x56   0x78E8             LDRB     R0,[R5, #+3]
   \       0x58   0x21E2             MOVS     R1,#+226
   \       0x5A   0x01C9             LSLS     R1,R1,#+7        ;; #+28928
   \       0x5C   0x1847             ADDS     R7,R0,R1
   1371              }
   1372              Object_Num = UART1_RXBuff[4] * 256 + UART1_RXBuff[5];                       //写对象个数
   \                     ??MBASC_Fun2A_1: (+1)
   \       0x5E   0x7928             LDRB     R0,[R5, #+4]
   \       0x60   0x2180             MOVS     R1,#+128
   \       0x62   0x0049             LSLS     R1,R1,#+1        ;; #+256
   \       0x64   0x4348             MULS     R0,R1,R0
   \       0x66   0x7969             LDRB     R1,[R5, #+5]
   \       0x68   0x1840             ADDS     R0,R0,R1
   \       0x6A   0x4669             MOV      R1,SP
   \       0x6C   0x8048             STRH     R0,[R1, #+2]
   1373          
   1374              SendLen = 0;
   \       0x6E   0x2000             MOVS     R0,#+0
   \       0x70   0x....             LDR      R1,??DataTable10_2
   \       0x72   0x7008             STRB     R0,[R1, #+0]
   1375              SendBuf[SendLen++] = (MBASC_GetSlaveAddr(UART1_RXBuff)) ? UartComm.SlaveAddr : 0x00;
   \       0x74   0x....             LDR      R0,??DataTable10_2
   \       0x76   0x7806             LDRB     R6,[R0, #+0]
   \       0x78   0x0030             MOVS     R0,R6
   \       0x7A   0x1C40             ADDS     R0,R0,#+1
   \       0x7C   0x....             LDR      R1,??DataTable10_2
   \       0x7E   0x7008             STRB     R0,[R1, #+0]
   \       0x80   0x0028             MOVS     R0,R5
   \       0x82   0x....'....        BL       MBASC_GetSlaveAddr
   \       0x86   0x2800             CMP      R0,#+0
   \       0x88   0xD002             BEQ      ??MBASC_Fun2A_2
   \       0x8A   0x....             LDR      R0,??DataTable10_1
   \       0x8C   0x7801             LDRB     R1,[R0, #+0]
   \       0x8E   0xE000             B        ??MBASC_Fun2A_3
   \                     ??MBASC_Fun2A_2: (+1)
   \       0x90   0x2100             MOVS     R1,#+0
   \                     ??MBASC_Fun2A_3: (+1)
   \       0x92   0x....             LDR      R0,??DataTable10_3
   \       0x94   0xB2F6             UXTB     R6,R6
   \       0x96   0x5581             STRB     R1,[R0, R6]
   1376              SendBuf[SendLen++] = 0x2A;
   \       0x98   0x212A             MOVS     R1,#+42
   \       0x9A   0x....             LDR      R2,??DataTable10_2
   \       0x9C   0x7812             LDRB     R2,[R2, #+0]
   \       0x9E   0x5481             STRB     R1,[R0, R2]
   \       0xA0   0x....             LDR      R1,??DataTable10_2
   \       0xA2   0x7809             LDRB     R1,[R1, #+0]
   \       0xA4   0x1C49             ADDS     R1,R1,#+1
   \       0xA6   0x....             LDR      R2,??DataTable10_2
   \       0xA8   0x7011             STRB     R1,[R2, #+0]
   1377              SendBuf[SendLen++] = UART1_RXBuff[2];
   \       0xAA   0x78A9             LDRB     R1,[R5, #+2]
   \       0xAC   0x....             LDR      R2,??DataTable10_2
   \       0xAE   0x7812             LDRB     R2,[R2, #+0]
   \       0xB0   0x5481             STRB     R1,[R0, R2]
   \       0xB2   0x....             LDR      R1,??DataTable10_2
   \       0xB4   0x7809             LDRB     R1,[R1, #+0]
   \       0xB6   0x1C49             ADDS     R1,R1,#+1
   \       0xB8   0x....             LDR      R2,??DataTable10_2
   \       0xBA   0x7011             STRB     R1,[R2, #+0]
   1378              SendBuf[SendLen++] = UART1_RXBuff[3];
   \       0xBC   0x78E9             LDRB     R1,[R5, #+3]
   \       0xBE   0x....             LDR      R2,??DataTable10_2
   \       0xC0   0x7812             LDRB     R2,[R2, #+0]
   \       0xC2   0x5481             STRB     R1,[R0, R2]
   \       0xC4   0x....             LDR      R1,??DataTable10_2
   \       0xC6   0x7809             LDRB     R1,[R1, #+0]
   \       0xC8   0x1C49             ADDS     R1,R1,#+1
   \       0xCA   0x....             LDR      R2,??DataTable10_2
   \       0xCC   0x7011             STRB     R1,[R2, #+0]
   1379              SendBuf[SendLen++] = UART1_RXBuff[4];
   \       0xCE   0x7929             LDRB     R1,[R5, #+4]
   \       0xD0   0x....             LDR      R2,??DataTable10_2
   \       0xD2   0x7812             LDRB     R2,[R2, #+0]
   \       0xD4   0x5481             STRB     R1,[R0, R2]
   \       0xD6   0x....             LDR      R1,??DataTable10_2
   \       0xD8   0x7809             LDRB     R1,[R1, #+0]
   \       0xDA   0x1C49             ADDS     R1,R1,#+1
   \       0xDC   0x....             LDR      R2,??DataTable10_2
   \       0xDE   0x7011             STRB     R1,[R2, #+0]
   1380              SendBuf[SendLen++] = UART1_RXBuff[5]; 
   \       0xE0   0x7969             LDRB     R1,[R5, #+5]
   \       0xE2   0x....             LDR      R2,??DataTable10_2
   \       0xE4   0x7812             LDRB     R2,[R2, #+0]
   \       0xE6   0x5481             STRB     R1,[R0, R2]
   \       0xE8   0x....             LDR      R0,??DataTable10_2
   \       0xEA   0x7800             LDRB     R0,[R0, #+0]
   \       0xEC   0x1C40             ADDS     R0,R0,#+1
   \       0xEE   0x....             LDR      R1,??DataTable10_2
   \       0xF0   0x7008             STRB     R0,[R1, #+0]
   1381              
   1382              if (!(((ReadAdr >= 0x71E0) && (ReadAdr <= 0x71E5) && (ReadAdr + Object_Num <= 0x71E5 + 1)) && (0 != Object_Num)))//地址不在E0-E5之间 对象个数大于5或者等于0
   \       0xF2   0x0038             MOVS     R0,R7
   \       0xF4   0xB280             UXTH     R0,R0
   \       0xF6   0x....             LDR      R1,??DataTable10_4  ;; 0x71e0
   \       0xF8   0x1A40             SUBS     R0,R0,R1
   \       0xFA   0x2806             CMP      R0,#+6
   \       0xFC   0xD20B             BCS      ??MBASC_Fun2A_4
   \       0xFE   0x0038             MOVS     R0,R7
   \      0x100   0xB280             UXTH     R0,R0
   \      0x102   0x4669             MOV      R1,SP
   \      0x104   0x8849             LDRH     R1,[R1, #+2]
   \      0x106   0x1840             ADDS     R0,R0,R1
   \      0x108   0x....             LDR      R1,??DataTable10_5  ;; 0x71e7
   \      0x10A   0x4288             CMP      R0,R1
   \      0x10C   0xDA03             BGE      ??MBASC_Fun2A_4
   \      0x10E   0x4668             MOV      R0,SP
   \      0x110   0x8840             LDRH     R0,[R0, #+2]
   \      0x112   0x2800             CMP      R0,#+0
   \      0x114   0xD103             BNE      ??MBASC_Fun2A_5
   1383              {
   1384                  MBASC_SendErr(MB_EX_ILLEGAL_DATA_ADDRESS);
   \                     ??MBASC_Fun2A_4: (+1)
   \      0x116   0x2002             MOVS     R0,#+2
   \      0x118   0x....'....        BL       MBASC_SendErr
   1385                  return;
   \      0x11C   0xE0BC             B        ??MBASC_Fun2A_6
   1386              }
   1387          
   1388              if (ProductPara.bFlashWEn == FLASH_WR_DISABLE)//如果flash不允许写入
   \                     ??MBASC_Fun2A_5: (+1)
   \      0x11E   0x....             LDR      R0,??DataTable10_6
   \      0x120   0x78C0             LDRB     R0,[R0, #+3]
   \      0x122   0x2800             CMP      R0,#+0
   \      0x124   0xD103             BNE      ??MBASC_Fun2A_7
   1389              {
   1390                  MBASC_SendErr(MB_EX_SLAVE_DEVICE_FAILURE);
   \      0x126   0x2004             MOVS     R0,#+4
   \      0x128   0x....'....        BL       MBASC_SendErr
   1391                  return;
   \      0x12C   0xE0B4             B        ??MBASC_Fun2A_6
   1392              }
   1393              
   1394              Object_Len[ReadAdr - 0x71E0] = UART1_RXBuff[6];                             //接收发下来的对象的长度                        
   \                     ??MBASC_Fun2A_7: (+1)
   \      0x12E   0xAE05             ADD      R6,SP,#+20
   \      0x130   0x79A8             LDRB     R0,[R5, #+6]
   \      0x132   0x0039             MOVS     R1,R7
   \      0x134   0xB289             UXTH     R1,R1
   \      0x136   0x1871             ADDS     R1,R6,R1
   \      0x138   0x....             LDR      R2,??DataTable10_7  ;; 0xffff8e20
   \      0x13A   0x5488             STRB     R0,[R1, R2]
   1395              Len[0] = Object_Len[ReadAdr - 0x71E0];
   \      0x13C   0x0038             MOVS     R0,R7
   \      0x13E   0xB280             UXTH     R0,R0
   \      0x140   0x1830             ADDS     R0,R6,R0
   \      0x142   0x....             LDR      R1,??DataTable10_7  ;; 0xffff8e20
   \      0x144   0x5C40             LDRB     R0,[R0, R1]
   \      0x146   0x4669             MOV      R1,SP
   \      0x148   0x7108             STRB     R0,[R1, #+4]
   1396              for(u8 i = 0; i < Object_Num - 1; i++)
   \      0x14A   0x2000             MOVS     R0,#+0
   \      0x14C   0xE020             B        ??MBASC_Fun2A_8
   1397              {
   1398                 Length[i + 1] = Length[i] + Len[i] + 1;
   \                     ??MBASC_Fun2A_9: (+1)
   \      0x14E   0xAA03             ADD      R2,SP,#+12
   \      0x150   0x0001             MOVS     R1,R0
   \      0x152   0xB2C9             UXTB     R1,R1
   \      0x154   0x5C53             LDRB     R3,[R2, R1]
   \      0x156   0x469C             MOV      R12,R3
   \      0x158   0xAB01             ADD      R3,SP,#+4
   \      0x15A   0x0001             MOVS     R1,R0
   \      0x15C   0xB2C9             UXTB     R1,R1
   \      0x15E   0x5C59             LDRB     R1,[R3, R1]
   \      0x160   0x4663             MOV      R3,R12
   \      0x162   0x1859             ADDS     R1,R3,R1
   \      0x164   0x1C49             ADDS     R1,R1,#+1
   \      0x166   0x0003             MOVS     R3,R0
   \      0x168   0xB2DB             UXTB     R3,R3
   \      0x16A   0x18D3             ADDS     R3,R2,R3
   \      0x16C   0x7059             STRB     R1,[R3, #+1]
   1399                 Object_Len[ReadAdr - 0x71E0 + (i + 1)] = UART1_RXBuff[6 + Length[i + 1]];
   \      0x16E   0x0039             MOVS     R1,R7
   \      0x170   0xB289             UXTH     R1,R1
   \      0x172   0x0003             MOVS     R3,R0
   \      0x174   0xB2DB             UXTB     R3,R3
   \      0x176   0x18C9             ADDS     R1,R1,R3
   \      0x178   0x1871             ADDS     R1,R6,R1
   \      0x17A   0x....             LDR      R3,??DataTable10_8  ;; 0xffff8e21
   \      0x17C   0x468C             MOV      R12,R1
   \      0x17E   0x0001             MOVS     R1,R0
   \      0x180   0xB2C9             UXTB     R1,R1
   \      0x182   0x1851             ADDS     R1,R2,R1
   \      0x184   0x7849             LDRB     R1,[R1, #+1]
   \      0x186   0x1869             ADDS     R1,R5,R1
   \      0x188   0x7989             LDRB     R1,[R1, #+6]
   \      0x18A   0x4662             MOV      R2,R12
   \      0x18C   0x54D1             STRB     R1,[R2, R3]
   1400              }
   \      0x18E   0x1C40             ADDS     R0,R0,#+1
   \                     ??MBASC_Fun2A_8: (+1)
   \      0x190   0x0001             MOVS     R1,R0
   \      0x192   0xB2C9             UXTB     R1,R1
   \      0x194   0x466A             MOV      R2,SP
   \      0x196   0x8852             LDRH     R2,[R2, #+2]
   \      0x198   0x1E52             SUBS     R2,R2,#+1
   \      0x19A   0x4291             CMP      R1,R2
   \      0x19C   0xDBD7             BLT      ??MBASC_Fun2A_9
   1401                 
   1402              for (u8 k = 0; k < Object_Num; ReadAdr++, k++)
   \      0x19E   0x2000             MOVS     R0,#+0
   \      0x1A0   0x4669             MOV      R1,SP
   \      0x1A2   0x7008             STRB     R0,[R1, #+0]
   \      0x1A4   0xE020             B        ??MBASC_Fun2A_10
   1403              {
   1404                  switch (ReadAdr)
   1405                  {
   1406                  case 0x71E0:
   1407                      I2C1_WriteNBytes(EEPROM_ADDRESS, COMPANY, Object_Len[0] + 1, &UART1_RXBuff[6 + index]);            
   \                     ??MBASC_Fun2A_11: (+1)
   \      0x1A6   0x1928             ADDS     R0,R5,R4
   \      0x1A8   0x1D83             ADDS     R3,R0,#+6
   \      0x1AA   0x7832             LDRB     R2,[R6, #+0]
   \      0x1AC   0x1C52             ADDS     R2,R2,#+1
   \      0x1AE   0xB292             UXTH     R2,R2
   \      0x1B0   0x21A0             MOVS     R1,#+160
   \      0x1B2   0x0089             LSLS     R1,R1,#+2        ;; #+640
   \      0x1B4   0x20A0             MOVS     R0,#+160
   \      0x1B6   0x....'....        BL       I2C1_WriteNBytes
   1408                      index += Object_Len[0] + 1 ;                                        //把要写入的数据的长度写在第一个位置，方便读出
   \      0x1BA   0x7830             LDRB     R0,[R6, #+0]
   \      0x1BC   0x1C40             ADDS     R0,R0,#+1
   \      0x1BE   0x1824             ADDS     R4,R4,R0
   1409                      break;
   \      0x1C0   0xE00C             B        ??MBASC_Fun2A_12
   1410                  
   1411                  case 0x71E1:           
   1412                      I2C1_WriteNBytes(EEPROM_ADDRESS, DEV_ENCODING, Object_Len[1] + 1, &UART1_RXBuff[6 + index]);            
   1413                      index += Object_Len[1] + 1;
   1414                      break;
   1415                      
   1416                  case 0x71E2:          
   1417                      I2C1_WriteNBytes(EEPROM_ADDRESS, HWVERSION, Object_Len[2] + 1, &UART1_RXBuff[6 + index]);
   1418                      index += Object_Len[2] + 1;
   1419                      break;
   1420                      
   1421                  case 0x71E3:          
   1422                      I2C1_WriteNBytes(EEPROM_ADDRESS, SFVERSION, Object_Len[3] + 1, &UART1_RXBuff[6 + index]);
   1423                      index += Object_Len[3] + 1;
   1424                      break;
   1425                      
   1426                  case 0x71E4:           
   1427                      I2C1_WriteNBytes(EEPROM_ADDRESS, DEV_ID, Object_Len[4] + 1, &UART1_RXBuff[6 + index]);            
   1428                      index += Object_Len[4] + 1;
   1429                      break;
   1430          
   1431                  case 0x71E5:           
   1432                      I2C1_WriteNBytes(EEPROM_ADDRESS, CUSTOMERCODE, Object_Len[5] + 1, &UART1_RXBuff[6 + index]);            
   \                     ??MBASC_Fun2A_13: (+1)
   \      0x1C2   0x1928             ADDS     R0,R5,R4
   \      0x1C4   0x1D83             ADDS     R3,R0,#+6
   \      0x1C6   0x7972             LDRB     R2,[R6, #+5]
   \      0x1C8   0x1C52             ADDS     R2,R2,#+1
   \      0x1CA   0xB292             UXTH     R2,R2
   \      0x1CC   0x21F0             MOVS     R1,#+240
   \      0x1CE   0x0089             LSLS     R1,R1,#+2        ;; #+960
   \      0x1D0   0x20A0             MOVS     R0,#+160
   \      0x1D2   0x....'....        BL       I2C1_WriteNBytes
   1433                      index += Object_Len[5] + 1;
   \      0x1D6   0x7970             LDRB     R0,[R6, #+5]
   \      0x1D8   0x1C40             ADDS     R0,R0,#+1
   \      0x1DA   0x1824             ADDS     R4,R4,R0
   1434                      break;
   \                     ??MBASC_Fun2A_12: (+1)
   \      0x1DC   0x1C7F             ADDS     R7,R7,#+1
   \      0x1DE   0x4668             MOV      R0,SP
   \      0x1E0   0x7800             LDRB     R0,[R0, #+0]
   \      0x1E2   0x1C40             ADDS     R0,R0,#+1
   \      0x1E4   0x4669             MOV      R1,SP
   \      0x1E6   0x7008             STRB     R0,[R1, #+0]
   \                     ??MBASC_Fun2A_10: (+1)
   \      0x1E8   0x4668             MOV      R0,SP
   \      0x1EA   0x7800             LDRB     R0,[R0, #+0]
   \      0x1EC   0x4669             MOV      R1,SP
   \      0x1EE   0x8849             LDRH     R1,[R1, #+2]
   \      0x1F0   0xB280             UXTH     R0,R0
   \      0x1F2   0x4288             CMP      R0,R1
   \      0x1F4   0xD24B             BCS      ??MBASC_Fun2A_14
   \      0x1F6   0x0038             MOVS     R0,R7
   \      0x1F8   0xB280             UXTH     R0,R0
   \      0x1FA   0x....             LDR      R1,??DataTable10_4  ;; 0x71e0
   \      0x1FC   0x1A40             SUBS     R0,R0,R1
   \      0x1FE   0xD0D2             BEQ      ??MBASC_Fun2A_11
   \      0x200   0x1E40             SUBS     R0,R0,#+1
   \      0x202   0xD008             BEQ      ??MBASC_Fun2A_15
   \      0x204   0x1E40             SUBS     R0,R0,#+1
   \      0x206   0xD014             BEQ      ??MBASC_Fun2A_16
   \      0x208   0x1E40             SUBS     R0,R0,#+1
   \      0x20A   0xD020             BEQ      ??MBASC_Fun2A_17
   \      0x20C   0x1E40             SUBS     R0,R0,#+1
   \      0x20E   0xD02C             BEQ      ??MBASC_Fun2A_18
   \      0x210   0x1E40             SUBS     R0,R0,#+1
   \      0x212   0xD0D6             BEQ      ??MBASC_Fun2A_13
   \      0x214   0xE037             B        ??MBASC_Fun2A_19
   \                     ??MBASC_Fun2A_15: (+1)
   \      0x216   0x1928             ADDS     R0,R5,R4
   \      0x218   0x1D83             ADDS     R3,R0,#+6
   \      0x21A   0x7872             LDRB     R2,[R6, #+1]
   \      0x21C   0x1C52             ADDS     R2,R2,#+1
   \      0x21E   0xB292             UXTH     R2,R2
   \      0x220   0x21B0             MOVS     R1,#+176
   \      0x222   0x0089             LSLS     R1,R1,#+2        ;; #+704
   \      0x224   0x20A0             MOVS     R0,#+160
   \      0x226   0x....'....        BL       I2C1_WriteNBytes
   \      0x22A   0x7870             LDRB     R0,[R6, #+1]
   \      0x22C   0x1C40             ADDS     R0,R0,#+1
   \      0x22E   0x1824             ADDS     R4,R4,R0
   \      0x230   0xE7D4             B        ??MBASC_Fun2A_12
   \                     ??MBASC_Fun2A_16: (+1)
   \      0x232   0x1928             ADDS     R0,R5,R4
   \      0x234   0x1D83             ADDS     R3,R0,#+6
   \      0x236   0x78B2             LDRB     R2,[R6, #+2]
   \      0x238   0x1C52             ADDS     R2,R2,#+1
   \      0x23A   0xB292             UXTH     R2,R2
   \      0x23C   0x21C0             MOVS     R1,#+192
   \      0x23E   0x0089             LSLS     R1,R1,#+2        ;; #+768
   \      0x240   0x20A0             MOVS     R0,#+160
   \      0x242   0x....'....        BL       I2C1_WriteNBytes
   \      0x246   0x78B0             LDRB     R0,[R6, #+2]
   \      0x248   0x1C40             ADDS     R0,R0,#+1
   \      0x24A   0x1824             ADDS     R4,R4,R0
   \      0x24C   0xE7C6             B        ??MBASC_Fun2A_12
   \                     ??MBASC_Fun2A_17: (+1)
   \      0x24E   0x1928             ADDS     R0,R5,R4
   \      0x250   0x1D83             ADDS     R3,R0,#+6
   \      0x252   0x78F2             LDRB     R2,[R6, #+3]
   \      0x254   0x1C52             ADDS     R2,R2,#+1
   \      0x256   0xB292             UXTH     R2,R2
   \      0x258   0x21D0             MOVS     R1,#+208
   \      0x25A   0x0089             LSLS     R1,R1,#+2        ;; #+832
   \      0x25C   0x20A0             MOVS     R0,#+160
   \      0x25E   0x....'....        BL       I2C1_WriteNBytes
   \      0x262   0x78F0             LDRB     R0,[R6, #+3]
   \      0x264   0x1C40             ADDS     R0,R0,#+1
   \      0x266   0x1824             ADDS     R4,R4,R0
   \      0x268   0xE7B8             B        ??MBASC_Fun2A_12
   \                     ??MBASC_Fun2A_18: (+1)
   \      0x26A   0x1928             ADDS     R0,R5,R4
   \      0x26C   0x1D83             ADDS     R3,R0,#+6
   \      0x26E   0x7932             LDRB     R2,[R6, #+4]
   \      0x270   0x1C52             ADDS     R2,R2,#+1
   \      0x272   0xB292             UXTH     R2,R2
   \      0x274   0x21E0             MOVS     R1,#+224
   \      0x276   0x0089             LSLS     R1,R1,#+2        ;; #+896
   \      0x278   0x20A0             MOVS     R0,#+160
   \      0x27A   0x....'....        BL       I2C1_WriteNBytes
   \      0x27E   0x7930             LDRB     R0,[R6, #+4]
   \      0x280   0x1C40             ADDS     R0,R0,#+1
   \      0x282   0x1824             ADDS     R4,R4,R0
   \      0x284   0xE7AA             B        ??MBASC_Fun2A_12
   1435                      
   1436                  default:
   1437                      MBASC_SendErr(MB_EX_ILLEGAL_DATA_ADDRESS);
   \                     ??MBASC_Fun2A_19: (+1)
   \      0x286   0x2002             MOVS     R0,#+2
   \      0x288   0x....'....        BL       MBASC_SendErr
   1438                      return;
   \      0x28C   0xE004             B        ??MBASC_Fun2A_6
   1439                  }
   1440              }
   1441              MBASC_SendMsg(UART1_RXBuff, SendLen);
   \                     ??MBASC_Fun2A_14: (+1)
   \      0x28E   0x....             LDR      R0,??DataTable10_2
   \      0x290   0x7801             LDRB     R1,[R0, #+0]
   \      0x292   0x0028             MOVS     R0,R5
   \      0x294   0x....'....        BL       MBASC_SendMsg
   1442          }
   \                     ??MBASC_Fun2A_6: (+1)
   \      0x298   0xB007             ADD      SP,SP,#+28
   \      0x29A   0xBDF0             POP      {R4-R7,PC}       ;; return
   1443          
   1444          
   1445          //**************************************************************************************************
   1446          // 名称         : MBASC_Fun2B()
   1447          // 创建日期     : 2016-09-19
   1448          // 作者         : 梅梦醒
   1449          // 功能         : 用于读取设备序列号信息
   1450          // 输入参数     : 无
   1451          // 输出参数     : 无
   1452          // 返回结果     : 无
   1453          // 注意和说明   : 一起读5个对象时数据量很大，注意SendBuf的长度
   1454          // 修改内容     :
   1455          //**************************************************************************************************

   \                                 In section .text, align 4, keep-with-next
   1456          void MBASC_Fun2B(void)
   1457          {
   \                     MBASC_Fun2B: (+1)
   \        0x0   0xB5FE             PUSH     {R1-R7,LR}
   1458              u16 Object_Num = 0, ReadAdr = 0;
   \        0x2   0x2000             MOVS     R0,#+0
   \        0x4   0x2000             MOVS     R0,#+0
   1459              u8 CompanyNameLen = 0, ProductionCodeLen = 0, HardwareVersionLen = 0;
   \        0x6   0x2000             MOVS     R0,#+0
   \        0x8   0x2000             MOVS     R0,#+0
   \        0xA   0x2000             MOVS     R0,#+0
   1460              u8 SoftwareVersionLen = 0, DeviceIdLen = 0, CustomerCodeLen = 0;
   \        0xC   0x2000             MOVS     R0,#+0
   \        0xE   0x2000             MOVS     R0,#+0
   \       0x10   0x2000             MOVS     R0,#+0
   1461              
   1462              if(UartComm.SlaveAddr != UART1_RXBuff[2])                                   //当从机地址改为非0x45时，也可以读写寄存器
   \       0x12   0x4DCD             LDR      R5,??MBASC_Fun2B_0
   \       0x14   0x4FCD             LDR      R7,??MBASC_Fun2B_0+0x4
   \       0x16   0x7838             LDRB     R0,[R7, #+0]
   \       0x18   0x78A9             LDRB     R1,[R5, #+2]
   \       0x1A   0x4288             CMP      R0,R1
   \       0x1C   0xD008             BEQ      ??MBASC_Fun2B_1
   1463              {
   1464                  ReadAdr = UART1_RXBuff[2] * 256 + UART1_RXBuff[3];
   \       0x1E   0x78A8             LDRB     R0,[R5, #+2]
   \       0x20   0x2180             MOVS     R1,#+128
   \       0x22   0x0049             LSLS     R1,R1,#+1        ;; #+256
   \       0x24   0x4348             MULS     R0,R1,R0
   \       0x26   0x78E9             LDRB     R1,[R5, #+3]
   \       0x28   0x1840             ADDS     R0,R0,R1
   \       0x2A   0x4669             MOV      R1,SP
   \       0x2C   0x8048             STRH     R0,[R1, #+2]
   \       0x2E   0xE005             B        ??MBASC_Fun2B_2
   1465              }
   1466              else
   1467              {
   1468                  ReadAdr = 0x71 * 256 + UART1_RXBuff[3];
   \                     ??MBASC_Fun2B_1: (+1)
   \       0x30   0x78E8             LDRB     R0,[R5, #+3]
   \       0x32   0x21E2             MOVS     R1,#+226
   \       0x34   0x01C9             LSLS     R1,R1,#+7        ;; #+28928
   \       0x36   0x1840             ADDS     R0,R0,R1
   \       0x38   0x4669             MOV      R1,SP
   \       0x3A   0x8048             STRH     R0,[R1, #+2]
   1469              }
   1470              Object_Num = UART1_RXBuff[4] * 256 + UART1_RXBuff[5];                       //读对象个数   
   \                     ??MBASC_Fun2B_2: (+1)
   \       0x3C   0x7928             LDRB     R0,[R5, #+4]
   \       0x3E   0x2180             MOVS     R1,#+128
   \       0x40   0x0049             LSLS     R1,R1,#+1        ;; #+256
   \       0x42   0x4348             MULS     R0,R1,R0
   \       0x44   0x7969             LDRB     R1,[R5, #+5]
   \       0x46   0x1840             ADDS     R0,R0,R1
   \       0x48   0x4669             MOV      R1,SP
   \       0x4A   0x8088             STRH     R0,[R1, #+4]
   1471              
   1472              SendLen = 0;
   \       0x4C   0x4CC0             LDR      R4,??MBASC_Fun2B_0+0x8
   \       0x4E   0x2000             MOVS     R0,#+0
   \       0x50   0x7020             STRB     R0,[R4, #+0]
   1473              SendBuf[SendLen++] = (MBASC_GetSlaveAddr(UART1_RXBuff)) ? UartComm.SlaveAddr : 0x00;
   \       0x52   0x7826             LDRB     R6,[R4, #+0]
   \       0x54   0x0030             MOVS     R0,R6
   \       0x56   0x1C40             ADDS     R0,R0,#+1
   \       0x58   0x7020             STRB     R0,[R4, #+0]
   \       0x5A   0x0028             MOVS     R0,R5
   \       0x5C   0x....'....        BL       MBASC_GetSlaveAddr
   \       0x60   0x2800             CMP      R0,#+0
   \       0x62   0xD001             BEQ      ??MBASC_Fun2B_3
   \       0x64   0x7838             LDRB     R0,[R7, #+0]
   \       0x66   0xE000             B        ??MBASC_Fun2B_4
   \                     ??MBASC_Fun2B_3: (+1)
   \       0x68   0x2000             MOVS     R0,#+0
   \                     ??MBASC_Fun2B_4: (+1)
   \       0x6A   0x4FBA             LDR      R7,??MBASC_Fun2B_0+0xC
   \       0x6C   0xB2F6             UXTB     R6,R6
   \       0x6E   0x55B8             STRB     R0,[R7, R6]
   1474              SendBuf[SendLen++] = 0x2B;
   \       0x70   0x202B             MOVS     R0,#+43
   \       0x72   0x7821             LDRB     R1,[R4, #+0]
   \       0x74   0x5478             STRB     R0,[R7, R1]
   \       0x76   0x7820             LDRB     R0,[R4, #+0]
   \       0x78   0x1C40             ADDS     R0,R0,#+1
   \       0x7A   0x7020             STRB     R0,[R4, #+0]
   1475              SendBuf[SendLen++] = UART1_RXBuff[4];
   \       0x7C   0x7928             LDRB     R0,[R5, #+4]
   \       0x7E   0x7821             LDRB     R1,[R4, #+0]
   \       0x80   0x5478             STRB     R0,[R7, R1]
   \       0x82   0x7820             LDRB     R0,[R4, #+0]
   \       0x84   0x1C40             ADDS     R0,R0,#+1
   \       0x86   0x7020             STRB     R0,[R4, #+0]
   1476              SendBuf[SendLen++] = UART1_RXBuff[5];                      
   \       0x88   0x7968             LDRB     R0,[R5, #+5]
   \       0x8A   0x7821             LDRB     R1,[R4, #+0]
   \       0x8C   0x5478             STRB     R0,[R7, R1]
   \       0x8E   0x7820             LDRB     R0,[R4, #+0]
   \       0x90   0x1C40             ADDS     R0,R0,#+1
   \       0x92   0x7020             STRB     R0,[R4, #+0]
   1477              
   1478              if (!(((ReadAdr >= 0x71E0) && (ReadAdr <= 0x71E5) && (ReadAdr + Object_Num) <= (0x71E5 + 1))
   1479                  && (0 != Object_Num)))
   \       0x94   0x4668             MOV      R0,SP
   \       0x96   0x8840             LDRH     R0,[R0, #+2]
   \       0x98   0x49AF             LDR      R1,??MBASC_Fun2B_0+0x10  ;; 0x71e0
   \       0x9A   0x1A40             SUBS     R0,R0,R1
   \       0x9C   0x2806             CMP      R0,#+6
   \       0x9E   0xD20B             BCS      ??MBASC_Fun2B_5
   \       0xA0   0x4668             MOV      R0,SP
   \       0xA2   0x8840             LDRH     R0,[R0, #+2]
   \       0xA4   0x4669             MOV      R1,SP
   \       0xA6   0x8889             LDRH     R1,[R1, #+4]
   \       0xA8   0x1840             ADDS     R0,R0,R1
   \       0xAA   0x49AC             LDR      R1,??MBASC_Fun2B_0+0x14  ;; 0x71e7
   \       0xAC   0x4288             CMP      R0,R1
   \       0xAE   0xDA03             BGE      ??MBASC_Fun2B_5
   \       0xB0   0x4668             MOV      R0,SP
   \       0xB2   0x8880             LDRH     R0,[R0, #+4]
   \       0xB4   0x2800             CMP      R0,#+0
   \       0xB6   0xD103             BNE      ??MBASC_Fun2B_6
   1480              {
   1481                  MBASC_SendErr(MB_EX_ILLEGAL_DATA_ADDRESS);
   \                     ??MBASC_Fun2B_5: (+1)
   \       0xB8   0x2002             MOVS     R0,#+2
   \       0xBA   0x....'....        BL       MBASC_SendErr
   1482                  return;
   \       0xBE   0xE1C1             B        ??MBASC_Fun2B_7
   1483              }   
   1484              
   1485              for (u8 k = 0; k < Object_Num; ReadAdr++, k++)
   \                     ??MBASC_Fun2B_6: (+1)
   \       0xC0   0x2000             MOVS     R0,#+0
   \       0xC2   0x4669             MOV      R1,SP
   \       0xC4   0x7048             STRB     R0,[R1, #+1]
   \       0xC6   0xE01F             B        ??MBASC_Fun2B_8
   1486              {
   1487                  switch (ReadAdr)
   1488                  {
   1489                  case 0x71E0:
   1490                      SendBuf[SendLen++] = 0xE0;
   1491                      CompanyNameLen = I2C1_ReadByte(EEPROM_ADDRESS, COMPANY);            //读取第一个位置的数据的长度
   1492                      if((0 == CompanyNameLen) || (0x32 < CompanyNameLen))                //长度不正确
   1493                      {
   1494                          SendBuf[SendLen++] = 0x01;                                      //应答一个字节 0x00                             
   1495                          SendBuf[SendLen++] = 0x00;
   1496                      }
   1497                      else
   1498                      {
   1499                          SendBuf[SendLen++] = CompanyNameLen;
   1500                          for (u8 i = 0; i < CompanyNameLen; i++)
   1501                          {                             
   1502                              SendBuf[SendLen++] = I2C1_ReadByte(EEPROM_ADDRESS, COMPANY + 1 + i);
   1503                          }
   1504                      }
   1505                      break;
   1506                  
   1507                  case 0x71E1:
   1508                      SendBuf[SendLen++] = 0xE1;
   1509                      ProductionCodeLen = I2C1_ReadByte(EEPROM_ADDRESS, DEV_ENCODING);
   1510                      if((0 == ProductionCodeLen) || (0x32 < ProductionCodeLen))        
   1511                      {
   1512                          SendBuf[SendLen++] = 0x01;                                      //应答一个字节 0x00                             
   1513                          SendBuf[SendLen++] = 0x00;
   1514                      }
   1515                      else
   1516                      {
   1517                          SendBuf[SendLen++] = ProductionCodeLen;
   1518                          for (u8 i = 0; i < ProductionCodeLen; i++)
   1519                          {                             
   1520                              SendBuf[SendLen++] = I2C1_ReadByte(EEPROM_ADDRESS, DEV_ENCODING + 1 + i);
   1521                          }
   1522                      }
   1523                      break;
   1524                      
   1525                  case 0x71E2:
   1526                      SendBuf[SendLen++] = 0xE2;
   1527                      HardwareVersionLen = I2C1_ReadByte(EEPROM_ADDRESS, HWVERSION);
   1528                      if((0 == HardwareVersionLen) || (0x32 < HardwareVersionLen))      
   1529                      {
   1530                          SendBuf[SendLen++] = 0x01;                                      //应答一个字节 0x00                             
   1531                          SendBuf[SendLen++] = 0x00;
   1532                      }
   1533                      else
   1534                      {
   1535                          SendBuf[SendLen++] = HardwareVersionLen;
   1536                          for (u8 i = 0; i < HardwareVersionLen; i++)
   1537                          {                             
   1538                              SendBuf[SendLen++] = I2C1_ReadByte(EEPROM_ADDRESS, HWVERSION + 1 + i);
   1539                          }
   1540                      }
   1541                      break;
   1542                      
   1543                  case 0x71E3:
   1544                      SendBuf[SendLen++] = 0xE3;
   1545                      SoftwareVersionLen = I2C1_ReadByte(EEPROM_ADDRESS, SFVERSION);
   1546                      if((0 == SoftwareVersionLen) || (0x32 < SoftwareVersionLen))       
   1547                      {
   1548                          SendBuf[SendLen++] = 0x01;                                      //应答一个字节 0x00                             
   1549                          SendBuf[SendLen++] = 0x00;
   1550                      } 
   1551                      else
   1552                      {
   1553                          SendBuf[SendLen++] = SoftwareVersionLen;
   1554                          for (u8 i = 0; i < SoftwareVersionLen; i++)
   1555                          {                             
   1556                              SendBuf[SendLen++] = I2C1_ReadByte(EEPROM_ADDRESS, SFVERSION + 1 + i);
   1557                          }
   1558                      }
   1559                      break;
   1560                      
   1561                  case 0x71E4:
   1562                      SendBuf[SendLen++] = 0xE4;
   1563                      CustomerCodeLen = I2C1_ReadByte(EEPROM_ADDRESS, DEV_ID);
   1564                      if((0 == CustomerCodeLen) || (0x32 < CustomerCodeLen))            //没有写过而去读则返回错误码
   1565                      {
   1566                          SendBuf[SendLen++] = 0x01;                                      //应答一个字节 0x00                             
   1567                          SendBuf[SendLen++] = 0x00;
   1568                      } 
   1569                      else
   1570                      {
   1571                          SendBuf[SendLen++] = CustomerCodeLen;
   1572                          for (u8 i = 0; i < CustomerCodeLen; i++)
   1573                          {                             
   1574                              SendBuf[SendLen++] = I2C1_ReadByte(EEPROM_ADDRESS, DEV_ID + 1 + i);
   1575                          }
   1576                      }
   1577                      break;
   1578                      
   1579                  case 0x71E5:
   1580                      SendBuf[SendLen++] = 0xE5;
   1581                      DeviceIdLen = I2C1_ReadByte(EEPROM_ADDRESS, CUSTOMERCODE);
   1582                      if((0 == DeviceIdLen) || (0x32 < DeviceIdLen))                     //没有写过而去读则直接返回
   1583                      {
   1584                          SendBuf[SendLen++] = 0x01;                                      //应答一个字节 0x00                             
   1585                          SendBuf[SendLen++] = 0x00;
   1586                      } 
   1587                      else
   1588                      {
   1589                          SendBuf[SendLen++] = DeviceIdLen;
   1590                          for (u8 i = 0; i < DeviceIdLen; i++)
   1591                          {                             
   1592                              SendBuf[SendLen++] = I2C1_ReadByte(EEPROM_ADDRESS, CUSTOMERCODE + 1 + i);
   1593                          }
   1594                      }            
   1595                      break;            
   1596                      
   1597                  default:
   1598                      break; 
   \                     ??MBASC_Fun2B_9: (+1)
   \       0xC8   0xE014             B        ??MBASC_Fun2B_10
   \                     ??MBASC_Fun2B_11: (+1)
   \       0xCA   0x7825             LDRB     R5,[R4, #+0]
   \       0xCC   0x0028             MOVS     R0,R5
   \       0xCE   0x1C40             ADDS     R0,R0,#+1
   \       0xD0   0x7020             STRB     R0,[R4, #+0]
   \       0xD2   0x0030             MOVS     R0,R6
   \       0xD4   0xB2C0             UXTB     R0,R0
   \       0xD6   0x49A2             LDR      R1,??MBASC_Fun2B_0+0x18  ;; 0x3c1
   \       0xD8   0x1841             ADDS     R1,R0,R1
   \       0xDA   0xB289             UXTH     R1,R1
   \       0xDC   0x20A0             MOVS     R0,#+160
   \       0xDE   0x....'....        BL       I2C1_ReadByte
   \       0xE2   0xB2ED             UXTB     R5,R5
   \       0xE4   0x5578             STRB     R0,[R7, R5]
   \       0xE6   0x1C76             ADDS     R6,R6,#+1
   \                     ??MBASC_Fun2B_12: (+1)
   \       0xE8   0x0030             MOVS     R0,R6
   \       0xEA   0x4669             MOV      R1,SP
   \       0xEC   0x7809             LDRB     R1,[R1, #+0]
   \       0xEE   0xB2C0             UXTB     R0,R0
   \       0xF0   0x4288             CMP      R0,R1
   \       0xF2   0xD3EA             BCC      ??MBASC_Fun2B_11
   \                     ??MBASC_Fun2B_13: (+1)
   \                     ??MBASC_Fun2B_10: (+1)
   \       0xF4   0x4668             MOV      R0,SP
   \       0xF6   0x8840             LDRH     R0,[R0, #+2]
   \       0xF8   0x1C40             ADDS     R0,R0,#+1
   \       0xFA   0x4669             MOV      R1,SP
   \       0xFC   0x8048             STRH     R0,[R1, #+2]
   \       0xFE   0x4668             MOV      R0,SP
   \      0x100   0x7840             LDRB     R0,[R0, #+1]
   \      0x102   0x1C40             ADDS     R0,R0,#+1
   \      0x104   0x4669             MOV      R1,SP
   \      0x106   0x7048             STRB     R0,[R1, #+1]
   \                     ??MBASC_Fun2B_8: (+1)
   \      0x108   0x4668             MOV      R0,SP
   \      0x10A   0x7840             LDRB     R0,[R0, #+1]
   \      0x10C   0x4669             MOV      R1,SP
   \      0x10E   0x8889             LDRH     R1,[R1, #+4]
   \      0x110   0xB280             UXTH     R0,R0
   \      0x112   0x4288             CMP      R0,R1
   \      0x114   0xD300             BCC      .+4
   \      0x116   0xE191             B        ??MBASC_Fun2B_14
   \      0x118   0x4668             MOV      R0,SP
   \      0x11A   0x8840             LDRH     R0,[R0, #+2]
   \      0x11C   0x498E             LDR      R1,??MBASC_Fun2B_0+0x10  ;; 0x71e0
   \      0x11E   0x1A40             SUBS     R0,R0,R1
   \      0x120   0xD00E             BEQ      ??MBASC_Fun2B_15
   \      0x122   0x1E40             SUBS     R0,R0,#+1
   \      0x124   0xD04D             BEQ      ??MBASC_Fun2B_16
   \      0x126   0x1E40             SUBS     R0,R0,#+1
   \      0x128   0xD100             BNE      .+4
   \      0x12A   0xE08B             B        ??MBASC_Fun2B_17
   \      0x12C   0x1E40             SUBS     R0,R0,#+1
   \      0x12E   0xD100             BNE      .+4
   \      0x130   0xE0C9             B        ??MBASC_Fun2B_18
   \      0x132   0x1E40             SUBS     R0,R0,#+1
   \      0x134   0xD100             BNE      .+4
   \      0x136   0xE115             B        ??MBASC_Fun2B_19
   \      0x138   0x1E40             SUBS     R0,R0,#+1
   \      0x13A   0xD100             BNE      .+4
   \      0x13C   0xE153             B        ??MBASC_Fun2B_20
   \      0x13E   0xE7C3             B        ??MBASC_Fun2B_9
   \                     ??MBASC_Fun2B_15: (+1)
   \      0x140   0x20E0             MOVS     R0,#+224
   \      0x142   0x7821             LDRB     R1,[R4, #+0]
   \      0x144   0x5478             STRB     R0,[R7, R1]
   \      0x146   0x7820             LDRB     R0,[R4, #+0]
   \      0x148   0x1C40             ADDS     R0,R0,#+1
   \      0x14A   0x7020             STRB     R0,[R4, #+0]
   \      0x14C   0x21A0             MOVS     R1,#+160
   \      0x14E   0x0089             LSLS     R1,R1,#+2        ;; #+640
   \      0x150   0x20A0             MOVS     R0,#+160
   \      0x152   0x....'....        BL       I2C1_ReadByte
   \      0x156   0x4669             MOV      R1,SP
   \      0x158   0x7008             STRB     R0,[R1, #+0]
   \      0x15A   0x4668             MOV      R0,SP
   \      0x15C   0x7800             LDRB     R0,[R0, #+0]
   \      0x15E   0x2800             CMP      R0,#+0
   \      0x160   0xD003             BEQ      ??MBASC_Fun2B_21
   \      0x162   0x4668             MOV      R0,SP
   \      0x164   0x7800             LDRB     R0,[R0, #+0]
   \      0x166   0x2833             CMP      R0,#+51
   \      0x168   0xDB0C             BLT      ??MBASC_Fun2B_22
   \                     ??MBASC_Fun2B_21: (+1)
   \      0x16A   0x2001             MOVS     R0,#+1
   \      0x16C   0x7821             LDRB     R1,[R4, #+0]
   \      0x16E   0x5478             STRB     R0,[R7, R1]
   \      0x170   0x7820             LDRB     R0,[R4, #+0]
   \      0x172   0x1C40             ADDS     R0,R0,#+1
   \      0x174   0x7020             STRB     R0,[R4, #+0]
   \      0x176   0x2000             MOVS     R0,#+0
   \      0x178   0x7821             LDRB     R1,[R4, #+0]
   \      0x17A   0x5478             STRB     R0,[R7, R1]
   \      0x17C   0x7820             LDRB     R0,[R4, #+0]
   \      0x17E   0x1C40             ADDS     R0,R0,#+1
   \      0x180   0x7020             STRB     R0,[R4, #+0]
   \      0x182   0xE01D             B        ??MBASC_Fun2B_23
   \                     ??MBASC_Fun2B_22: (+1)
   \      0x184   0x4668             MOV      R0,SP
   \      0x186   0x7800             LDRB     R0,[R0, #+0]
   \      0x188   0x7821             LDRB     R1,[R4, #+0]
   \      0x18A   0x5478             STRB     R0,[R7, R1]
   \      0x18C   0x7820             LDRB     R0,[R4, #+0]
   \      0x18E   0x1C40             ADDS     R0,R0,#+1
   \      0x190   0x7020             STRB     R0,[R4, #+0]
   \      0x192   0x2600             MOVS     R6,#+0
   \      0x194   0xE00E             B        ??MBASC_Fun2B_24
   \                     ??MBASC_Fun2B_25: (+1)
   \      0x196   0x7825             LDRB     R5,[R4, #+0]
   \      0x198   0x0028             MOVS     R0,R5
   \      0x19A   0x1C40             ADDS     R0,R0,#+1
   \      0x19C   0x7020             STRB     R0,[R4, #+0]
   \      0x19E   0x0030             MOVS     R0,R6
   \      0x1A0   0xB2C0             UXTB     R0,R0
   \      0x1A2   0x....             LDR      R1,??DataTable11  ;; 0x281
   \      0x1A4   0x1841             ADDS     R1,R0,R1
   \      0x1A6   0xB289             UXTH     R1,R1
   \      0x1A8   0x20A0             MOVS     R0,#+160
   \      0x1AA   0x....'....        BL       I2C1_ReadByte
   \      0x1AE   0xB2ED             UXTB     R5,R5
   \      0x1B0   0x5578             STRB     R0,[R7, R5]
   \      0x1B2   0x1C76             ADDS     R6,R6,#+1
   \                     ??MBASC_Fun2B_24: (+1)
   \      0x1B4   0x0030             MOVS     R0,R6
   \      0x1B6   0x4669             MOV      R1,SP
   \      0x1B8   0x7809             LDRB     R1,[R1, #+0]
   \      0x1BA   0xB2C0             UXTB     R0,R0
   \      0x1BC   0x4288             CMP      R0,R1
   \      0x1BE   0xD3EA             BCC      ??MBASC_Fun2B_25
   \                     ??MBASC_Fun2B_23: (+1)
   \      0x1C0   0xE798             B        ??MBASC_Fun2B_10
   \                     ??MBASC_Fun2B_16: (+1)
   \      0x1C2   0x20E1             MOVS     R0,#+225
   \      0x1C4   0x7821             LDRB     R1,[R4, #+0]
   \      0x1C6   0x5478             STRB     R0,[R7, R1]
   \      0x1C8   0x7820             LDRB     R0,[R4, #+0]
   \      0x1CA   0x1C40             ADDS     R0,R0,#+1
   \      0x1CC   0x7020             STRB     R0,[R4, #+0]
   \      0x1CE   0x21B0             MOVS     R1,#+176
   \      0x1D0   0x0089             LSLS     R1,R1,#+2        ;; #+704
   \      0x1D2   0x20A0             MOVS     R0,#+160
   \      0x1D4   0x....'....        BL       I2C1_ReadByte
   \      0x1D8   0x4669             MOV      R1,SP
   \      0x1DA   0x7008             STRB     R0,[R1, #+0]
   \      0x1DC   0x4668             MOV      R0,SP
   \      0x1DE   0x7800             LDRB     R0,[R0, #+0]
   \      0x1E0   0x2800             CMP      R0,#+0
   \      0x1E2   0xD003             BEQ      ??MBASC_Fun2B_26
   \      0x1E4   0x4668             MOV      R0,SP
   \      0x1E6   0x7800             LDRB     R0,[R0, #+0]
   \      0x1E8   0x2833             CMP      R0,#+51
   \      0x1EA   0xDB0C             BLT      ??MBASC_Fun2B_27
   \                     ??MBASC_Fun2B_26: (+1)
   \      0x1EC   0x2001             MOVS     R0,#+1
   \      0x1EE   0x7821             LDRB     R1,[R4, #+0]
   \      0x1F0   0x5478             STRB     R0,[R7, R1]
   \      0x1F2   0x7820             LDRB     R0,[R4, #+0]
   \      0x1F4   0x1C40             ADDS     R0,R0,#+1
   \      0x1F6   0x7020             STRB     R0,[R4, #+0]
   \      0x1F8   0x2000             MOVS     R0,#+0
   \      0x1FA   0x7821             LDRB     R1,[R4, #+0]
   \      0x1FC   0x5478             STRB     R0,[R7, R1]
   \      0x1FE   0x7820             LDRB     R0,[R4, #+0]
   \      0x200   0x1C40             ADDS     R0,R0,#+1
   \      0x202   0x7020             STRB     R0,[R4, #+0]
   \      0x204   0xE01D             B        ??MBASC_Fun2B_28
   \                     ??MBASC_Fun2B_27: (+1)
   \      0x206   0x4668             MOV      R0,SP
   \      0x208   0x7800             LDRB     R0,[R0, #+0]
   \      0x20A   0x7821             LDRB     R1,[R4, #+0]
   \      0x20C   0x5478             STRB     R0,[R7, R1]
   \      0x20E   0x7820             LDRB     R0,[R4, #+0]
   \      0x210   0x1C40             ADDS     R0,R0,#+1
   \      0x212   0x7020             STRB     R0,[R4, #+0]
   \      0x214   0x2600             MOVS     R6,#+0
   \      0x216   0xE00E             B        ??MBASC_Fun2B_29
   \                     ??MBASC_Fun2B_30: (+1)
   \      0x218   0x7825             LDRB     R5,[R4, #+0]
   \      0x21A   0x0028             MOVS     R0,R5
   \      0x21C   0x1C40             ADDS     R0,R0,#+1
   \      0x21E   0x7020             STRB     R0,[R4, #+0]
   \      0x220   0x0030             MOVS     R0,R6
   \      0x222   0xB2C0             UXTB     R0,R0
   \      0x224   0x....             LDR      R1,??DataTable12  ;; 0x2c1
   \      0x226   0x1841             ADDS     R1,R0,R1
   \      0x228   0xB289             UXTH     R1,R1
   \      0x22A   0x20A0             MOVS     R0,#+160
   \      0x22C   0x....'....        BL       I2C1_ReadByte
   \      0x230   0xB2ED             UXTB     R5,R5
   \      0x232   0x5578             STRB     R0,[R7, R5]
   \      0x234   0x1C76             ADDS     R6,R6,#+1
   \                     ??MBASC_Fun2B_29: (+1)
   \      0x236   0x0030             MOVS     R0,R6
   \      0x238   0x4669             MOV      R1,SP
   \      0x23A   0x7809             LDRB     R1,[R1, #+0]
   \      0x23C   0xB2C0             UXTB     R0,R0
   \      0x23E   0x4288             CMP      R0,R1
   \      0x240   0xD3EA             BCC      ??MBASC_Fun2B_30
   \                     ??MBASC_Fun2B_28: (+1)
   \      0x242   0xE757             B        ??MBASC_Fun2B_10
   \                     ??MBASC_Fun2B_17: (+1)
   \      0x244   0x20E2             MOVS     R0,#+226
   \      0x246   0x7821             LDRB     R1,[R4, #+0]
   \      0x248   0x5478             STRB     R0,[R7, R1]
   \      0x24A   0x7820             LDRB     R0,[R4, #+0]
   \      0x24C   0x1C40             ADDS     R0,R0,#+1
   \      0x24E   0x7020             STRB     R0,[R4, #+0]
   \      0x250   0x21C0             MOVS     R1,#+192
   \      0x252   0x0089             LSLS     R1,R1,#+2        ;; #+768
   \      0x254   0x20A0             MOVS     R0,#+160
   \      0x256   0x....'....        BL       I2C1_ReadByte
   \      0x25A   0x4669             MOV      R1,SP
   \      0x25C   0x7008             STRB     R0,[R1, #+0]
   \      0x25E   0x4668             MOV      R0,SP
   \      0x260   0x7800             LDRB     R0,[R0, #+0]
   \      0x262   0x2800             CMP      R0,#+0
   \      0x264   0xD003             BEQ      ??MBASC_Fun2B_31
   \      0x266   0x4668             MOV      R0,SP
   \      0x268   0x7800             LDRB     R0,[R0, #+0]
   \      0x26A   0x2833             CMP      R0,#+51
   \      0x26C   0xDB0C             BLT      ??MBASC_Fun2B_32
   \                     ??MBASC_Fun2B_31: (+1)
   \      0x26E   0x2001             MOVS     R0,#+1
   \      0x270   0x7821             LDRB     R1,[R4, #+0]
   \      0x272   0x5478             STRB     R0,[R7, R1]
   \      0x274   0x7820             LDRB     R0,[R4, #+0]
   \      0x276   0x1C40             ADDS     R0,R0,#+1
   \      0x278   0x7020             STRB     R0,[R4, #+0]
   \      0x27A   0x2000             MOVS     R0,#+0
   \      0x27C   0x7821             LDRB     R1,[R4, #+0]
   \      0x27E   0x5478             STRB     R0,[R7, R1]
   \      0x280   0x7820             LDRB     R0,[R4, #+0]
   \      0x282   0x1C40             ADDS     R0,R0,#+1
   \      0x284   0x7020             STRB     R0,[R4, #+0]
   \      0x286   0xE01D             B        ??MBASC_Fun2B_33
   \                     ??MBASC_Fun2B_32: (+1)
   \      0x288   0x4668             MOV      R0,SP
   \      0x28A   0x7800             LDRB     R0,[R0, #+0]
   \      0x28C   0x7821             LDRB     R1,[R4, #+0]
   \      0x28E   0x5478             STRB     R0,[R7, R1]
   \      0x290   0x7820             LDRB     R0,[R4, #+0]
   \      0x292   0x1C40             ADDS     R0,R0,#+1
   \      0x294   0x7020             STRB     R0,[R4, #+0]
   \      0x296   0x2600             MOVS     R6,#+0
   \      0x298   0xE00E             B        ??MBASC_Fun2B_34
   \                     ??MBASC_Fun2B_35: (+1)
   \      0x29A   0x7825             LDRB     R5,[R4, #+0]
   \      0x29C   0x0028             MOVS     R0,R5
   \      0x29E   0x1C40             ADDS     R0,R0,#+1
   \      0x2A0   0x7020             STRB     R0,[R4, #+0]
   \      0x2A2   0x0030             MOVS     R0,R6
   \      0x2A4   0xB2C0             UXTB     R0,R0
   \      0x2A6   0x....             LDR      R1,??DataTable12_1  ;; 0x301
   \      0x2A8   0x1841             ADDS     R1,R0,R1
   \      0x2AA   0xB289             UXTH     R1,R1
   \      0x2AC   0x20A0             MOVS     R0,#+160
   \      0x2AE   0x....'....        BL       I2C1_ReadByte
   \      0x2B2   0xB2ED             UXTB     R5,R5
   \      0x2B4   0x5578             STRB     R0,[R7, R5]
   \      0x2B6   0x1C76             ADDS     R6,R6,#+1
   \                     ??MBASC_Fun2B_34: (+1)
   \      0x2B8   0x0030             MOVS     R0,R6
   \      0x2BA   0x4669             MOV      R1,SP
   \      0x2BC   0x7809             LDRB     R1,[R1, #+0]
   \      0x2BE   0xB2C0             UXTB     R0,R0
   \      0x2C0   0x4288             CMP      R0,R1
   \      0x2C2   0xD3EA             BCC      ??MBASC_Fun2B_35
   \                     ??MBASC_Fun2B_33: (+1)
   \      0x2C4   0xE716             B        ??MBASC_Fun2B_10
   \                     ??MBASC_Fun2B_18: (+1)
   \      0x2C6   0x20E3             MOVS     R0,#+227
   \      0x2C8   0x7821             LDRB     R1,[R4, #+0]
   \      0x2CA   0x5478             STRB     R0,[R7, R1]
   \      0x2CC   0x7820             LDRB     R0,[R4, #+0]
   \      0x2CE   0x1C40             ADDS     R0,R0,#+1
   \      0x2D0   0x7020             STRB     R0,[R4, #+0]
   \      0x2D2   0x21D0             MOVS     R1,#+208
   \      0x2D4   0x0089             LSLS     R1,R1,#+2        ;; #+832
   \      0x2D6   0x20A0             MOVS     R0,#+160
   \      0x2D8   0x....'....        BL       I2C1_ReadByte
   \      0x2DC   0x4669             MOV      R1,SP
   \      0x2DE   0x7008             STRB     R0,[R1, #+0]
   \      0x2E0   0x4668             MOV      R0,SP
   \      0x2E2   0x7800             LDRB     R0,[R0, #+0]
   \      0x2E4   0x2800             CMP      R0,#+0
   \      0x2E6   0xD003             BEQ      ??MBASC_Fun2B_36
   \      0x2E8   0x4668             MOV      R0,SP
   \      0x2EA   0x7800             LDRB     R0,[R0, #+0]
   \      0x2EC   0x2833             CMP      R0,#+51
   \      0x2EE   0xDB0C             BLT      ??MBASC_Fun2B_37
   \                     ??MBASC_Fun2B_36: (+1)
   \      0x2F0   0x2001             MOVS     R0,#+1
   \      0x2F2   0x7821             LDRB     R1,[R4, #+0]
   \      0x2F4   0x5478             STRB     R0,[R7, R1]
   \      0x2F6   0x7820             LDRB     R0,[R4, #+0]
   \      0x2F8   0x1C40             ADDS     R0,R0,#+1
   \      0x2FA   0x7020             STRB     R0,[R4, #+0]
   \      0x2FC   0x2000             MOVS     R0,#+0
   \      0x2FE   0x7821             LDRB     R1,[R4, #+0]
   \      0x300   0x5478             STRB     R0,[R7, R1]
   \      0x302   0x7820             LDRB     R0,[R4, #+0]
   \      0x304   0x1C40             ADDS     R0,R0,#+1
   \      0x306   0x7020             STRB     R0,[R4, #+0]
   \      0x308   0xE01D             B        ??MBASC_Fun2B_38
   \                     ??MBASC_Fun2B_37: (+1)
   \      0x30A   0x4668             MOV      R0,SP
   \      0x30C   0x7800             LDRB     R0,[R0, #+0]
   \      0x30E   0x7821             LDRB     R1,[R4, #+0]
   \      0x310   0x5478             STRB     R0,[R7, R1]
   \      0x312   0x7820             LDRB     R0,[R4, #+0]
   \      0x314   0x1C40             ADDS     R0,R0,#+1
   \      0x316   0x7020             STRB     R0,[R4, #+0]
   \      0x318   0x2600             MOVS     R6,#+0
   \      0x31A   0xE00E             B        ??MBASC_Fun2B_39
   \                     ??MBASC_Fun2B_40: (+1)
   \      0x31C   0x7825             LDRB     R5,[R4, #+0]
   \      0x31E   0x0028             MOVS     R0,R5
   \      0x320   0x1C40             ADDS     R0,R0,#+1
   \      0x322   0x7020             STRB     R0,[R4, #+0]
   \      0x324   0x0030             MOVS     R0,R6
   \      0x326   0xB2C0             UXTB     R0,R0
   \      0x328   0x....             LDR      R1,??DataTable12_2  ;; 0x341
   \      0x32A   0x1841             ADDS     R1,R0,R1
   \      0x32C   0xB289             UXTH     R1,R1
   \      0x32E   0x20A0             MOVS     R0,#+160
   \      0x330   0x....'....        BL       I2C1_ReadByte
   \      0x334   0xB2ED             UXTB     R5,R5
   \      0x336   0x5578             STRB     R0,[R7, R5]
   \      0x338   0x1C76             ADDS     R6,R6,#+1
   \                     ??MBASC_Fun2B_39: (+1)
   \      0x33A   0x0030             MOVS     R0,R6
   \      0x33C   0x4669             MOV      R1,SP
   \      0x33E   0x7809             LDRB     R1,[R1, #+0]
   \      0x340   0xB2C0             UXTB     R0,R0
   \      0x342   0x4288             CMP      R0,R1
   \      0x344   0xD3EA             BCC      ??MBASC_Fun2B_40
   \                     ??MBASC_Fun2B_38: (+1)
   \      0x346   0xE6D5             B        ??MBASC_Fun2B_10
   \                     ??MBASC_Fun2B_0:
   \      0x348   0x....'....        DC32     UART1_RXBuff
   \      0x34C   0x....'....        DC32     UartComm
   \      0x350   0x....'....        DC32     SendLen
   \      0x354   0x....'....        DC32     SendBuf
   \      0x358   0x0000'71E0        DC32     0x71e0
   \      0x35C   0x0000'71E7        DC32     0x71e7
   \      0x360   0x0000'03C1        DC32     0x3c1
   \                     ??MBASC_Fun2B_19: (+1)
   \      0x364   0x20E4             MOVS     R0,#+228
   \      0x366   0x7821             LDRB     R1,[R4, #+0]
   \      0x368   0x5478             STRB     R0,[R7, R1]
   \      0x36A   0x7820             LDRB     R0,[R4, #+0]
   \      0x36C   0x1C40             ADDS     R0,R0,#+1
   \      0x36E   0x7020             STRB     R0,[R4, #+0]
   \      0x370   0x21E0             MOVS     R1,#+224
   \      0x372   0x0089             LSLS     R1,R1,#+2        ;; #+896
   \      0x374   0x20A0             MOVS     R0,#+160
   \      0x376   0x....'....        BL       I2C1_ReadByte
   \      0x37A   0x4669             MOV      R1,SP
   \      0x37C   0x7008             STRB     R0,[R1, #+0]
   \      0x37E   0x4668             MOV      R0,SP
   \      0x380   0x7800             LDRB     R0,[R0, #+0]
   \      0x382   0x2800             CMP      R0,#+0
   \      0x384   0xD003             BEQ      ??MBASC_Fun2B_41
   \      0x386   0x4668             MOV      R0,SP
   \      0x388   0x7800             LDRB     R0,[R0, #+0]
   \      0x38A   0x2833             CMP      R0,#+51
   \      0x38C   0xDB0C             BLT      ??MBASC_Fun2B_42
   \                     ??MBASC_Fun2B_41: (+1)
   \      0x38E   0x2001             MOVS     R0,#+1
   \      0x390   0x7821             LDRB     R1,[R4, #+0]
   \      0x392   0x5478             STRB     R0,[R7, R1]
   \      0x394   0x7820             LDRB     R0,[R4, #+0]
   \      0x396   0x1C40             ADDS     R0,R0,#+1
   \      0x398   0x7020             STRB     R0,[R4, #+0]
   \      0x39A   0x2000             MOVS     R0,#+0
   \      0x39C   0x7821             LDRB     R1,[R4, #+0]
   \      0x39E   0x5478             STRB     R0,[R7, R1]
   \      0x3A0   0x7820             LDRB     R0,[R4, #+0]
   \      0x3A2   0x1C40             ADDS     R0,R0,#+1
   \      0x3A4   0x7020             STRB     R0,[R4, #+0]
   \      0x3A6   0xE01D             B        ??MBASC_Fun2B_43
   \                     ??MBASC_Fun2B_42: (+1)
   \      0x3A8   0x4668             MOV      R0,SP
   \      0x3AA   0x7800             LDRB     R0,[R0, #+0]
   \      0x3AC   0x7821             LDRB     R1,[R4, #+0]
   \      0x3AE   0x5478             STRB     R0,[R7, R1]
   \      0x3B0   0x7820             LDRB     R0,[R4, #+0]
   \      0x3B2   0x1C40             ADDS     R0,R0,#+1
   \      0x3B4   0x7020             STRB     R0,[R4, #+0]
   \      0x3B6   0x2600             MOVS     R6,#+0
   \      0x3B8   0xE00E             B        ??MBASC_Fun2B_44
   \                     ??MBASC_Fun2B_45: (+1)
   \      0x3BA   0x7825             LDRB     R5,[R4, #+0]
   \      0x3BC   0x0028             MOVS     R0,R5
   \      0x3BE   0x1C40             ADDS     R0,R0,#+1
   \      0x3C0   0x7020             STRB     R0,[R4, #+0]
   \      0x3C2   0x0030             MOVS     R0,R6
   \      0x3C4   0xB2C0             UXTB     R0,R0
   \      0x3C6   0x....             LDR      R1,??DataTable14  ;; 0x381
   \      0x3C8   0x1841             ADDS     R1,R0,R1
   \      0x3CA   0xB289             UXTH     R1,R1
   \      0x3CC   0x20A0             MOVS     R0,#+160
   \      0x3CE   0x....'....        BL       I2C1_ReadByte
   \      0x3D2   0xB2ED             UXTB     R5,R5
   \      0x3D4   0x5578             STRB     R0,[R7, R5]
   \      0x3D6   0x1C76             ADDS     R6,R6,#+1
   \                     ??MBASC_Fun2B_44: (+1)
   \      0x3D8   0x0030             MOVS     R0,R6
   \      0x3DA   0x4669             MOV      R1,SP
   \      0x3DC   0x7809             LDRB     R1,[R1, #+0]
   \      0x3DE   0xB2C0             UXTB     R0,R0
   \      0x3E0   0x4288             CMP      R0,R1
   \      0x3E2   0xD3EA             BCC      ??MBASC_Fun2B_45
   \                     ??MBASC_Fun2B_43: (+1)
   \      0x3E4   0xE686             B        ??MBASC_Fun2B_10
   \                     ??MBASC_Fun2B_20: (+1)
   \      0x3E6   0x20E5             MOVS     R0,#+229
   \      0x3E8   0x7821             LDRB     R1,[R4, #+0]
   \      0x3EA   0x5478             STRB     R0,[R7, R1]
   \      0x3EC   0x7820             LDRB     R0,[R4, #+0]
   \      0x3EE   0x1C40             ADDS     R0,R0,#+1
   \      0x3F0   0x7020             STRB     R0,[R4, #+0]
   \      0x3F2   0x21F0             MOVS     R1,#+240
   \      0x3F4   0x0089             LSLS     R1,R1,#+2        ;; #+960
   \      0x3F6   0x20A0             MOVS     R0,#+160
   \      0x3F8   0x....'....        BL       I2C1_ReadByte
   \      0x3FC   0x4669             MOV      R1,SP
   \      0x3FE   0x7008             STRB     R0,[R1, #+0]
   \      0x400   0x4668             MOV      R0,SP
   \      0x402   0x7800             LDRB     R0,[R0, #+0]
   \      0x404   0x2800             CMP      R0,#+0
   \      0x406   0xD003             BEQ      ??MBASC_Fun2B_46
   \      0x408   0x4668             MOV      R0,SP
   \      0x40A   0x7800             LDRB     R0,[R0, #+0]
   \      0x40C   0x2833             CMP      R0,#+51
   \      0x40E   0xDB0C             BLT      ??MBASC_Fun2B_47
   \                     ??MBASC_Fun2B_46: (+1)
   \      0x410   0x2001             MOVS     R0,#+1
   \      0x412   0x7821             LDRB     R1,[R4, #+0]
   \      0x414   0x5478             STRB     R0,[R7, R1]
   \      0x416   0x7820             LDRB     R0,[R4, #+0]
   \      0x418   0x1C40             ADDS     R0,R0,#+1
   \      0x41A   0x7020             STRB     R0,[R4, #+0]
   \      0x41C   0x2000             MOVS     R0,#+0
   \      0x41E   0x7821             LDRB     R1,[R4, #+0]
   \      0x420   0x5478             STRB     R0,[R7, R1]
   \      0x422   0x7820             LDRB     R0,[R4, #+0]
   \      0x424   0x1C40             ADDS     R0,R0,#+1
   \      0x426   0x7020             STRB     R0,[R4, #+0]
   \      0x428   0xE664             B        ??MBASC_Fun2B_13
   \                     ??MBASC_Fun2B_47: (+1)
   \      0x42A   0x4668             MOV      R0,SP
   \      0x42C   0x7800             LDRB     R0,[R0, #+0]
   \      0x42E   0x7821             LDRB     R1,[R4, #+0]
   \      0x430   0x5478             STRB     R0,[R7, R1]
   \      0x432   0x7820             LDRB     R0,[R4, #+0]
   \      0x434   0x1C40             ADDS     R0,R0,#+1
   \      0x436   0x7020             STRB     R0,[R4, #+0]
   \      0x438   0x2600             MOVS     R6,#+0
   \      0x43A   0xE655             B        ??MBASC_Fun2B_12
   1599                  }
   1600              }
   1601              MBASC_SendMsg(SendBuf, SendLen);
   \                     ??MBASC_Fun2B_14: (+1)
   \      0x43C   0x7821             LDRB     R1,[R4, #+0]
   \      0x43E   0x0038             MOVS     R0,R7
   \      0x440   0x....'....        BL       MBASC_SendMsg
   1602          }
   \                     ??MBASC_Fun2B_7: (+1)
   \      0x444   0xBDF7             POP      {R0-R2,R4-R7,PC}  ;; return
   1603          
   1604          
   1605          
   1606          #define MB_RECDATA_SUCCESSED              0x00
   1607          #define MB_RECDATA_FAILED                 0x01
   1608          #define MB_CHECKSUM_ERROR                 0x02 
   1609          #define APPEXISTFLAGADDR                  0x7FF                   
   1610          //**************************************************************************************************
   1611          // 名称         : MBASC_Fun41()
   1612          // 创建日期     : 2016-09-19
   1613          // 作者         : 梅梦醒
   1614          // 功能         : 重启系统（从boot开始执行）
   1615          // 输入参数     : 无
   1616          // 输出参数     : 无
   1617          // 返回结果     : 无
   1618          // 注意和说明   : 
   1619          // 修改内容     :
   1620          //**************************************************************************************************

   \                                 In section .text, align 2, keep-with-next
   1621          void MBASC_Fun41(void)
   1622          {
   \                     MBASC_Fun41: (+1)
   \        0x0   0xB5F8             PUSH     {R3-R7,LR}
   1623              u16 ReadAdr = 0;
   \        0x2   0x2000             MOVS     R0,#+0
   1624              u16 DataLength = 0;
   \        0x4   0x2000             MOVS     R0,#+0
   1625          
   1626              ReadAdr = (u16)(UART1_RXBuff[2] * 256 + UART1_RXBuff[3]);
   \        0x6   0x2080             MOVS     R0,#+128
   \        0x8   0x0040             LSLS     R0,R0,#+1        ;; #+256
   \        0xA   0x....             LDR      R5,??DataTable14_1
   \        0xC   0x78A9             LDRB     R1,[R5, #+2]
   \        0xE   0x4341             MULS     R1,R0,R1
   \       0x10   0x78EA             LDRB     R2,[R5, #+3]
   \       0x12   0x1889             ADDS     R1,R1,R2
   \       0x14   0x466A             MOV      R2,SP
   \       0x16   0x8011             STRH     R1,[R2, #+0]
   1627              DataLength = (u16)(UART1_RXBuff[4] * 256 + UART1_RXBuff[5]);
   \       0x18   0x7929             LDRB     R1,[R5, #+4]
   \       0x1A   0x4341             MULS     R1,R0,R1
   \       0x1C   0x7968             LDRB     R0,[R5, #+5]
   \       0x1E   0x180F             ADDS     R7,R1,R0
   1628                  
   1629              SendLen = 0;
   \       0x20   0x....             LDR      R4,??DataTable14_2
   \       0x22   0x2000             MOVS     R0,#+0
   \       0x24   0x7020             STRB     R0,[R4, #+0]
   1630              SendBuf[SendLen++] = (MBASC_GetSlaveAddr(UART1_RXBuff)) ? UartComm.SlaveAddr : 0x00;
   \       0x26   0x7826             LDRB     R6,[R4, #+0]
   \       0x28   0x0030             MOVS     R0,R6
   \       0x2A   0x1C40             ADDS     R0,R0,#+1
   \       0x2C   0x7020             STRB     R0,[R4, #+0]
   \       0x2E   0x0028             MOVS     R0,R5
   \       0x30   0x....'....        BL       MBASC_GetSlaveAddr
   \       0x34   0x2800             CMP      R0,#+0
   \       0x36   0xD002             BEQ      ??MBASC_Fun41_0
   \       0x38   0x....             LDR      R0,??DataTable14_3
   \       0x3A   0x7800             LDRB     R0,[R0, #+0]
   \       0x3C   0xE000             B        ??MBASC_Fun41_1
   \                     ??MBASC_Fun41_0: (+1)
   \       0x3E   0x2000             MOVS     R0,#+0
   \                     ??MBASC_Fun41_1: (+1)
   \       0x40   0x....             LDR      R1,??DataTable14_4
   \       0x42   0xB2F6             UXTB     R6,R6
   \       0x44   0x5588             STRB     R0,[R1, R6]
   1631              SendBuf[SendLen++] = 0x41;
   \       0x46   0x2041             MOVS     R0,#+65
   \       0x48   0x....             LDR      R1,??DataTable14_4
   \       0x4A   0x7822             LDRB     R2,[R4, #+0]
   \       0x4C   0x5488             STRB     R0,[R1, R2]
   \       0x4E   0x7820             LDRB     R0,[R4, #+0]
   \       0x50   0x1C40             ADDS     R0,R0,#+1
   \       0x52   0x7020             STRB     R0,[R4, #+0]
   1632              SendBuf[SendLen++] = UART1_RXBuff[2];
   \       0x54   0x78A8             LDRB     R0,[R5, #+2]
   \       0x56   0x....             LDR      R1,??DataTable14_4
   \       0x58   0x7822             LDRB     R2,[R4, #+0]
   \       0x5A   0x5488             STRB     R0,[R1, R2]
   \       0x5C   0x7820             LDRB     R0,[R4, #+0]
   \       0x5E   0x1C40             ADDS     R0,R0,#+1
   \       0x60   0x7020             STRB     R0,[R4, #+0]
   1633              SendBuf[SendLen++] = UART1_RXBuff[3];
   \       0x62   0x78E8             LDRB     R0,[R5, #+3]
   \       0x64   0x....             LDR      R1,??DataTable14_4
   \       0x66   0x7822             LDRB     R2,[R4, #+0]
   \       0x68   0x5488             STRB     R0,[R1, R2]
   \       0x6A   0x7820             LDRB     R0,[R4, #+0]
   \       0x6C   0x1C40             ADDS     R0,R0,#+1
   \       0x6E   0x7020             STRB     R0,[R4, #+0]
   1634              SendBuf[SendLen++] = UART1_RXBuff[4];
   \       0x70   0x7928             LDRB     R0,[R5, #+4]
   \       0x72   0x....             LDR      R1,??DataTable14_4
   \       0x74   0x7822             LDRB     R2,[R4, #+0]
   \       0x76   0x5488             STRB     R0,[R1, R2]
   \       0x78   0x7820             LDRB     R0,[R4, #+0]
   \       0x7A   0x1C40             ADDS     R0,R0,#+1
   \       0x7C   0x7020             STRB     R0,[R4, #+0]
   1635              SendBuf[SendLen++] = UART1_RXBuff[5];                          
   \       0x7E   0x7968             LDRB     R0,[R5, #+5]
   \       0x80   0x....             LDR      R1,??DataTable14_4
   \       0x82   0x7822             LDRB     R2,[R4, #+0]
   \       0x84   0x5488             STRB     R0,[R1, R2]
   \       0x86   0x7820             LDRB     R0,[R4, #+0]
   \       0x88   0x1C40             ADDS     R0,R0,#+1
   \       0x8A   0x7020             STRB     R0,[R4, #+0]
   1636              
   1637              if((0x0001 != ReadAdr) || (0 != DataLength))
   \       0x8C   0x4668             MOV      R0,SP
   \       0x8E   0x8800             LDRH     R0,[R0, #+0]
   \       0x90   0x2801             CMP      R0,#+1
   \       0x92   0xD102             BNE      ??MBASC_Fun41_2
   \       0x94   0xB2BF             UXTH     R7,R7
   \       0x96   0x2F00             CMP      R7,#+0
   \       0x98   0xD000             BEQ      ??MBASC_Fun41_3
   1638              {
   1639                  return;
   \                     ??MBASC_Fun41_2: (+1)
   \       0x9A   0xE029             B        ??MBASC_Fun41_4
   1640              }
   1641              else 
   1642              {
   1643                  ProductPara.bFlashWEn = FLASH_WR_ENABLE;
   \                     ??MBASC_Fun41_3: (+1)
   \       0x9C   0x2501             MOVS     R5,#+1
   \       0x9E   0x0028             MOVS     R0,R5
   \       0xA0   0x....             LDR      R1,??DataTable14_5
   \       0xA2   0x70C8             STRB     R0,[R1, #+3]
   1644                  I2C1_WriteByte(EEPROM_ADDRESS, APPEXISTFLAGADDR, 0x0C);
   \       0xA4   0x....             LDR      R6,??DataTable14_6  ;; 0x7ff
   \       0xA6   0x220C             MOVS     R2,#+12
   \       0xA8   0x0031             MOVS     R1,R6
   \       0xAA   0x20A0             MOVS     R0,#+160
   \       0xAC   0x....'....        BL       I2C1_WriteByte
   1645                  if(0x0C == I2C1_ReadByte(EEPROM_ADDRESS, APPEXISTFLAGADDR))
   \       0xB0   0x0031             MOVS     R1,R6
   \       0xB2   0x20A0             MOVS     R0,#+160
   \       0xB4   0x....'....        BL       I2C1_ReadByte
   \       0xB8   0x280C             CMP      R0,#+12
   \       0xBA   0xD110             BNE      ??MBASC_Fun41_5
   1646                  {
   1647                      SendBuf[SendLen++] = MB_RECDATA_SUCCESSED;
   \       0xBC   0x....             LDR      R0,??DataTable14_4
   \       0xBE   0x2100             MOVS     R1,#+0
   \       0xC0   0x7822             LDRB     R2,[R4, #+0]
   \       0xC2   0x5481             STRB     R1,[R0, R2]
   \       0xC4   0x7821             LDRB     R1,[R4, #+0]
   \       0xC6   0x1C49             ADDS     R1,R1,#+1
   \       0xC8   0x7021             STRB     R1,[R4, #+0]
   1648                      MBASC_SendMsg(SendBuf, SendLen);
   \       0xCA   0x7821             LDRB     R1,[R4, #+0]
   \       0xCC   0x....'....        BL       MBASC_SendMsg
   1649                      while(0 != u8SendNum);                                              //等待数据发送完毕，此句要加上，否则执行此功能码是无响应
   \                     ??MBASC_Fun41_6: (+1)
   \       0xD0   0x....             LDR      R0,??DataTable14_7
   \       0xD2   0x7800             LDRB     R0,[R0, #+0]
   \       0xD4   0x2800             CMP      R0,#+0
   \       0xD6   0xD1FB             BNE      ??MBASC_Fun41_6
   1650                      NVIC_SystemReset();    //Initiates a system reset request to reset the MCU.
   \       0xD8   0x....'....        BL       __NVIC_SystemReset
   \       0xDC   0xE008             B        ??MBASC_Fun41_7
   1651                  }
   1652                  else
   1653                  {
   1654                      SendBuf[SendLen++] = MB_RECDATA_FAILED;
   \                     ??MBASC_Fun41_5: (+1)
   \       0xDE   0x....             LDR      R0,??DataTable14_4
   \       0xE0   0x7821             LDRB     R1,[R4, #+0]
   \       0xE2   0x5445             STRB     R5,[R0, R1]
   \       0xE4   0x7821             LDRB     R1,[R4, #+0]
   \       0xE6   0x1C49             ADDS     R1,R1,#+1
   \       0xE8   0x7021             STRB     R1,[R4, #+0]
   1655                      MBASC_SendMsg(SendBuf, SendLen); 
   \       0xEA   0x7821             LDRB     R1,[R4, #+0]
   \       0xEC   0x....'....        BL       MBASC_SendMsg
   1656                  }
   1657              } 
   1658          }     
   \                     ??MBASC_Fun41_7: (+1)
   \                     ??MBASC_Fun41_4: (+1)
   \       0xF0   0xBDF1             POP      {R0,R4-R7,PC}    ;; return
   1659               
   1660          
   1661          //**************************************************************************************************
   1662          // 名称         : MBASC_Function()
   1663          // 创建日期     : 2016-09-05
   1664          // 作者         : 庄明群
   1665          // 功能         : modbus ascii通信处理
   1666          // 输入参数     : 无
   1667          // 输出参数     : 无
   1668          // 返回结果     : 无
   1669          // 注意和说明   : 
   1670          // 修改内容     :  增加校验码错误输出，错误码0x05      2016.09.08
   1671          //                 增加非法数据错误码，错误码0x03（ASCII格式数据，除3A 0D 0A外，其他数据只能为30~39，41~46）    2016.09.10                            
   1672          //**************************************************************************************************

   \                                 In section .text, align 2, keep-with-next
   1673          void MBASC_Function(void)
   1674          {
   \                     MBASC_Function: (+1)
   \        0x0   0xB5F8             PUSH     {R3-R7,LR}
   1675              u8 RecvLen = 0;
   \        0x2   0x2400             MOVS     R4,#+0
   \        0x4   0x0020             MOVS     R0,R4
   \        0x6   0x4669             MOV      R1,SP
   \        0x8   0x7008             STRB     R0,[R1, #+0]
   1676              if(2 == MODBUS_ASCII_RecvData(UART1_RXBuff, &RecvLen))//校验错误
   \        0xA   0x....             LDR      R5,??DataTable14_1
   \        0xC   0x4669             MOV      R1,SP
   \        0xE   0x0028             MOVS     R0,R5
   \       0x10   0x....'....        BL       MODBUS_ASCII_RecvData
   \       0x14   0x2802             CMP      R0,#+2
   \       0x16   0xD062             BEQ      ??MBASC_Function_0
   1677              {
   1678                  return;
   1679              }  
   1680              
   1681              if(RecvLen <= 0)
   \                     ??MBASC_Function_1: (+1)
   \       0x18   0x4668             MOV      R0,SP
   \       0x1A   0x7800             LDRB     R0,[R0, #+0]
   \       0x1C   0x2800             CMP      R0,#+0
   \       0x1E   0xD05E             BEQ      ??MBASC_Function_0
   1682              {
   1683                  return;                                                                 //没有接受到数据，无响应
   1684              }
   1685          
   1686              else if((UartComm.SlaveAddr != MBASC_GetSlaveAddr(UART1_RXBuff))&&
   1687                   (MB_ADDRESS_BROADCAST != MBASC_GetSlaveAddr(UART1_RXBuff)))
   \                     ??MBASC_Function_2: (+1)
   \       0x20   0x0028             MOVS     R0,R5
   \       0x22   0x....'....        BL       MBASC_GetSlaveAddr
   \       0x26   0x....             LDR      R1,??DataTable14_3
   \       0x28   0x7809             LDRB     R1,[R1, #+0]
   \       0x2A   0xB2C0             UXTB     R0,R0
   \       0x2C   0x4281             CMP      R1,R0
   \       0x2E   0xD004             BEQ      ??MBASC_Function_3
   \       0x30   0x0028             MOVS     R0,R5
   \       0x32   0x....'....        BL       MBASC_GetSlaveAddr
   \       0x36   0x2800             CMP      R0,#+0
   \       0x38   0xD151             BNE      ??MBASC_Function_0
   1688              {
   1689                  return;                                                                 //接收的从机地址不对应，无响应
   1690              }
   1691              else
   1692              {
   1693                  switch (MBASC_GetFunCode(UART1_RXBuff))  //判断串口缓冲区第二字节
   \                     ??MBASC_Function_3: (+1)
   \       0x3A   0x0028             MOVS     R0,R5
   \       0x3C   0x....'....        BL       MBASC_GetFunCode
   \       0x40   0x2803             CMP      R0,#+3
   \       0x42   0xD010             BEQ      ??MBASC_Function_4
   \       0x44   0x2804             CMP      R0,#+4
   \       0x46   0xD011             BEQ      ??MBASC_Function_5
   \       0x48   0x2805             CMP      R0,#+5
   \       0x4A   0xD012             BEQ      ??MBASC_Function_6
   \       0x4C   0x2810             CMP      R0,#+16
   \       0x4E   0xD013             BEQ      ??MBASC_Function_7
   \       0x50   0x2826             CMP      R0,#+38
   \       0x52   0xD014             BEQ      ??MBASC_Function_8
   \       0x54   0x2827             CMP      R0,#+39
   \       0x56   0xD015             BEQ      ??MBASC_Function_9
   \       0x58   0x282A             CMP      R0,#+42
   \       0x5A   0xD016             BEQ      ??MBASC_Function_10
   \       0x5C   0x282B             CMP      R0,#+43
   \       0x5E   0xD017             BEQ      ??MBASC_Function_11
   \       0x60   0x2841             CMP      R0,#+65
   \       0x62   0xD018             BEQ      ??MBASC_Function_12
   \       0x64   0xE01A             B        ??MBASC_Function_13
   1694                  {
   1695                    case MB_FUNC_READ_HOLDING_REGISTER:
   1696                      MBASC_Fun03();	                                                //读单个寄存器（单字节数据）
   \                     ??MBASC_Function_4: (+1)
   \       0x66   0x....'....        BL       MBASC_Fun03
   1697                      break;
   \       0x6A   0xE038             B        ??MBASC_Function_14
   1698          
   1699                    case MB_FUNC_READ_INPUT_REGISTER:
   1700                      MBASC_Fun04();	                                                //读双个寄存器（浮点数据）
   \                     ??MBASC_Function_5: (+1)
   \       0x6C   0x....'....        BL       MBASC_Fun04
   1701                      break;
   \       0x70   0xE035             B        ??MBASC_Function_14
   1702          
   1703                    case MB_FUNC_WRITE_SINGLE_COIL:
   1704                      MBASC_Fun05();	                                                //写线圈
   \                     ??MBASC_Function_6: (+1)
   \       0x72   0x....'....        BL       MBASC_Fun05
   1705                      break;
   \       0x76   0xE032             B        ??MBASC_Function_14
   1706          
   1707                    case MB_FUNC_WRITE_MULTIPLE_REGISTERS:
   1708                      MBASC_Fun10();                                                      //写多个寄存器
   \                     ??MBASC_Function_7: (+1)
   \       0x78   0x....'....        BL       MBASC_Fun10
   1709                      break;
   \       0x7C   0xE02F             B        ??MBASC_Function_14
   1710          
   1711                    case 0x26:
   1712                      MBASC_Fun26();                                                      //写多个寄存器
   \                     ??MBASC_Function_8: (+1)
   \       0x7E   0x....'....        BL       MBASC_Fun26
   1713                      break;
   \       0x82   0xE02C             B        ??MBASC_Function_14
   1714                      
   1715                    case 0x27:
   1716                      MBASC_Fun27();                                                      //写多个寄存器
   \                     ??MBASC_Function_9: (+1)
   \       0x84   0x....'....        BL       MBASC_Fun27
   1717                      break;
   \       0x88   0xE029             B        ??MBASC_Function_14
   1718                      
   1719                    case 0x2A:
   1720                      MBASC_Fun2A();                                                      //写多个寄存器
   \                     ??MBASC_Function_10: (+1)
   \       0x8A   0x....'....        BL       MBASC_Fun2A
   1721                      break;
   \       0x8E   0xE026             B        ??MBASC_Function_14
   1722                      
   1723                    case 0x2B:
   1724                      MBASC_Fun2B();                                                      //写多个寄存器
   \                     ??MBASC_Function_11: (+1)
   \       0x90   0x....'....        BL       MBASC_Fun2B
   1725                      break;
   \       0x94   0xE023             B        ??MBASC_Function_14
   1726                      
   1727                    case 0x41:
   1728                      MBASC_Fun41();                                                      //写多个寄存器
   \                     ??MBASC_Function_12: (+1)
   \       0x96   0x....'....        BL       MBASC_Fun41
   1729                      break;
   \       0x9A   0xE020             B        ??MBASC_Function_14
   1730                      
   1731                    default:
   1732                      SendLen = 0;
   \                     ??MBASC_Function_13: (+1)
   \       0x9C   0x....             LDR      R6,??DataTable14_2
   \       0x9E   0x7034             STRB     R4,[R6, #+0]
   1733                      SendBuf[SendLen++] = MBASC_GetSlaveAddr(UART1_RXBuff);
   \       0xA0   0x7834             LDRB     R4,[R6, #+0]
   \       0xA2   0x0020             MOVS     R0,R4
   \       0xA4   0x1C40             ADDS     R0,R0,#+1
   \       0xA6   0x7030             STRB     R0,[R6, #+0]
   \       0xA8   0x....             LDR      R7,??DataTable14_4
   \       0xAA   0x0028             MOVS     R0,R5
   \       0xAC   0x....'....        BL       MBASC_GetSlaveAddr
   \       0xB0   0xB2E4             UXTB     R4,R4
   \       0xB2   0x5538             STRB     R0,[R7, R4]
   1734                      SendBuf[SendLen++] = 0x80 | (u8)MBASC_GetFunCode(UART1_RXBuff);
   \       0xB4   0x7834             LDRB     R4,[R6, #+0]
   \       0xB6   0x0020             MOVS     R0,R4
   \       0xB8   0x1C40             ADDS     R0,R0,#+1
   \       0xBA   0x7030             STRB     R0,[R6, #+0]
   \       0xBC   0x0028             MOVS     R0,R5
   \       0xBE   0x....'....        BL       MBASC_GetFunCode
   \       0xC2   0x2180             MOVS     R1,#+128
   \       0xC4   0x4301             ORRS     R1,R1,R0
   \       0xC6   0xB2E4             UXTB     R4,R4
   \       0xC8   0x5539             STRB     R1,[R7, R4]
   1735                      SendBuf[SendLen++] = MB_EX_ILLEGAL_FUNCTION;
   \       0xCA   0x2001             MOVS     R0,#+1
   \       0xCC   0x7831             LDRB     R1,[R6, #+0]
   \       0xCE   0x5478             STRB     R0,[R7, R1]
   \       0xD0   0x7830             LDRB     R0,[R6, #+0]
   \       0xD2   0x1C40             ADDS     R0,R0,#+1
   \       0xD4   0x7030             STRB     R0,[R6, #+0]
   1736                      MBASC_SendMsg(SendBuf, SendLen);
   \       0xD6   0x7831             LDRB     R1,[R6, #+0]
   \       0xD8   0x0038             MOVS     R0,R7
   \       0xDA   0x....'....        BL       MBASC_SendMsg
   1737                      break;
   1738                   }
   1739               }
   1740          }
   \                     ??MBASC_Function_14: (+1)
   \                     ??MBASC_Function_0: (+1)
   \       0xDE   0xBDF1             POP      {R0,R4-R7,PC}    ;; return
   1741          
   1742          //**************************************************************************************************
   1743          // 名称         : MBASC_AutoUpLoadFrame()
   1744          // 创建日期     : 2016-09-014
   1745          // 作者         : 梅梦醒
   1746          // 功能         : modbus ascii格式自动上传信息
   1747          // 输入参数     : 无
   1748          // 输出参数     : 无
   1749          // 返回结果     : 无
   1750          // 注意和说明   : 
   1751          // 修改内容     : 1.修改上传数据格式，加上0x45(从机地址)   0x04(功能码)   寄存器数量*2(8*2)  
   1752          //                2.按照协议修改数据发送格式   2016.09.12
   1753          //**************************************************************************************************
   1754          #define AutoUpLoadRegisterNum       4                                          //自动上传数据 寄存器个数*2  

   \                                 In section .text, align 2, keep-with-next
   1755          void MBASC_AutoUpLoadFrame(void)
   1756          {
   \                     MBASC_AutoUpLoadFrame: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   1757           
   1758              SendLen = 0;
   \        0x2   0x....             LDR      R1,??DataTable14_2
   \        0x4   0x2000             MOVS     R0,#+0
   \        0x6   0x7008             STRB     R0,[R1, #+0]
   1759              SendBuf[SendLen++] = UartComm.SlaveAddr;
   \        0x8   0x....             LDR      R0,??DataTable14_4
   \        0xA   0x....             LDR      R2,??DataTable14_3
   \        0xC   0x7812             LDRB     R2,[R2, #+0]
   \        0xE   0x780B             LDRB     R3,[R1, #+0]
   \       0x10   0x54C2             STRB     R2,[R0, R3]
   \       0x12   0x780A             LDRB     R2,[R1, #+0]
   \       0x14   0x1C52             ADDS     R2,R2,#+1
   \       0x16   0x700A             STRB     R2,[R1, #+0]
   1760              SendBuf[SendLen++] = MB_FUNC_READ_INPUT_REGISTER;                           //04功能码
   \       0x18   0x2204             MOVS     R2,#+4
   \       0x1A   0x780B             LDRB     R3,[R1, #+0]
   \       0x1C   0x54C2             STRB     R2,[R0, R3]
   \       0x1E   0x780B             LDRB     R3,[R1, #+0]
   \       0x20   0x1C5B             ADDS     R3,R3,#+1
   \       0x22   0x700B             STRB     R3,[R1, #+0]
   1761              SendBuf[SendLen++] = AutoUpLoadRegisterNum;		                //寄存器数量*2
   \       0x24   0x780B             LDRB     R3,[R1, #+0]
   \       0x26   0x54C2             STRB     R2,[R0, R3]
   \       0x28   0x780A             LDRB     R2,[R1, #+0]
   \       0x2A   0x1C52             ADDS     R2,R2,#+1
   \       0x2C   0x700A             STRB     R2,[R1, #+0]
   1762               
   1763           
   1764               SendBuf[SendLen++] = (uint16_t)g_wRADValue>>8;
   \       0x2E   0x....             LDR      R2,??DataTable14_8
   \       0x30   0x8813             LDRH     R3,[R2, #+0]
   \       0x32   0xB29B             UXTH     R3,R3
   \       0x34   0x0A1B             LSRS     R3,R3,#+8
   \       0x36   0x780C             LDRB     R4,[R1, #+0]
   \       0x38   0x5503             STRB     R3,[R0, R4]
   \       0x3A   0x780B             LDRB     R3,[R1, #+0]
   \       0x3C   0x1C5B             ADDS     R3,R3,#+1
   \       0x3E   0x700B             STRB     R3,[R1, #+0]
   1765               SendBuf[SendLen++] =  (uint16_t)g_wRADValue & 0x00FF;
   \       0x40   0x8812             LDRH     R2,[R2, #+0]
   \       0x42   0x780B             LDRB     R3,[R1, #+0]
   \       0x44   0x54C2             STRB     R2,[R0, R3]
   \       0x46   0x780A             LDRB     R2,[R1, #+0]
   \       0x48   0x1C52             ADDS     R2,R2,#+1
   \       0x4A   0x700A             STRB     R2,[R1, #+0]
   1766               SendBuf[SendLen++] = ADXL345_BUF[6];
   \       0x4C   0x....             LDR      R2,??DataTable14_9
   \       0x4E   0x7993             LDRB     R3,[R2, #+6]
   \       0x50   0x780C             LDRB     R4,[R1, #+0]
   \       0x52   0x5503             STRB     R3,[R0, R4]
   \       0x54   0x780B             LDRB     R3,[R1, #+0]
   \       0x56   0x1C5B             ADDS     R3,R3,#+1
   \       0x58   0x700B             STRB     R3,[R1, #+0]
   1767               SendBuf[SendLen++] = ADXL345_BUF[7];
   \       0x5A   0x79D3             LDRB     R3,[R2, #+7]
   \       0x5C   0x780C             LDRB     R4,[R1, #+0]
   \       0x5E   0x5503             STRB     R3,[R0, R4]
   \       0x60   0x780B             LDRB     R3,[R1, #+0]
   \       0x62   0x1C5B             ADDS     R3,R3,#+1
   \       0x64   0x700B             STRB     R3,[R1, #+0]
   1768               SendBuf[SendLen++] = ADXL345_BUF[8];
   \       0x66   0x7A13             LDRB     R3,[R2, #+8]
   \       0x68   0x780C             LDRB     R4,[R1, #+0]
   \       0x6A   0x5503             STRB     R3,[R0, R4]
   \       0x6C   0x780B             LDRB     R3,[R1, #+0]
   \       0x6E   0x1C5B             ADDS     R3,R3,#+1
   \       0x70   0x700B             STRB     R3,[R1, #+0]
   1769               SendBuf[SendLen++] = ADXL345_BUF[9]; 
   \       0x72   0x7A53             LDRB     R3,[R2, #+9]
   \       0x74   0x780C             LDRB     R4,[R1, #+0]
   \       0x76   0x5503             STRB     R3,[R0, R4]
   \       0x78   0x780B             LDRB     R3,[R1, #+0]
   \       0x7A   0x1C5B             ADDS     R3,R3,#+1
   \       0x7C   0x700B             STRB     R3,[R1, #+0]
   1770               SendBuf[SendLen++] = ADXL345_BUF[10];
   \       0x7E   0x7A93             LDRB     R3,[R2, #+10]
   \       0x80   0x780C             LDRB     R4,[R1, #+0]
   \       0x82   0x5503             STRB     R3,[R0, R4]
   \       0x84   0x780B             LDRB     R3,[R1, #+0]
   \       0x86   0x1C5B             ADDS     R3,R3,#+1
   \       0x88   0x700B             STRB     R3,[R1, #+0]
   1771               SendBuf[SendLen++] = ADXL345_BUF[11];
   \       0x8A   0x7AD2             LDRB     R2,[R2, #+11]
   \       0x8C   0x780B             LDRB     R3,[R1, #+0]
   \       0x8E   0x54C2             STRB     R2,[R0, R3]
   \       0x90   0x780A             LDRB     R2,[R1, #+0]
   \       0x92   0x1C52             ADDS     R2,R2,#+1
   \       0x94   0x700A             STRB     R2,[R1, #+0]
   1772            
   1773          
   1774              MBASC_SendMsg_NoLimit(SendBuf, SendLen);
   \       0x96   0x7809             LDRB     R1,[R1, #+0]
   \       0x98   0x....'....        BL       MBASC_SendMsg_NoLimit
   1775          }
   \       0x9C   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3:
   \        0x0   0x05FA'0004        DC32     0x5fa0004

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_1:
   \        0x0   0xE000'ED0C        DC32     0xe000ed0c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_2:
   \        0x0   0x....'....        DC32     UartComm

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_3:
   \        0x0   0x....'....        DC32     SendLen

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_4:
   \        0x0   0x....'....        DC32     SendBuf

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4:
   \        0x0   0x....'....        DC32     ProductPara

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_1:
   \        0x0   0x....'....        DC32     UserParam

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_2:
   \        0x0   0x42C8'0000        DC32     0x42c80000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_3:
   \        0x0   0x....'....        DC32     RunVar+0x2C

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_4:
   \        0x0   0x....'....        DC32     RunVar

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_5:
   \        0x0   0x....'....        DC32     Speed

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_6:
   \        0x0   0x....'....        DC32     Acc_Flag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_7:
   \        0x0   0x0000'043E        DC32     0x43e

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_8:
   \        0x0   0x....'....        DC32     UART1_RXBuff

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_9:
   \        0x0   0x....'....        DC32     SendBuf

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5:
   \        0x0   0x....'....        DC32     UART1_RXBuff

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_1:
   \        0x0   0x....'....        DC32     UartComm

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_2:
   \        0x0   0x....'....        DC32     SendLen

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_3:
   \        0x0   0x....'....        DC32     SendBuf

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_4:
   \        0x0   0x0000'7133        DC32     0x7133

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_5:
   \        0x0   0x0000'710C        DC32     0x710c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_6:
   \        0x0   0x0000'710F        DC32     0x710f

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_7:
   \        0x0   0x0000'710E        DC32     0x710e

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_8:
   \        0x0   0x0000'7111        DC32     0x7111

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_9:
   \        0x0   0x0000'7114        DC32     0x7114

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_10:
   \        0x0   0x0000'7120        DC32     0x7120

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_11:
   \        0x0   0x....'....        DC32     RunVar+0x2C

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_12:
   \        0x0   0x....'....        DC32     g_cyWorkState

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_13:
   \        0x0   0x....'....        DC32     g_cyRecordShovelNum

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_14:
   \        0x0   0x....'....        DC32     UserParam

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6:
   \        0x0   0x....'....        DC32     g_wRADValue

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_1:
   \        0x0   0x....'....        DC32     myOutData

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_2:
   \        0x0   0x....'....        DC32     ADXL345_BUF

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_3:
   \        0x0   0x....'....        DC32     UART1_RXBuff

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_4:
   \        0x0   0x....'....        DC32     UartComm

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_5:
   \        0x0   0x....'....        DC32     SendLen

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_6:
   \        0x0   0x....'....        DC32     SendBuf

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_7:
   \        0x0   0x0000'7150        DC32     0x7150

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_8:
   \        0x0   0x0000'7153        DC32     0x7153

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_9:
   \        0x0   0x....'....        DC32     ProductPara

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_10:
   \        0x0   0x....'....        DC32     Cur_Param

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_11:
   \        0x0   0x....'....        DC32     User_Default_Param

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_12:
   \        0x0   0x....'....        DC32     g_cyWorkState

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_13:
   \        0x0   0x....'....        DC32     RunVar

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7:
   \        0x0   0x....'....        DC32     ProductPara

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_1:
   \        0x0   0x....'....        DC32     Speed

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_2:
   \        0x0   0x....'....        DC32     g_wRADValue

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_3:
   \        0x0   0x....'....        DC32     myOutData

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_4:
   \        0x0   0x....'....        DC32     Acc_Flag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_5:
   \        0x0   0x....'....        DC32     Acc_Flag_Cnt

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_6:
   \        0x0   0x....'....        DC32     AD_Buff

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_7:
   \        0x0   0x....'....        DC32     Weight_Buff

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_8:
   \        0x0   0x0000'043E        DC32     0x43e

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_9:
   \        0x0   0x....'....        DC32     u8SendNum

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8:
   \        0x0   0x....'....        DC32     UartComm

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_1:
   \        0x0   0x....'....        DC32     UART1_RXBuff

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_2:
   \        0x0   0x....'....        DC32     SendLen

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_3:
   \        0x0   0x....'....        DC32     SendBuf

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_4:
   \        0x0   0x0000'7191        DC32     0x7191

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_5:
   \        0x0   0x0000'7190        DC32     0x7190

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_6:
   \        0x0   0x0000'71A1        DC32     0x71a1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_7:
   \        0x0   0x0000'71A0        DC32     0x71a0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_8:
   \        0x0   0x0000'71B1        DC32     0x71b1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_9:
   \        0x0   0x0000'71B0        DC32     0x71b0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_10:
   \        0x0   0x0000'71C1        DC32     0x71c1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_11:
   \        0x0   0x0000'71C0        DC32     0x71c0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_12:
   \        0x0   0x0000'71D1        DC32     0x71d1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9:
   \        0x0   0x....'....        DC32     ProductPara

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_1:
   \        0x0   0x....'....        DC32     UART1_RXBuff

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_2:
   \        0x0   0x....'....        DC32     UartComm

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_3:
   \        0x0   0x....'....        DC32     SendLen

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_4:
   \        0x0   0x....'....        DC32     SendBuf

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_5:
   \        0x0   0x0000'7191        DC32     0x7191

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_6:
   \        0x0   0x0000'7190        DC32     0x7190

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_7:
   \        0x0   0x0000'71A1        DC32     0x71a1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_8:
   \        0x0   0x0000'71A0        DC32     0x71a0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_9:
   \        0x0   0x0000'71B1        DC32     0x71b1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_10:
   \        0x0   0x0000'71B0        DC32     0x71b0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_11:
   \        0x0   0x0000'71C1        DC32     0x71c1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_12:
   \        0x0   0x0000'71C0        DC32     0x71c0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_13:
   \        0x0   0x0000'71D1        DC32     0x71d1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10:
   \        0x0   0x....'....        DC32     UART1_RXBuff

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_1:
   \        0x0   0x....'....        DC32     UartComm

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_2:
   \        0x0   0x....'....        DC32     SendLen

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_3:
   \        0x0   0x....'....        DC32     SendBuf

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_4:
   \        0x0   0x0000'71E0        DC32     0x71e0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_5:
   \        0x0   0x0000'71E7        DC32     0x71e7

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_6:
   \        0x0   0x....'....        DC32     ProductPara

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_7:
   \        0x0   0xFFFF'8E20        DC32     0xffff8e20

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_8:
   \        0x0   0xFFFF'8E21        DC32     0xffff8e21

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11:
   \        0x0   0x0000'0281        DC32     0x281

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12:
   \        0x0   0x0000'02C1        DC32     0x2c1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_1:
   \        0x0   0x0000'0301        DC32     0x301

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_2:
   \        0x0   0x0000'0341        DC32     0x341

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14:
   \        0x0   0x0000'0381        DC32     0x381

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_1:
   \        0x0   0x....'....        DC32     UART1_RXBuff

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_2:
   \        0x0   0x....'....        DC32     SendLen

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_3:
   \        0x0   0x....'....        DC32     UartComm

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_4:
   \        0x0   0x....'....        DC32     SendBuf

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_5:
   \        0x0   0x....'....        DC32     ProductPara

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_6:
   \        0x0   0x0000'07FF        DC32     0x7ff

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_7:
   \        0x0   0x....'....        DC32     u8SendNum

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_8:
   \        0x0   0x....'....        DC32     g_wRADValue

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_9:
   \        0x0   0x....'....        DC32     ADXL345_BUF

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   MBASC_AutoUpLoadFrame
         8   -> MBASC_SendMsg_NoLimit
      32   MBASC_Fun03
        32   -> ArrayToUshort
        32   -> I2C1_ReadNBytes
        32   -> MBASC_GetSlaveAddr
        32   -> MBASC_SendErr
        32   -> MBASC_SendMsg
        32   -> __aeabi_f2uiz
        32   -> __aeabi_fadd
        32   -> __aeabi_fmul
        32   -> __aeabi_memcpy
      24   MBASC_Fun04
        24   -> MBASC_GetSlaveAddr
        24   -> MBASC_SendErr
        24   -> MBASC_SendMsg
      24   MBASC_Fun05
        24   -> I2C1_WNBytesMul3T
        24   -> MBASC_GetSlaveAddr
        24   -> MBASC_SendErr
        24   -> MBASC_SendMsg
        24   -> Rd_Dev_Param
     120   MBASC_Fun10
       120   -> ArrayToUshort
       120   -> HexToUlong
       120   -> I2C1_WNBytesMul3T
       120   -> I2C1_WriteNBytes
       120   -> MBASC_GetSlaveAddr
       120   -> MBASC_SendErr
       120   -> MBASC_SendMsg
       120   -> Runing
       120   -> UART1_Init
       120   -> UshortToArray
       120   -> __aeabi_d2f
       120   -> __aeabi_dadd
       120   -> __aeabi_ddiv
       120   -> __aeabi_i2d
       120   -> __aeabi_memmove
       120   -> __aeabi_memset
       120   -> floatToHexArray
       120 __aeabi_cfcmple
       120 __aeabi_cfrcmple
      32   MBASC_Fun26
        32   -> MBASC_GetSlaveAddr
        32   -> MBASC_SendErr
        32   -> MBASC_SendMsg
      24   MBASC_Fun27
        24   -> MBASC_GetSlaveAddr
        24   -> MBASC_SendErr
        24   -> MBASC_SendMsg
      48   MBASC_Fun2A
        48   -> I2C1_WriteNBytes
        48   -> MBASC_GetSlaveAddr
        48   -> MBASC_SendErr
        48   -> MBASC_SendMsg
        48   -> __aeabi_memset
      32   MBASC_Fun2B
        32   -> I2C1_ReadByte
        32   -> MBASC_GetSlaveAddr
        32   -> MBASC_SendErr
        32   -> MBASC_SendMsg
      24   MBASC_Fun41
        24   -> I2C1_ReadByte
        24   -> I2C1_WriteByte
        24   -> MBASC_GetSlaveAddr
        24   -> MBASC_SendMsg
        24   -> __NVIC_SystemReset
      24   MBASC_Function
        24   -> MBASC_Fun03
        24   -> MBASC_Fun04
        24   -> MBASC_Fun05
        24   -> MBASC_Fun10
        24   -> MBASC_Fun26
        24   -> MBASC_Fun27
        24   -> MBASC_Fun2A
        24   -> MBASC_Fun2B
        24   -> MBASC_Fun41
        24   -> MBASC_GetFunCode
        24   -> MBASC_GetSlaveAddr
        24   -> MBASC_SendMsg
        24   -> MODBUS_ASCII_RecvData
       0   MBASC_GetFunCode
       0   MBASC_GetSlaveAddr
       8   MBASC_SendErr
         8   -> MBASC_SendMsg
      16   MBASC_SendMsg
        16   -> Delay_Ms
        16   -> MBASC_GetSlaveAddr
        16   -> MODBUS_ASCII_SendData
      16   MBASC_SendMsg_NoLimit
        16   -> Delay_Ms
        16   -> MODBUS_ASCII_SendData
       4   __NVIC_SystemReset


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable10
       4  ??DataTable10_1
       4  ??DataTable10_2
       4  ??DataTable10_3
       4  ??DataTable10_4
       4  ??DataTable10_5
       4  ??DataTable10_6
       4  ??DataTable10_7
       4  ??DataTable10_8
       4  ??DataTable11
       4  ??DataTable12
       4  ??DataTable12_1
       4  ??DataTable12_2
       4  ??DataTable14
       4  ??DataTable14_1
       4  ??DataTable14_2
       4  ??DataTable14_3
       4  ??DataTable14_4
       4  ??DataTable14_5
       4  ??DataTable14_6
       4  ??DataTable14_7
       4  ??DataTable14_8
       4  ??DataTable14_9
       4  ??DataTable3
       4  ??DataTable3_1
       4  ??DataTable3_2
       4  ??DataTable3_3
       4  ??DataTable3_4
       4  ??DataTable4
       4  ??DataTable4_1
       4  ??DataTable4_2
       4  ??DataTable4_3
       4  ??DataTable4_4
       4  ??DataTable4_5
       4  ??DataTable4_6
       4  ??DataTable4_7
       4  ??DataTable4_8
       4  ??DataTable4_9
       4  ??DataTable5
       4  ??DataTable5_1
       4  ??DataTable5_10
       4  ??DataTable5_11
       4  ??DataTable5_12
       4  ??DataTable5_13
       4  ??DataTable5_14
       4  ??DataTable5_2
       4  ??DataTable5_3
       4  ??DataTable5_4
       4  ??DataTable5_5
       4  ??DataTable5_6
       4  ??DataTable5_7
       4  ??DataTable5_8
       4  ??DataTable5_9
       4  ??DataTable6
       4  ??DataTable6_1
       4  ??DataTable6_10
       4  ??DataTable6_11
       4  ??DataTable6_12
       4  ??DataTable6_13
       4  ??DataTable6_2
       4  ??DataTable6_3
       4  ??DataTable6_4
       4  ??DataTable6_5
       4  ??DataTable6_6
       4  ??DataTable6_7
       4  ??DataTable6_8
       4  ??DataTable6_9
       4  ??DataTable7
       4  ??DataTable7_1
       4  ??DataTable7_2
       4  ??DataTable7_3
       4  ??DataTable7_4
       4  ??DataTable7_5
       4  ??DataTable7_6
       4  ??DataTable7_7
       4  ??DataTable7_8
       4  ??DataTable7_9
       4  ??DataTable8
       4  ??DataTable8_1
       4  ??DataTable8_10
       4  ??DataTable8_11
       4  ??DataTable8_12
       4  ??DataTable8_2
       4  ??DataTable8_3
       4  ??DataTable8_4
       4  ??DataTable8_5
       4  ??DataTable8_6
       4  ??DataTable8_7
       4  ??DataTable8_8
       4  ??DataTable8_9
       4  ??DataTable9
       4  ??DataTable9_1
       4  ??DataTable9_10
       4  ??DataTable9_11
       4  ??DataTable9_12
       4  ??DataTable9_13
       4  ??DataTable9_2
       4  ??DataTable9_3
       4  ??DataTable9_4
       4  ??DataTable9_5
       4  ??DataTable9_6
       4  ??DataTable9_7
       4  ??DataTable9_8
       4  ??DataTable9_9
     200  AD_Buff
       1  Acc_Flag
       1  Acc_Flag_Cnt
     158  MBASC_AutoUpLoadFrame
     904  MBASC_Fun03
     734  MBASC_Fun04
     306  MBASC_Fun05
   2'312  MBASC_Fun10
     592  MBASC_Fun26
     644  MBASC_Fun27
     668  MBASC_Fun2A
   1'094  MBASC_Fun2B
     242  MBASC_Fun41
     224  MBASC_Function
       4  MBASC_GetFunCode
       4  MBASC_GetSlaveAddr
      48  MBASC_SendErr
      42  MBASC_SendMsg
      32  MBASC_SendMsg_NoLimit
     256  SendBuf
     200  Weight_Buff
      20  __NVIC_SystemReset

 
   658 bytes in section .bss
 8'444 bytes in section .text
 
 8'444 bytes of CODE memory
   658 bytes of DATA memory

Errors: none
Warnings: none
